import{_ as r,M as p,p as c,q as d,R as n,t as e,N as s,U as a,a1 as i}from"./framework-efe98465.js";const u={},h=n("h1",{id:"download-stream",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#download-stream","aria-hidden":"true"},"#"),e(" Download Stream")],-1),m=n("code",null,"DownloadStream",-1),k={href:"https://laravel.com/docs/12.x/responses#streamed-downloads",target:"_blank",rel:"noopener noreferrer"},g=n("code",null,"Range",-1),f=n("li",null,"The entire attachment.",-1),v={href:"https://httpwg.org/specs/rfc9110.html#partial.single",target:"_blank",rel:"noopener noreferrer"},_=n("em",null,"a single part of the attachment",-1),b={href:"https://httpwg.org/specs/rfc9110.html#partial.multipart",target:"_blank",rel:"noopener noreferrer"},w=n("em",null,"multiple parts of the attachment",-1),y=n("p",null,"This chapter briefly highlights a few areas that you should be familiar with, before using the helper.",-1),x=n("hr",null,null,-1),S={class:"table-of-contents"},C=n("h2",{id:"create-streamed-download-response",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#create-streamed-download-response","aria-hidden":"true"},"#"),e(" Create Streamed Download Response")],-1),R=n("code",null,"for()",-1),T=i(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>Facades<span class="token punctuation">\\</span>Route</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>ETags<span class="token punctuation">\\</span>Preconditions<span class="token punctuation">\\</span>Responses<span class="token punctuation">\\</span>DownloadStream</span><span class="token punctuation">;</span>

<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/downloads/{file}&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">DownloadFileRequest</span> <span class="token variable">$request</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token keyword">return</span> <span class="token class-name static-context">DownloadStream</span><span class="token operator">::</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token property">resource</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;file&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),q=n("h2",{id:"attachment-types",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#attachment-types","aria-hidden":"true"},"#"),e(" Attachment Types")],-1),D=n("code",null,"DownloadStream",-1),A=n("em",null,[e("e.g. for the "),n("code",null,"ResourceContext"),e(" data")],-1),F=n("code",null,"resource",-1),I={href:"https://www.php.net/manual/en/function.fopen",target:"_blank",rel:"noopener noreferrer"},$=n("code",null,"fopen()",-1),H={href:"https://www.php-fig.org/psr/psr-7/#34-psrhttpmessagestreaminterface",target:"_blank",rel:"noopener noreferrer"},L=n("code",null,"StreamInterface",-1),M={href:"https://www.php.net/manual/en/class.splfileinfo",target:"_blank",rel:"noopener noreferrer"},P=n("code",null,"SplFileInfo",-1),U=n("code",null,"\\Illuminate\\Http\\File",-1),N=n("li",null,"Path to existing file.",-1),B=i(`<p>If the attachment type is not supported, then a <code>RuntimeException</code> is thrown, when the helper attempts to create a response.</p><h3 id="custom" tabindex="-1"><a class="header-anchor" href="#custom" aria-hidden="true">#</a> Custom</h3><p>Should the default provided attachment types not cover your needs, then you can specify a callback to resolve a file stream. This can be useful when you have the contents of a file (<em>e.g. from database</em>), but not an actual physical file.</p><p>Use <code>setResolveStreamCallback()</code> to specify a custom resolve method. The callback <strong>MUST</strong> return a valid <code>FileStream</code> instance.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Streams<span class="token punctuation">\\</span>FileStream</span><span class="token punctuation">;</span>

<span class="token variable">$response</span> <span class="token operator">=</span> <span class="token class-name static-context">DownloadStream</span><span class="token operator">::</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token property">resource</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">setResolveStreamCallback</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token keyword type-hint">mixed</span> <span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name static-context">FileStream</span><span class="token operator">::</span><span class="token function">openTemporary</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token operator">-&gt;</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span>
                <span class="token operator">-&gt;</span><span class="token function">positionToStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="content-disposition" tabindex="-1"><a class="header-anchor" href="#content-disposition" aria-hidden="true">#</a> Content Disposition</h2><p>The <code>Content-Disposition</code> is by default set to &quot;attachment&quot; with a filename. This means that browser clients are forced to download the file. If you wish to allow browsers to display the contents of the file directly in the website, then you can do so via the <code>asInlineDisposition()</code> method.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$response</span> <span class="token operator">=</span> <span class="token class-name static-context">DownloadStream</span><span class="token operator">::</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token property">resource</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">asInlineDisposition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,8),O={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Disposition",target:"_blank",rel:"noopener noreferrer"},E=n("code",null,"Content-Disposition",-1),z=i(`<h2 id="headers" tabindex="-1"><a class="header-anchor" href="#headers" aria-hidden="true">#</a> Headers</h2><p>To set custom headers, you can use the <code>withHeaders()</code> or <code>header()</code> methods.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$response</span> <span class="token operator">=</span> <span class="token class-name static-context">DownloadStream</span><span class="token operator">::</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token property">resource</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">withHeaders</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
        <span class="token string single-quoted-string">&#39;X-Foo&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;bar&#39;</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;X-Author&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Charlotte Kennedy&#39;</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span>

    <span class="token comment">// Or,...</span>
    <span class="token operator">-&gt;</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;X-Contact&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;charlotte.kennedy@exmaple.org&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="accept-ranges" tabindex="-1"><a class="header-anchor" href="#accept-ranges" aria-hidden="true">#</a> Accept Ranges</h2>`,4),V=n("code",null,"bytes",-1),W={href:"https://httpwg.org/specs/rfc9110.html#field.accept-ranges",target:"_blank",rel:"noopener noreferrer"},X=n("code",null,"Accept-Ranges",-1),G=n("code",null,"DownloadStream",-1),J=n("code",null,"Range",-1),K=i('<h3 id="other-units" tabindex="-1"><a class="header-anchor" href="#other-units" aria-hidden="true">#</a> Other Units</h3><div class="custom-container danger"><p class="custom-container-title">Recommendation !</p><p>Despite the possibility to specify other values for <code>Accept-Ranges</code> header, it is <strong>highly discouraged</strong> to use any other value than <code>bytes</code>. You risk confusing Http clients and possibly cause response processing conflicts.</p><p><em>Only if you are 100% in control of your clients, e.g. in a closed system, and in full control of how attachments are requested, then you could use a different kind of unit.</em></p></div>',2),Y=n("code",null,"withAcceptRanges()",-1),j=n("code",null,"bytes",-1),Q=i(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$response</span> <span class="token operator">=</span> <span class="token class-name static-context">DownloadStream</span><span class="token operator">::</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token property">resource</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">withAcceptRanges</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;kilobytes&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>From the above example, if a single range is requested, then the streamed download response could look something like this:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>HTTP/1.1 206 Partial Content
Date: Fri, 05 Feb 2023 10:05:24 GMT
Last-Modified: Mon, 30 Jan 2023 11:06:13 GMT
Content-Range: kilobytes 0-2/6
Content-Length: 3000
Content-Type: plain/text
Content-Disposition: attachment; filename=contacts.txt

(3000 bytes of partial text file... not shown here)
</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),Z=n("code",null,"Content-Range",-1),nn=n("code",null,"Content-Length",-1),en={href:"https://httpwg.org/specs/rfc9110.html#field.content-length",target:"_blank",rel:"noopener noreferrer"},sn=n("p",null,[n("em",null,"[...] Content-Length is used for message delimitation in HTTP/1.1, its field value can impact how the message is parsed by downstream recipients [...] If the message is forwarded by a downstream intermediary, a Content-Length field value that is inconsistent with the received message framing might cause a security failure due to request smuggling or response splitting [...]")],-1),an=n("code",null,"Content-Length",-1),tn={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Length",target:"_blank",rel:"noopener noreferrer"},on=n("strong",null,[n("em",null,"always specified in bytes")],-1),ln=n("code",null,"Content-Length",-1),pn=n("h2",{id:"onward",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#onward","aria-hidden":"true"},"#"),e(" Onward")],-1),rn=n("p",null,[e("For more information about the "),n("code",null,"DownloadStream"),e(", please review the helper's source code.")],-1);function cn(dn,un){const t=p("ExternalLinkIcon"),o=p("router-link"),l=p("RouterLink");return c(),d("div",null,[h,n("p",null,[e("The "),m,e(" is a response helper that is able to create a "),n("a",k,[e("streamed download response"),s(t)]),e(" for an attachment. Whenever a "),g,e(" is requested, the helper will create either of the following stream download responses:")]),n("ul",null,[f,n("li",null,[n("a",v,[e("A single part"),s(t)]),e(" ("),_,e(").")]),n("li",null,[n("a",b,[e("Multiple parts"),s(t)]),e(" ("),w,e(").")])]),y,x,n("nav",S,[n("ul",null,[n("li",null,[s(o,{to:"#create-streamed-download-response"},{default:a(()=>[e("Create Streamed Download Response")]),_:1})]),n("li",null,[s(o,{to:"#attachment-types"},{default:a(()=>[e("Attachment Types")]),_:1}),n("ul",null,[n("li",null,[s(o,{to:"#custom"},{default:a(()=>[e("Custom")]),_:1})])])]),n("li",null,[s(o,{to:"#content-disposition"},{default:a(()=>[e("Content Disposition")]),_:1})]),n("li",null,[s(o,{to:"#headers"},{default:a(()=>[e("Headers")]),_:1})]),n("li",null,[s(o,{to:"#accept-ranges"},{default:a(()=>[e("Accept Ranges")]),_:1}),n("ul",null,[n("li",null,[s(o,{to:"#other-units"},{default:a(()=>[e("Other Units")]),_:1})])])]),n("li",null,[s(o,{to:"#onward"},{default:a(()=>[e("Onward")]),_:1})])])]),C,n("p",null,[e("By using the "),R,e(" method, you can create a new download stream directly for your "),s(l,{to:"/archive/current/etags/evaluator/resource-context.html"},{default:a(()=>[e("Resource Content")]),_:1}),e(".")]),T,n("p",null,[e("For a more complete example, please review the "),s(l,{to:"/archive/current/etags/evaluator/resource-context.html#files-and-range-support"},{default:a(()=>[e("Files and Range Support")]),_:1}),e(" section.")]),q,n("p",null,[e("Internally, the "),D,e(" attempts to open a "),s(l,{to:"/archive/current/streams/"},{default:a(()=>[e("File Stream")]),_:1}),e(" for the given attachment ("),A,e('). As such, the following types of "attachments" are supported:')]),n("ul",null,[n("li",null,[e("A file "),F,e(" from "),n("a",I,[$,s(t)]),e(".")]),n("li",null,[e("A "),s(l,{to:"/archive/current/streams/"},{default:a(()=>[e("File Stream")]),_:1}),e(" instance.")]),n("li",null,[e("A "),n("a",H,[e("Psr stream ("),L,e(")"),s(t)]),e(".")]),n("li",null,[n("a",M,[P,s(t)]),e(" instance, e.g. "),U,e(".")]),N]),B,n("p",null,[e("See "),n("a",O,[e("Mozilla's documentation"),s(t)]),e(" for additional information about "),E,e(".")]),z,n("p",null,[e("By default, "),V,e(" is set as the "),n("a",W,[X,s(t)]),e(" header value. Consequently, the "),G,e(" helper, as well as "),s(l,{to:"/archive/current/etags/evaluator/rfc9110/if-range.html"},{default:a(()=>[e("If-Range")]),_:1}),e(" and "),s(l,{to:"/archive/current/etags/evaluator/extensions/range.html"},{default:a(()=>[e("Range")]),_:1}),e(" preconditions, will process an attachment's bytes, when one or more ranges are requested via the "),J,e(" header.")]),K,n("p",null,[e("To specify a different unit as acceptable range, use "),Y,e(". The implementation supports all units that can be converted to and from "),j,e(". See "),s(l,{to:"/archive/current/utils/memory.html"},{default:a(()=>[e("Memory Util")]),_:1}),e(" for details.")]),Q,n("p",null,[e("Notice that the "),Z,e(" is specified in kilobytes, whereas the "),nn,e(" is in bytes! According to "),n("a",en,[e("RFC 9110"),s(t)]),e(":")]),sn,n("p",null,[e("In other words, the "),an,e(" does not contain any information about what unit type the value represents. But it bares significance for clients. According to "),n("a",tn,[e("Mozilla's documentation"),s(t)]),e(", the value is "),on,e(". As such, it would be dangerous to convert the "),ln,e(" to any other value than bytes.")]),pn,rn])}const mn=r(u,[["render",cn],["__file","download-stream.html.vue"]]);export{mn as default};

import{_ as c,M as l,p as i,q as r,R as n,t as s,N as a,U as t,a1 as o}from"./framework-efe98465.js";const u={},d=n("h1",{id:"array",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#array","aria-hidden":"true"},"#"),s(" Array")],-1),k={href:"https://laravel.com/docs/12.x/helpers#arrays",target:"_blank",rel:"noopener noreferrer"},g=n("code",null,"Arr",-1),v={class:"table-of-contents"},m=n("h2",{id:"randomizer",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#randomizer","aria-hidden":"true"},"#"),s(),n("code",null,"randomizer()")],-1),b=n("code",null,"randomizer()",-1),h=n("code",null,"ArrayRandomizer",-1),f={href:"https://www.php.net/manual/en/class.random-randomizer.php",target:"_blank",rel:"noopener noreferrer"},_=n("code",null,"Random\\Randomizer",-1),q=o(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Utils<span class="token punctuation">\\</span>Arr</span><span class="token punctuation">;</span>

<span class="token variable">$randomizer</span> <span class="token operator">=</span> <span class="token class-name static-context">Arr</span><span class="token operator">::</span><span class="token function">randomizer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),y={href:"https://www.php.net/manual/en/class.random-engine.php",target:"_blank",rel:"noopener noreferrer"},x=n("code",null,"Engine",-1),w=o(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Utils<span class="token punctuation">\\</span>Arr</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Random<span class="token punctuation">\\</span>Engine<span class="token punctuation">\\</span>Mt19937</span><span class="token punctuation">;</span>

<span class="token variable">$randomizer</span> <span class="token operator">=</span> <span class="token class-name static-context">Arr</span><span class="token operator">::</span><span class="token function">randomizer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Mt19937</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="pickkey" tabindex="-1"><a class="header-anchor" href="#pickkey" aria-hidden="true">#</a> <code>pickKey()</code></h3><p>Returns a single random key.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$arr</span> <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;a&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;b&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;c&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;d&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;e&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">5</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token class-name static-context">Arr</span><span class="token operator">::</span><span class="token function">randomizer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">pickKey</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// c</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="pickkeys" tabindex="-1"><a class="header-anchor" href="#pickkeys" aria-hidden="true">#</a> <code>pickKeys()</code></h3><p>Returns random array keys.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$arr</span> <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;a&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;b&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;c&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;d&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;e&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">5</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token class-name static-context">Arr</span><span class="token operator">::</span><span class="token function">randomizer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">pickKeys</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [ &#39;b&#39;, &#39;d&#39; ]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),A={href:"https://www.php.net/manual/en/random-randomizer.pickarraykeys.php",target:"_blank",rel:"noopener noreferrer"},z=n("code",null,"Random\\Randomizer::pickArrayKeys()",-1),$=o(`<h3 id="value" tabindex="-1"><a class="header-anchor" href="#value" aria-hidden="true">#</a> <code>value()</code></h3><p>Returns a random entry (value) from array.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$arr</span> <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;a&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;b&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;c&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;d&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;e&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">5</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token class-name static-context">Arr</span><span class="token operator">::</span><span class="token function">randomizer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="values" tabindex="-1"><a class="header-anchor" href="#values" aria-hidden="true">#</a> <code>values()</code></h3><p>Returns random entries (values) from array.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$arr</span> <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;a&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;b&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;c&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;d&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;e&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">5</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token class-name static-context">Arr</span><span class="token operator">::</span><span class="token function">randomizer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [ 2, 5 ]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can pass <code>true</code> as the third argument, if you wish to preserve the keys.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$arr</span> <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;a&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;b&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;c&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;d&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;e&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">5</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token class-name static-context">Arr</span><span class="token operator">::</span><span class="token function">randomizer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [ &#39;b&#39; =&gt; 2, &#39;e&#39; =&gt; 5 ]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shuffle" tabindex="-1"><a class="header-anchor" href="#shuffle" aria-hidden="true">#</a> <code>shuffle()</code></h3><p>Shuffles given array.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$arr</span> <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;a&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;b&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;c&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;d&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;e&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">5</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token class-name static-context">Arr</span><span class="token operator">::</span><span class="token function">randomizer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">shuffle</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [ 2, 1, 4, 3, 5 ]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">Caution</p><p><code>shuffle()</code> does NOT preserve the array keys.</p></div>`,12),R={href:"https://www.php.net/manual/en/random-randomizer.shufflearray.php",target:"_blank",rel:"noopener noreferrer"},S=n("code",null,"Random\\Randomizer::shuffleArray()",-1),K=o(`<h2 id="differenceassoc" tabindex="-1"><a class="header-anchor" href="#differenceassoc" aria-hidden="true">#</a> <code>differenceAssoc()</code></h2><p>Method computes the difference of two or more multidimensional arrays.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Utils<span class="token punctuation">\\</span>Arr</span><span class="token punctuation">;</span>

<span class="token variable">$original</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;key&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;person&#39;</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;value&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;John Snow&#39;</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;settings&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
        <span class="token string single-quoted-string">&#39;validation&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;required&#39;</span> <span class="token operator">=&gt;</span> <span class="token constant boolean">true</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;nullable&#39;</span> <span class="token operator">=&gt;</span> <span class="token constant boolean">true</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;min&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">2</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;max&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">50</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token variable">$changed</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;key&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;person&#39;</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;value&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Smith Snow&#39;</span><span class="token punctuation">,</span> <span class="token comment">// Changed</span>
    <span class="token string single-quoted-string">&#39;settings&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
        <span class="token string single-quoted-string">&#39;validation&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;required&#39;</span> <span class="token operator">=&gt;</span> <span class="token constant boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// Changed</span>
            <span class="token string single-quoted-string">&#39;nullable&#39;</span> <span class="token operator">=&gt;</span> <span class="token constant boolean">true</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;min&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">2</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;max&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token comment">// Changed</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token variable">$result</span> <span class="token operator">=</span> <span class="token class-name static-context">Arr</span><span class="token operator">::</span><span class="token function">differenceAssoc</span><span class="token punctuation">(</span><span class="token variable">$original</span><span class="token punctuation">,</span> <span class="token variable">$changed</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The output of the above shown example will be the following:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Array
(
  [&#39;value&#39;] =&gt; &#39;John Snow&#39;
  [&#39;settings&#39;] =&gt; Array
      (
          [&#39;validation&#39;] =&gt; Array
              (
                  [&#39;required&#39;] =&gt; 1
                  [&#39;max&#39;] =&gt; 50
              )
      )
)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="tree" tabindex="-1"><a class="header-anchor" href="#tree" aria-hidden="true">#</a> <code>tree()</code></h2><p>Returns an array that represents a &quot;tree&quot; structure for given path.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Utils<span class="token punctuation">\\</span>Arr</span><span class="token punctuation">;</span>

<span class="token variable">$result</span> <span class="token operator">=</span> <span class="token class-name static-context">Arr</span><span class="token operator">::</span><span class="token function">tree</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/home/user/projects&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Array
(
    [0] =&gt; /home
    [1] =&gt; /home/user
    [2] =&gt; /home/user/projects
)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9);function C(E,N){const p=l("ExternalLinkIcon"),e=l("router-link");return i(),r("div",null,[d,n("p",null,[s("Extended version of Laravel's "),n("a",k,[g,s(" component"),a(p)]),s(".")]),n("nav",v,[n("ul",null,[n("li",null,[a(e,{to:"#randomizer"},{default:t(()=>[s("randomizer()")]),_:1}),n("ul",null,[n("li",null,[a(e,{to:"#pickkey"},{default:t(()=>[s("pickKey()")]),_:1})]),n("li",null,[a(e,{to:"#pickkeys"},{default:t(()=>[s("pickKeys()")]),_:1})]),n("li",null,[a(e,{to:"#value"},{default:t(()=>[s("value()")]),_:1})]),n("li",null,[a(e,{to:"#values"},{default:t(()=>[s("values()")]),_:1})]),n("li",null,[a(e,{to:"#shuffle"},{default:t(()=>[s("shuffle()")]),_:1})])])]),n("li",null,[a(e,{to:"#differenceassoc"},{default:t(()=>[s("differenceAssoc()")]),_:1})]),n("li",null,[a(e,{to:"#tree"},{default:t(()=>[s("tree()")]),_:1})])])]),m,n("p",null,[s("The "),b,s(" method returns a "),h,s(" component - an adapter for PHP "),n("a",f,[_,a(p)]),s(".")]),q,n("p",null,[s("You can optionally specify what "),n("a",y,[x,a(p)]),s(" you wish to use:")]),w,n("p",null,[n("em",null,[s("See "),n("a",A,[z,a(p)]),s(" for details.")])]),$,n("p",null,[n("em",null,[s("See "),n("a",R,[S,a(p)]),s(" for details.")])]),K])}const M=c(u,[["render",C],["__file","array.html.vue"]]);export{M as default};

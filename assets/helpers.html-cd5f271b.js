import{_ as o,M as a,p as c,q as i,R as n,N as e,U as l,t as s,a1 as u}from"./framework-efe98465.js";const r={},d=n("h1",{id:"helpers",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#helpers","aria-hidden":"true"},"#"),s(" Helpers")],-1),k={class:"table-of-contents"},v=n("h2",{id:"route-parameters-validation",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#route-parameters-validation","aria-hidden":"true"},"#"),s(" Route Parameters Validation")],-1),m={href:"https://laravel.com/docs/12.x/routing#parameters-regular-expression-constraints",target:"_blank",rel:"noopener noreferrer"},g=n("code",null,"RouteParametersValidation",-1),b=n("code",null,"routeParameterRules()",-1),h=u(`<p><strong>Example Request</strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Api<span class="token punctuation">\\</span>Requests<span class="token punctuation">\\</span>Concerns<span class="token punctuation">\\</span>RouteParametersValidation</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Api<span class="token punctuation">\\</span>Requests<span class="token punctuation">\\</span>Resources<span class="token punctuation">\\</span>ShowSingleResourceRequest</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Database<span class="token punctuation">\\</span>Eloquent<span class="token punctuation">\\</span>Model</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>User</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">ShowUser</span> <span class="token keyword">extends</span> <span class="token class-name">ShowSingleResourceRequest</span>
<span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token package">RouteParametersValidation</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">routeParameterRules</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">array</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">[</span>
            <span class="token comment">// Validation rules for a &quot;user&quot; route parameter...</span>
            <span class="token string single-quoted-string">&#39;user&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;required&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;integer&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;gt:0&#39;</span><span class="token punctuation">]</span>
        <span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">findRecordOrFail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name return-type">Model</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$id</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// parameter is valid...</span>
    
        <span class="token keyword">return</span> <span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">findOrFail</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// ...remaining not shown here...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Example Action</strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/users/{user}&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">ShowUser</span> <span class="token variable">$request</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name static-context">UserResource</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token property">record</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users.show&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Validator Instance</strong></p><p>A separate validator instance is used for validating route parameters than the one used for input validation. To use a custom instance, overwrite the <code>makeRouteParametersValidator()</code> method.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Contracts<span class="token punctuation">\\</span>Validation<span class="token punctuation">\\</span>Validator</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>Facades<span class="token punctuation">\\</span>Validator</span> <span class="token keyword">as</span> ValidatorFacade<span class="token punctuation">;</span>

<span class="token comment">// ...inside your request...</span>

<span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">makeRouteParametersValidator</span><span class="token punctuation">(</span><span class="token keyword type-hint">array</span> <span class="token variable">$rules</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name return-type">Validator</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name static-context">ValidatorFacade</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span>
        <span class="token argument-name">data</span><span class="token punctuation">:</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">parameters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token argument-name">rules</span><span class="token punctuation">:</span> <span class="token variable">$rules</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function f(y,_){const t=a("router-link"),p=a("ExternalLinkIcon");return c(),i("div",null,[d,n("nav",k,[n("ul",null,[n("li",null,[e(t,{to:"#route-parameters-validation"},{default:l(()=>[s("Route Parameters Validation")]),_:1})])])]),v,n("p",null,[s("As an alternative to Laravel's "),n("a",m,[s("route parameters constraints"),e(p)]),s(", you can enable validation of received route parameters. To do so, your request must use the "),g,s(" concern and implement a "),b,s(" method.")]),h])}const q=o(r,[["render",f],["__file","helpers.html.vue"]]);export{q as default};

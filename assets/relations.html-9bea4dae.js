import{_ as l,M as p,p as i,q as c,R as n,t as s,N as a,U as t,a1 as u}from"./framework-efe98465.js";const r={},d=n("h1",{id:"relations",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#relations","aria-hidden":"true"},"#"),s(" Relations")],-1),k={href:"https://laravel.com/docs/12.x/eloquent-resources#conditional-relationships",target:"_blank",rel:"noopener noreferrer"},v=n("em",null,"in a fluent manner",-1),m={class:"table-of-contents"},b=n("h2",{id:"simple-example",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#simple-example","aria-hidden":"true"},"#"),s(" Simple Example")],-1),g={href:"https://laravel.com/docs/12.x/eloquent-relationships#one-to-many-inverse",target:"_blank",rel:"noopener noreferrer"},h=n("code",null,"belongsToReference()",-1),q=n("em",null,"inside the Api Resource class",-1),y=u(`<h3 id="model" tabindex="-1"><a class="header-anchor" href="#model" aria-hidden="true">#</a> Model</h3><p>Your Eloquent model must have desired relations defined. In this example, the <code>User</code> model defines a <code>BelongsTo</code> relation to an <code>Address</code>.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>
<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>Address</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Database<span class="token punctuation">\\</span>Eloquent<span class="token punctuation">\\</span>Model</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Database<span class="token punctuation">\\</span>Eloquent<span class="token punctuation">\\</span>Relations<span class="token punctuation">\\</span>BelongsTo</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">User</span> <span class="token keyword">extends</span> <span class="token class-name">Model</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">address</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name return-type">BelongsTo</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">belongsTo</span><span class="token punctuation">(</span><span class="token class-name static-context">Address</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="api-resource" tabindex="-1"><a class="header-anchor" href="#api-resource" aria-hidden="true">#</a> Api Resource</h3><p>Inside the model&#39;s corresponding Api Resource, you can then create a &quot;reference&quot; which represents that relation. The given &quot;address&quot; reference will now be display, if the relation is eager-loaded in the given model.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Api<span class="token punctuation">\\</span>Resources<span class="token punctuation">\\</span>ApiResource</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Request</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">UserResource</span> <span class="token keyword">extends</span> <span class="token class-name">ApiResource</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">formatPayload</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Request</span> <span class="token variable">$request</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">array</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;id&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getResourceKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">name</span><span class="token punctuation">,</span>
            
            <span class="token comment">// Create reference to &quot;address&quot; relation</span>
            <span class="token string single-quoted-string">&#39;address&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">belongsToReference</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;address&#39;</span><span class="token punctuation">)</span>
                <span class="token operator">-&gt;</span><span class="token function">withLabel</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;street&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string single-quoted-string">&#39;user&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="request" tabindex="-1"><a class="header-anchor" href="#request" aria-hidden="true">#</a> Request</h3><p>When loading a given model from the database, you must ensure to eager-load the relation(s) that you wish to be displayed.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>Facades<span class="token punctuation">\\</span>Route</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Resources<span class="token punctuation">\\</span>UserResource</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>User</span><span class="token punctuation">;</span>

<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/users/{id}&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Find requested user with &quot;address&quot; eager-loaded</span>
    <span class="token variable">$user</span> <span class="token operator">=</span> <span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">with</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;address&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">findOrFail</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">UserResource</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="response" tabindex="-1"><a class="header-anchor" href="#response" aria-hidden="true">#</a> Response</h3><p>Finally, the JSON response will now include the eager-loaded relation.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">48</span><span class="token punctuation">,</span>
        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;John Smith&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;address&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">174</span><span class="token punctuation">,</span>
            <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;24924 Macey Hill Suite 432&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;meta&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;self&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://localhost/users/48&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="prerequisite" tabindex="-1"><a class="header-anchor" href="#prerequisite" aria-hidden="true">#</a> Prerequisite</h2><p>It is very important to understand that before you can display a relation, as previously shown, both the target and related model <strong>MUST</strong> have corresponding Api Resources registered. In other words, both <code>User</code> and <code>Address</code> models must have a corresponding <code>ApiResource</code>!</p><p>Should this not be the case, and you attempt to reference a relation for a model without a corresponding Api Resource, then a <code>RelationReferenceException</code> will be thrown.</p><h2 id="primary-key-of-related-model" tabindex="-1"><a class="header-anchor" href="#primary-key-of-related-model" aria-hidden="true">#</a> Primary Key of Related Model</h2><p>When displaying a loaded relation, the corresponding Api Resource is used to determine the related model&#39;s primary key. If you do not specify anything else, then only the related model&#39;s primary key will be shown.</p><p><strong>In the APi Resource</strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">return</span> <span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;id&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getResourceKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">name</span><span class="token punctuation">,</span>
    
    <span class="token string single-quoted-string">&#39;address&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">belongsToReference</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;address&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Resulting JSON Response</strong></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">48</span><span class="token punctuation">,</span>
        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;John Smith&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;address&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">174</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;meta&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;self&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://localhost/users/48&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If you wish to overwrite this behaviour and display a different value as the relation&#39;s primary identifier, then use the <code>usePrimaryKey()</code> method. It accepts the name of the attribute to be shown as the related model&#39;s identifier, and an <em>optional</em> display name of that identifier.</p><p>The following example will use an address&#39; street name as the primary identifier, with a display name of <code>place_name</code>.</p><p><strong>In the APi Resource</strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">return</span> <span class="token punctuation">[</span>
    <span class="token comment">// ...previous not shown... </span>
    <span class="token string single-quoted-string">&#39;address&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">belongsToReference</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;address&#39;</span><span class="token punctuation">)</span>
        <span class="token function">usePrimaryKey</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;street&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;place_name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Resulting JSON Response</strong></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">48</span><span class="token punctuation">,</span>
        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;John Smith&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;address&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;place_name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;24924 Macey Hill Suite 432&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;meta&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;self&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://localhost/users/48&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="label" tabindex="-1"><a class="header-anchor" href="#label" aria-hidden="true">#</a> Label</h2><p>Unless you specify otherwise, only the related model&#39;s primary key will be shown, when you use a relation reference. To make a relation more human-readable, you can choose to display a name or label for the related model. This can be achieved by using the <code>withLabel()</code> method.</p><p>The method accepts an attribute of the related model, which will then be used as the relation reference&#39;s shown &quot;name&quot;.</p><p><strong>In the APi Resource</strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">return</span> <span class="token punctuation">[</span>
    <span class="token comment">// ...previous not shown... </span>
    <span class="token string single-quoted-string">&#39;address&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">belongsToReference</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;address&#39;</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">withLabel</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;street&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Resulting JSON Response</strong></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">48</span><span class="token punctuation">,</span>
        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;John Smith&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;address&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">174</span><span class="token punctuation">,</span>
            <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;24924 Macey Hill Suite 432&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;meta&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;self&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://localhost/users/48&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="label-s-display-name" tabindex="-1"><a class="header-anchor" href="#label-s-display-name" aria-hidden="true">#</a> Label&#39;s Display Name</h3><p><code>&quot;name&quot;</code> is the default property name when a label is shown for a relation reference. To change this, use the <code>setLabelDisplayName()</code> method.</p><p><strong>In the APi Resource</strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">return</span> <span class="token punctuation">[</span>
    <span class="token comment">// ...previous not shown... </span>
    <span class="token string single-quoted-string">&#39;address&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">belongsToReference</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;address&#39;</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">withLabel</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;street&#39;</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">setLabelDisplayName</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;place_name&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Resulting JSON Response</strong></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">48</span><span class="token punctuation">,</span>
        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;John Smith&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;address&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">174</span><span class="token punctuation">,</span>
            <span class="token property">&quot;place_name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;24924 Macey Hill Suite 432&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;meta&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;self&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://localhost/users/48&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="using-a-callback" tabindex="-1"><a class="header-anchor" href="#using-a-callback" aria-hidden="true">#</a> Using a Callback</h3><p>If you require a more advanced label, e.g. a combination of multiple model attributes, then you can specify a callback as argument for the <code>withLabel()</code> method. The loaded model instance is given as the callback&#39;s argument. The callback <strong>MUST</strong> return a <code>string</code> or <code>null</code>.</p><p><strong>In the APi Resource</strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">return</span> <span class="token punctuation">[</span>
    <span class="token comment">// ...previous not shown... </span>
    <span class="token string single-quoted-string">&#39;address&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">belongsToReference</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;address&#39;</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">withLabel</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Address</span> <span class="token variable">$model</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token variable">$model</span><span class="token operator">-&gt;</span><span class="token property">street</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;, &#39;</span> <span class="token operator">.</span> <span class="token variable">$model</span><span class="token operator">-&gt;</span><span class="token property">city</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Resulting JSON Response</strong></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">48</span><span class="token punctuation">,</span>
        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;John Smith&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;address&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">174</span><span class="token punctuation">,</span>
            <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;24924 Macey Hill Suite 432, South Eric&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;meta&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;self&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://localhost/users/48&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="resource-type" tabindex="-1"><a class="header-anchor" href="#resource-type" aria-hidden="true">#</a> Resource Type</h2><p>The <code>withResourceType()</code> can be used to display a relation&#39;s corresponding Api Resource&#39;s type. The method accepts two arguments:</p><ul><li><code>$show</code>: <code>bool</code> (<em>default <code>true</code></em>) determine if related model&#39;s Api Resource type should be displayed.</li><li><code>$plural</code>: <code>bool</code> (<em>default <code>false</code></em>) display the plural form of the Api Resource type.</li></ul><p><strong>In the APi Resource</strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">return</span> <span class="token punctuation">[</span>
    <span class="token comment">// ...previous not shown... </span>
    <span class="token string single-quoted-string">&#39;address&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">belongsToReference</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;address&#39;</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">withResourceType</span><span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Resulting JSON Response</strong></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">48</span><span class="token punctuation">,</span>
        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;John Smith&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;address&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">174</span><span class="token punctuation">,</span>
            <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;addresses&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;meta&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;self&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://localhost/users/48&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="display-name" tabindex="-1"><a class="header-anchor" href="#display-name" aria-hidden="true">#</a> Display Name</h3><p>To change the <code>&quot;type&quot;</code> property name to something else, use the <code>setResourceTypeDisplayName()</code> method.</p><p><strong>In the APi Resource</strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">return</span> <span class="token punctuation">[</span>
    <span class="token comment">// ...previous not shown... </span>
    <span class="token string single-quoted-string">&#39;address&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">belongsToReference</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;address&#39;</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">withResourceType</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">setResourceTypeDisplayName</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;kind&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Resulting JSON Response</strong></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">48</span><span class="token punctuation">,</span>
        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;John Smith&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;address&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">174</span><span class="token punctuation">,</span>
            <span class="token property">&quot;kind&quot;</span><span class="token operator">:</span> <span class="token string">&quot;address&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;meta&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;self&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://localhost/users/48&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="self-link" tabindex="-1"><a class="header-anchor" href="#self-link" aria-hidden="true">#</a> Self-link</h2><p>You may also display a &quot;self-link&quot; to the related resource, via the <code>withSelfLink()</code> method.</p><p><strong>In the APi Resource</strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">return</span> <span class="token punctuation">[</span>
    <span class="token comment">// ...previous not shown... </span>
    <span class="token string single-quoted-string">&#39;address&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">belongsToReference</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;address&#39;</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">withResourceType</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">withSelfLink</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Resulting JSON Response</strong></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">48</span><span class="token punctuation">,</span>
        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;John Smith&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;address&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">174</span><span class="token punctuation">,</span>
            <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;address&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;self&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://localhost/addresses/174&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;meta&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;self&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://localhost/users/48&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="display-name-1" tabindex="-1"><a class="header-anchor" href="#display-name-1" aria-hidden="true">#</a> Display Name</h3><p>To change the self-link&#39;s display name (<em><code>&quot;self&quot;</code> property</em>), use <code>setSelfLinkDisplayName()</code>.</p><p><strong>In the APi Resource</strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">return</span> <span class="token punctuation">[</span>
    <span class="token comment">// ...previous not shown... </span>
    <span class="token string single-quoted-string">&#39;address&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">belongsToReference</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;address&#39;</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">withResourceType</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">withSelfLink</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">setSelfLinkDisplayName</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;link&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Resulting JSON Response</strong></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">48</span><span class="token punctuation">,</span>
        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;John Smith&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;address&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">174</span><span class="token punctuation">,</span>
            <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;address&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;link&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://localhost/addresses/174&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;meta&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;self&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://localhost/users/48&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="additional-attributes-and-formatting" tabindex="-1"><a class="header-anchor" href="#additional-attributes-and-formatting" aria-hidden="true">#</a> Additional Attributes and Formatting</h2><p>In situations when you must display additional properties or perhaps reformat the entire relation reference&#39;s output value, use the <code>withAdditionalFormatting()</code> method. The callback receives three arguments:</p><ul><li><code>$output</code>: <code>array</code> : the final output value of the relation reference.</li><li><code>$model</code>: <code>Model</code> : the related Eloquent Model.</li><li><code>$resource</code>: <code>RelationReference</code> : the relation reference instance.</li></ul><p><strong>Note</strong>: <em>The callback MUST return a value to be used as the relation reference&#39;s output value!</em></p><p><strong>In the APi Resource</strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">return</span> <span class="token punctuation">[</span>
    <span class="token comment">// ...previous not shown... </span>
    <span class="token string single-quoted-string">&#39;address&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">belongsToReference</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;address&#39;</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">withResourceType</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">withAdditionalFormatting</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token keyword type-hint">array</span> <span class="token variable">$output</span><span class="token punctuation">,</span> <span class="token class-name type-declaration">Address</span> <span class="token variable">$model</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">$output</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;kind&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$output</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;type&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$output</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;type&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            
            <span class="token variable">$output</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;place&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$model</span><span class="token operator">-&gt;</span><span class="token property">street</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39; - &#39;</span> <span class="token operator">.</span> <span class="token variable">$model</span><span class="token operator">-&gt;</span><span class="token property">city</span><span class="token punctuation">;</span>
            
            <span class="token keyword">return</span> <span class="token variable">$output</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Resulting JSON Response</strong></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">48</span><span class="token punctuation">,</span>
        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;John Smith&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;address&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">174</span><span class="token punctuation">,</span>
            <span class="token property">&quot;place&quot;</span><span class="token operator">:</span> <span class="token string">&quot;24924 Macey Hill Suite 432, South Eric&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;kind&quot;</span><span class="token operator">:</span> <span class="token string">&quot;address&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;meta&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;self&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://localhost/users/48&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="when-relation-not-available" tabindex="-1"><a class="header-anchor" href="#when-relation-not-available" aria-hidden="true">#</a> When Relation not available</h2><p>When a related model is not loaded or perhaps not available (<em>e.g. a nullable relation</em>), then <code>null</code> is displayed by default. However, if you desire a different value to be shown for a relation that is not loaded or not available, then you can specify a custom value or callback to be invoked, via the <code>defaultTo()</code> method.</p><p><strong>In the APi Resource</strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">return</span> <span class="token punctuation">[</span>
    <span class="token comment">// ...previous not shown... </span>
    <span class="token string single-quoted-string">&#39;address&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">belongsToReference</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;address&#39;</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">defaultTo</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;n/a&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Resulting JSON Response</strong></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">48</span><span class="token punctuation">,</span>
        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;John Smith&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;address&quot;</span><span class="token operator">:</span> <span class="token string">&quot;n/a&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;meta&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;self&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://localhost/users/48&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="using-a-callback-1" tabindex="-1"><a class="header-anchor" href="#using-a-callback-1" aria-hidden="true">#</a> Using a Callback</h3><p>If you desire a more complex value to be shown, when a relation is not available, then specify a callback as <code>defaultTo()</code>&#39;s argument.</p><p><strong>In the APi Resource</strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">return</span> <span class="token punctuation">[</span>
    <span class="token comment">// ...previous not shown... </span>
    <span class="token string single-quoted-string">&#39;address&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">belongsToReference</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;address&#39;</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">defaultTo</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token punctuation">[</span>
                <span class="token string single-quoted-string">&#39;id&#39;</span> <span class="token operator">=&gt;</span> <span class="token constant">null</span><span class="token punctuation">,</span>
                <span class="token string single-quoted-string">&#39;type&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;address&#39;</span>
            <span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Resulting JSON Response</strong></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">48</span><span class="token punctuation">,</span>
        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;John Smith&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;address&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
            <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;address&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;meta&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;self&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://localhost/users/48&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="supported-relation-types" tabindex="-1"><a class="header-anchor" href="#supported-relation-types" aria-hidden="true">#</a> Supported Relation Types</h2><p>The following types of Eloquent relations are supported. You may also create your own relation reference, if the default provided do not satisfy your needs (<em>custom relations are illustrated later in this section</em>).</p><h3 id="belongs-to-has-one" tabindex="-1"><a class="header-anchor" href="#belongs-to-has-one" aria-hidden="true">#</a> Belongs To / Has One</h3><p>For <code>BelongsTo</code> or <code>HasOne</code> relation types, you can use the following relation references:</p><ul><li><code>belongsToReference()</code></li><li><code>hasOneReference()</code></li></ul><p>They share similar functionality and are able to represent a single related model.</p><h3 id="belongs-to-many-has-many" tabindex="-1"><a class="header-anchor" href="#belongs-to-many-has-many" aria-hidden="true">#</a> Belongs To Many / Has Many</h3><p>If you want to display a reference for a <code>BelongsToMany</code> or <code>HasMany</code> type of relation, then you can do so via the following:</p><ul><li><code>belongsToManyReference()</code></li><li><code>hasManyReference()</code></li></ul><p>These relation references are able to display a list of related models. Consider the following example:</p><p><strong>In the APi Resource</strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">return</span> <span class="token punctuation">[</span>
    <span class="token comment">// ...previous not shown... </span>
    <span class="token string single-quoted-string">&#39;roles&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">belongsToManyReference</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;roles&#39;</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">withLabel</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">withSelfLink</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">withResourceType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Resulting JSON Response</strong></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">34</span><span class="token punctuation">,</span>
        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Retta Altenwerth Jr.&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;roles&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">23</span><span class="token punctuation">,</span>
                <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Machine Operator&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;role&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;self&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://localhost/roles/23&quot;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">56</span><span class="token punctuation">,</span>
                <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;File Clerk&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;role&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;self&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://localhost/roles/56&quot;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;meta&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;self&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://localhost/users/34&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Caution</strong>: <em>Although the <code>belongsToManyReference()</code> and <code>hasManyReference()</code> allow showing multiple related models, they could impose a huge impact on your application&#39;s performance if too many records are loaded from the database.</em><em>How you choose to eager-load &quot;belongs to many&quot; or &quot;has many&quot; kind of relations is entirely your responsibility...</em></p><h2 id="custom-relation-references" tabindex="-1"><a class="header-anchor" href="#custom-relation-references" aria-hidden="true">#</a> Custom Relation References</h2><p>To create your own relation reference, you can extend the <code>BaseRelationReference</code> abstraction.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Api<span class="token punctuation">\\</span>Resources<span class="token punctuation">\\</span>Relations<span class="token punctuation">\\</span>BaseRelationReference</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">MyCustomAddressRelation</span> <span class="token keyword">extends</span> <span class="token class-name">BaseRelationReference</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token keyword type-hint">mixed</span> <span class="token variable">$resource</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// Ensure to invoke parent constructor</span>
        <span class="token keyword static-context">parent</span><span class="token operator">::</span><span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$resource</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;address&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2nd arg. is name of relation!</span>
        
        <span class="token comment">// Example: Use existing &quot;default&quot; formatting callback... </span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">asSingleModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token comment">// Example: always show the resource type:</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">mustShowResourceType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>In the APi Resource</strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">return</span> <span class="token punctuation">[</span>
    <span class="token comment">// ...previous not shown... </span>
    <span class="token string single-quoted-string">&#39;address&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MyCustomAddressRelation</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">withLabel</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;street&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,111);function f(w,R){const o=p("ExternalLinkIcon"),e=p("router-link");return i(),c("div",null,[d,n("p",null,[s("Similar to "),n("a",k,[s("Laravel's native Api Resources"),a(o)]),s(", this package offers a way to include and represent relations ("),v,s('), if they are eager-loaded for the given model. In this context, the representation of such relations are referred to as "relation references".')]),n("nav",m,[n("ul",null,[n("li",null,[a(e,{to:"#simple-example"},{default:t(()=>[s("Simple Example")]),_:1}),n("ul",null,[n("li",null,[a(e,{to:"#model"},{default:t(()=>[s("Model")]),_:1})]),n("li",null,[a(e,{to:"#api-resource"},{default:t(()=>[s("Api Resource")]),_:1})]),n("li",null,[a(e,{to:"#request"},{default:t(()=>[s("Request")]),_:1})]),n("li",null,[a(e,{to:"#response"},{default:t(()=>[s("Response")]),_:1})])])]),n("li",null,[a(e,{to:"#prerequisite"},{default:t(()=>[s("Prerequisite")]),_:1})]),n("li",null,[a(e,{to:"#primary-key-of-related-model"},{default:t(()=>[s("Primary Key of Related Model")]),_:1})]),n("li",null,[a(e,{to:"#label"},{default:t(()=>[s("Label")]),_:1}),n("ul",null,[n("li",null,[a(e,{to:"#label-s-display-name"},{default:t(()=>[s("Label's Display Name")]),_:1})]),n("li",null,[a(e,{to:"#using-a-callback"},{default:t(()=>[s("Using a Callback")]),_:1})])])]),n("li",null,[a(e,{to:"#resource-type"},{default:t(()=>[s("Resource Type")]),_:1}),n("ul",null,[n("li",null,[a(e,{to:"#display-name"},{default:t(()=>[s("Display Name")]),_:1})])])]),n("li",null,[a(e,{to:"#self-link"},{default:t(()=>[s("Self-link")]),_:1}),n("ul",null,[n("li",null,[a(e,{to:"#display-name-1"},{default:t(()=>[s("Display Name")]),_:1})])])]),n("li",null,[a(e,{to:"#additional-attributes-and-formatting"},{default:t(()=>[s("Additional Attributes and Formatting")]),_:1})]),n("li",null,[a(e,{to:"#when-relation-not-available"},{default:t(()=>[s("When Relation not available")]),_:1}),n("ul",null,[n("li",null,[a(e,{to:"#using-a-callback-1"},{default:t(()=>[s("Using a Callback")]),_:1})])])]),n("li",null,[a(e,{to:"#supported-relation-types"},{default:t(()=>[s("Supported Relation Types")]),_:1}),n("ul",null,[n("li",null,[a(e,{to:"#belongs-to-has-one"},{default:t(()=>[s("Belongs To / Has One")]),_:1})]),n("li",null,[a(e,{to:"#belongs-to-many-has-many"},{default:t(()=>[s("Belongs To Many / Has Many")]),_:1})])])]),n("li",null,[a(e,{to:"#custom-relation-references"},{default:t(()=>[s("Custom Relation References")]),_:1})])])]),b,n("p",null,[s("Imagine that your User model has a defined a "),n("a",g,[s('belongs to "Address" relation'),a(o)]),s(". If you wish to display that relation in the model's corresponding Api Resource, you can use the "),h,s(" method ("),q,s("). The method expects a valid relation name, which must be defined in the Model.")]),y])}const T=l(r,[["render",f],["__file","relations.html.vue"]]);export{T as default};

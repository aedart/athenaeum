import{_ as o,M as i,p as c,q as p,R as n,N as e,U as t,t as a,a1 as l}from"./framework-efe98465.js";const r={},d=n("h1",{id:"basic-usage",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#basic-usage","aria-hidden":"true"},"#"),a(" Basic Usage")],-1),u={class:"table-of-contents"},k=l(`<h2 id="switch-maintenance-mode-driver" tabindex="-1"><a class="header-anchor" href="#switch-maintenance-mode-driver" aria-hidden="true">#</a> Switch Maintenance Mode Driver</h2><p>By default, Laravel uses a &quot;file based&quot; maintenance mode. This means that each time you invoke <code>php artisan down</code>, a <code>down</code> file is created inside your application storage, e.g. <code>storage/framework/down</code>. The application checks if this file exists and prevents, amongst other things, http requests from proceeding.</p><p>If you wish to change the maintenance mode &quot;driver&quot;, you could do so via a custom service provider.</p><h3 id="custom-service-provider" tabindex="-1"><a class="header-anchor" href="#custom-service-provider" aria-hidden="true">#</a> Custom Service Provider</h3><p>Inside your application, create and register a service provider that replaces the default bound <code>\\Illuminate\\Contracts\\Foundation\\MaintenanceMode</code>, with another driver.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">namespace</span> <span class="token package">Acme<span class="token punctuation">\\</span>Providers</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Maintenance<span class="token punctuation">\\</span>Modes<span class="token punctuation">\\</span>Traits<span class="token punctuation">\\</span>MaintenanceModeManagerTrait</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Contracts<span class="token punctuation">\\</span>Foundation<span class="token punctuation">\\</span>MaintenanceMode</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>ServiceProvider</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">SwitchMaintenanceMode</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceProvider</span>
<span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token package">MaintenanceModeManagerTrait</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// Overwrite Laravel&#39;s default maintenance mode driver...</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">app</span><span class="token operator">-&gt;</span><span class="token function">bind</span><span class="token punctuation">(</span>
            <span class="token class-name static-context">MaintenanceMode</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>
            <span class="token keyword">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getMaintenanceModeManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">driver</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;json&#39;</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The above code ensures to use a &quot;json file based&quot; maintenance mode driver, whenever the application is taken down. For additional information, please review Laravel&#39;s documentation about maintenance modes.</p>`,7);function v(m,h){const s=i("router-link");return c(),p("div",null,[d,n("nav",u,[n("ul",null,[n("li",null,[e(s,{to:"#switch-maintenance-mode-driver"},{default:t(()=>[a("Switch Maintenance Mode Driver")]),_:1}),n("ul",null,[n("li",null,[e(s,{to:"#custom-service-provider"},{default:t(()=>[a("Custom Service Provider")]),_:1})])])])])]),k])}const g=o(r,[["render",v],["__file","usage.html.vue"]]);export{g as default};

import{_ as o,M as p,p as c,q as l,R as n,t as a,N as e,a1 as t}from"./framework-efe98465.js";const i={},r=n("h1",{id:"etags",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#etags","aria-hidden":"true"},"#"),a(" ETags")],-1),u=n("p",null,[n("em",null,[n("strong",null,"Available since"),a(),n("code",null,"v6.6.x")])],-1),d={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag",target:"_blank",rel:"noopener noreferrer"},k={href:"https://httpwg.org/specs/rfc9110.html#entity.tag.comparison",target:"_blank",rel:"noopener noreferrer"},m=t(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>ETags<span class="token punctuation">\\</span>Facades<span class="token punctuation">\\</span>Generator</span><span class="token punctuation">;</span>

<span class="token comment">// Generate an ETag for strong comparison, of content</span>
<span class="token variable">$etag</span> <span class="token operator">=</span> <span class="token class-name static-context">Generator</span><span class="token operator">::</span><span class="token function">makeStrong</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span> <span class="token variable">$etag</span><span class="token punctuation">;</span> <span class="token comment">// &quot;4720b076892bb2fb65e75af902273c73a2967e4a&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Or to generate ETags that are flagged as &quot;weak&quot; (<em>for weak comparison</em>)</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$etag</span> <span class="token operator">=</span> <span class="token class-name static-context">Generator</span><span class="token operator">::</span><span class="token function">makeWeak</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span> <span class="token variable">$etag</span><span class="token punctuation">;</span> <span class="token comment">// W/&quot;0815&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="parsing" tabindex="-1"><a class="header-anchor" href="#parsing" aria-hidden="true">#</a> Parsing</h2><p>To parse ETags from Http headers, you can use the <code>parse()</code> method. It returns a collection of <code>ETag</code> instances.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// E.g. If-None-Match: W/&quot;0815&quot;, W/&quot;0816&quot;, W/&quot;0817&quot;</span>
<span class="token variable">$collection</span> <span class="token operator">=</span> <span class="token class-name static-context">Generator</span><span class="token operator">::</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;If-None-Match&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  

<span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$collection</span> <span class="token keyword">as</span> <span class="token variable">$etag</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span> <span class="token variable">$etag</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="compare" tabindex="-1"><a class="header-anchor" href="#compare" aria-hidden="true">#</a> Compare</h2>`,7),g={href:"https://httpwg.org/specs/rfc9110.html#rfc.section.8.8.3.2",target:"_blank",rel:"noopener noreferrer"},v=t(`<h4 id="using-collection" tabindex="-1"><a class="header-anchor" href="#using-collection" aria-hidden="true">#</a> Using Collection</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// Etags from Http Header</span>
<span class="token variable">$collection</span> <span class="token operator">=</span> <span class="token class-name static-context">Generator</span><span class="token operator">::</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;If-Match&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// E.g. &#39;W/&quot;0815&quot;&#39; </span>

<span class="token comment">// Other Etag for your resource</span>
<span class="token variable">$etag</span> <span class="token operator">=</span> <span class="token class-name static-context">Generator</span><span class="token operator">::</span><span class="token function">makeWeak</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// E.g. W/&quot;0815&quot;</span>

<span class="token comment">// Compare etags against resource&#39;s etag</span>
<span class="token keyword">echo</span> <span class="token variable">$collection</span><span class="token operator">-&gt;</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token variable">$etag</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false - strong comparison</span>
<span class="token keyword">echo</span> <span class="token variable">$collection</span><span class="token operator">-&gt;</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token variable">$etag</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">// true - weak comparison</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="using-etag-instance" tabindex="-1"><a class="header-anchor" href="#using-etag-instance" aria-hidden="true">#</a> Using Etag instance</h4><p>You can also compare individual <code>ETag</code> instances, using the <code>matches()</code> method.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$etagA</span> <span class="token operator">=</span> <span class="token class-name static-context">Generator</span><span class="token operator">::</span><span class="token function">parseSingle</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;W/&quot;0815&quot;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$etagB</span> <span class="token operator">=</span> <span class="token class-name static-context">Generator</span><span class="token operator">::</span><span class="token function">parseSingle</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;W/&quot;0815&quot;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token variable">$etagA</span><span class="token operator">-&gt;</span><span class="token function">matches</span><span class="token punctuation">(</span><span class="token variable">$etagB</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false - strong comparison</span>
<span class="token keyword">echo</span> <span class="token variable">$etagA</span><span class="token operator">-&gt;</span><span class="token function">matches</span><span class="token punctuation">(</span><span class="token variable">$etagB</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">// true - weak comparison</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="onward" tabindex="-1"><a class="header-anchor" href="#onward" aria-hidden="true">#</a> Onward</h2><p>For additional examples, installation guide and more, please continue reading the documentation.</p>`,7);function h(b,f){const s=p("ExternalLinkIcon");return c(),l("div",null,[r,u,n("p",null,[a('Provides a "profile" based approach to generate '),n("a",d,[a("ETags"),e(s)]),a(" of content, in your Laravel application. The default provided implementation is able to generate ETags for "),n("a",k,[a("weak and strong comparisons"),e(s)]),a(".")]),m,n("p",null,[a("Lastly, ETags can also be matched against each other, in accordance with "),n("a",g,[a("RFC9110"),e(s)]),a(".")]),v])}const x=o(i,[["render",h],["__file","index.html.vue"]]);export{x as default};

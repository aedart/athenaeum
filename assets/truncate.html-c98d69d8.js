import{_ as e,M as t,p,q as o,R as s,t as n,N as c,a1 as l}from"./framework-efe98465.js";const i={},r=l(`<h1 id="truncate" tabindex="-1"><a class="header-anchor" href="#truncate" aria-hidden="true">#</a> Truncate</h1><p>To truncate the stream to a specific size, use <code>truncate()</code>.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$stream</span> <span class="token operator">=</span> <span class="token class-name static-context">FileStream</span><span class="token operator">::</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;persons.txt&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;r&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">truncate</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token variable">$stream</span><span class="token operator">-&gt;</span><span class="token function">getSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$stream</span> <span class="token operator">=</span> <span class="token class-name static-context">FileStream</span><span class="token operator">::</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;persons.txt&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;r&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">truncate</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token variable">$stream</span><span class="token operator">-&gt;</span><span class="token function">getSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 25</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),u={href:"https://www.php.net/manual/en/function.ftruncate",target:"_blank",rel:"noopener noreferrer"},d=s("code",null,"ftruncate()",-1);function k(m,v){const a=t("ExternalLinkIcon");return p(),o("div",null,[r,s("p",null,[n("Behind the scene, "),s("a",u,[n("PHP's "),d,c(a)]),n(" is used to truncate stream.")])])}const g=e(i,[["render",k],["__file","truncate.html.vue"]]);export{g as default};

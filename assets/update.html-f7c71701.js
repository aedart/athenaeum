import{_ as n,p as a,q as s,a1 as e}from"./framework-efe98465.js";const t={},o=e(`<h1 id="update-existing-record" tabindex="-1"><a class="header-anchor" href="#update-existing-record" aria-hidden="true">#</a> Update existing record</h1><p>You can use the <code>update()</code> method to change an existing record.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$issue</span><span class="token operator">-&gt;</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;subject&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Perform review of component ABC&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Alternatively, you may also use the <code>save()</code> method to achieve the same.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$issue</span><span class="token operator">-&gt;</span><span class="token property">subject</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;Add docs for build process&#39;</span><span class="token punctuation">;</span>
<span class="token variable">$issue</span><span class="token operator">-&gt;</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="force-reload" tabindex="-1"><a class="header-anchor" href="#force-reload" aria-hidden="true">#</a> &quot;Force&quot; reload</h2><p>Redmine&#39;s API does not automatically return an updated record, when you request existing records changed. To reload and obtain the updated record from Redmine, you can specify the second argument of the <code>update()</code> method.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$issue</span><span class="token operator">-&gt;</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;subject&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;STEIN 12.1 adjustment&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Force reload</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This can also be done via the <code>save()</code> method.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$issue</span><span class="token operator">-&gt;</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Force reload</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="reload" tabindex="-1"><a class="header-anchor" href="#reload" aria-hidden="true">#</a> <code>reload()</code></h3><p>Behind the scene, <code>update()</code> and <code>save()</code> methods invoke the <code>reload()</code>, which can also be called whenever suitable.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// ...Perform some operation on record...</span>

<span class="token comment">// Later, force reload the record</span>
<span class="token variable">$issue</span><span class="token operator">-&gt;</span><span class="token function">reload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),p=[o];function c(i,d){return a(),s("div",null,p)}const r=n(t,[["render",c],["__file","update.html.vue"]]);export{r as default};

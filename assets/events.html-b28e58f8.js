import{_ as o,M as i,p as c,q as l,R as e,N as s,U as t,t as a,a1 as p}from"./framework-efe98465.js";const r={},d=e("h1",{id:"events",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#events","aria-hidden":"true"},"#"),a(" Events")],-1),u=e("p",null,'The following are the events that the circuit breaker dispatches. These can, for instance, be used to create "service monitoring" logic.',-1),h={class:"table-of-contents"},v=p(`<p>Each of these events offer the following methods:</p><ul><li><code>state()</code>: Returns the circuit breaker&#39;s current <code>State</code>.</li><li><code>lastFailure()</code>: Returns the last reported <code>Failure</code> or <code>null</code>, if none available.</li></ul><p>Both <code>State</code> and <code>Failure</code> are immutable objects. Please review <code>Aedart\\Contracts\\Circuits\\State</code> and <code>Aedart\\Contracts\\Circuits\\Failure</code> for additional information.</p><h2 id="has-closed" tabindex="-1"><a class="header-anchor" href="#has-closed" aria-hidden="true">#</a> Has Closed</h2><p><code>Aedart\\Contracts\\Circuits\\Events\\HasClosed</code> is dispatched when state, is changed to <em>Closed</em> state (<em>initial / success state</em>).</p><h2 id="has-open" tabindex="-1"><a class="header-anchor" href="#has-open" aria-hidden="true">#</a> Has Open</h2><p><code>Aedart\\Contracts\\Circuits\\Events\\HasOpened</code> is dispatched when state, is changed to <em>Open</em> state (<em>circuit has tripped / failure state</em>).</p><h2 id="has-half-open" tabindex="-1"><a class="header-anchor" href="#has-half-open" aria-hidden="true">#</a> Has Half-Open</h2><p><code>Aedart\\Contracts\\Circuits\\Events\\HasHalfOpened</code> is dispatched when state, is changed to <em>Half-Open</em> state (<em>intermediate state / recovery attempt state</em>).</p><h2 id="failure-reported" tabindex="-1"><a class="header-anchor" href="#failure-reported" aria-hidden="true">#</a> Failure Reported</h2><p>Whenever a failure has been reported, <code>Aedart\\Contracts\\Circuits\\Events\\FailureReported</code> is dispatched. This event offers a <code>failure()</code> method. It guarantees to return a <code>Failure</code> object, that contains information about the reported failure.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Contracts<span class="token punctuation">\\</span>Circuits<span class="token punctuation">\\</span>Events<span class="token punctuation">\\</span>FailureReported</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">NotifyOnWhetherServiceFailure</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">handle</span><span class="token punctuation">(</span><span class="token class-name type-declaration">FailureReported</span> <span class="token variable">$event</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$failure</span> <span class="token operator">=</span> <span class="token variable">$event</span><span class="token operator">-&gt;</span><span class="token function">failure</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token variable">$reason</span> <span class="token operator">=</span> <span class="token variable">$failure</span><span class="token operator">-&gt;</span><span class="token function">reason</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$failureTime</span> <span class="token operator">=</span> <span class="token variable">$failure</span><span class="token operator">-&gt;</span><span class="token function">reportedAt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$totalReportedFailures</span> <span class="token operator">=</span> <span class="token variable">$failure</span><span class="token operator">-&gt;</span><span class="token function">totalFailures</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Send notification about failure ... not shown here...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12);function k(f,m){const n=i("router-link");return c(),l("div",null,[d,u,e("nav",h,[e("ul",null,[e("li",null,[s(n,{to:"#has-closed"},{default:t(()=>[a("Has Closed")]),_:1})]),e("li",null,[s(n,{to:"#has-open"},{default:t(()=>[a("Has Open")]),_:1})]),e("li",null,[s(n,{to:"#has-half-open"},{default:t(()=>[a("Has Half-Open")]),_:1})]),e("li",null,[s(n,{to:"#failure-reported"},{default:t(()=>[a("Failure Reported")]),_:1})])])]),v])}const _=o(r,[["render",k],["__file","events.html.vue"]]);export{_ as default};

import{_ as p,M as l,p as c,q as r,R as n,t as s,N as a,U as o,a1 as i}from"./framework-efe98465.js";const u={},d=n("h1",{id:"authentication",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#authentication","aria-hidden":"true"},"#"),s(" Authentication")],-1),h={href:"https://laravel.com/docs/10.x/http-client#authentication",target:"_blank",rel:"noopener noreferrer"},g={class:"table-of-contents"},k=n("div",{class:"custom-container warning"},[n("p",{class:"custom-container-title"},"Caution"),n("p",null,"Regardless of authentication method, you should always use https. You never know who's listening...")],-1),v=n("h2",{id:"basic",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#basic","aria-hidden":"true"},"#"),s(" Basic")],-1),m=n("code",null,"useBasicAuth()",-1),b={href:"https://tools.ietf.org/html/rfc7617",target:"_blank",rel:"noopener noreferrer"},_=i(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$client</span>
        <span class="token operator">-&gt;</span><span class="token function">useBasicAuth</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;john@doe.org&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;secret&#39;</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/available-flights&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),f={href:"http://docs.guzzlephp.org/en/stable/request-options.html#auth",target:"_blank",rel:"noopener noreferrer"},q=n("h2",{id:"digest",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#digest","aria-hidden":"true"},"#"),s(" Digest")],-1),x={href:"https://tools.ietf.org/html/rfc7616",target:"_blank",rel:"noopener noreferrer"},w=n("code",null,"useDigestAuth()",-1),y=i(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$client</span>
        <span class="token operator">-&gt;</span><span class="token function">useDigestAuth</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;john@doe.org&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;secret&#39;</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/available-flights&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),A={href:"http://docs.guzzlephp.org/en/stable/request-options.html#auth",target:"_blank",rel:"noopener noreferrer"},B=n("h2",{id:"token",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#token","aria-hidden":"true"},"#"),s(" Token")],-1),D={href:"https://tools.ietf.org/html/rfc6750",target:"_blank",rel:"noopener noreferrer"},T=n("code",null,"useTokenAuth()",-1),$=i(`<ul><li><code>$token</code>: <code>string</code> The token you wish to use</li><li><code>$scheme</code>: <code>string</code> (<em>optional</em>) The authentication scheme. Defaults to <code>Bearer</code>.</li></ul><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code> <span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$client</span>
         <span class="token operator">-&gt;</span><span class="token function">useTokenAuth</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;my-secret-api-token&#39;</span><span class="token punctuation">)</span>
         <span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/available-flights&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Alternatively, you can also use the configuration to specify authentication headers.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">return</span> <span class="token punctuation">[</span>

    <span class="token string single-quoted-string">&#39;profiles&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>

        <span class="token string single-quoted-string">&#39;default&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;driver&#39;</span> <span class="token operator">=&gt;</span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Aedart<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Clients<span class="token punctuation">\\</span>Drivers<span class="token punctuation">\\</span>DefaultHttpClient</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;options&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
                
                <span class="token string single-quoted-string">&#39;headers&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
                    <span class="token string single-quoted-string">&#39;Authorization&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Bearer my-secret-api-token&#39;</span>
                <span class="token punctuation">]</span>

                <span class="token comment">// ... remaining not shown ...</span>
            <span class="token punctuation">]</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function C(z,N){const e=l("ExternalLinkIcon"),t=l("router-link");return c(),r("div",null,[d,n("p",null,[s("Inspired by "),n("a",h,[s("Laravel's Http Client"),a(e)]),s(", authentication headers can be specified via these shortcut methods.")]),n("nav",g,[n("ul",null,[n("li",null,[a(t,{to:"#basic"},{default:o(()=>[s("Basic")]),_:1})]),n("li",null,[a(t,{to:"#digest"},{default:o(()=>[s("Digest")]),_:1})]),n("li",null,[a(t,{to:"#token"},{default:o(()=>[s("Token")]),_:1})])])]),k,v,n("p",null,[s("The "),m,s(" method will allow you to set a username and password, for "),n("a",b,[s("Basic Authentication"),a(e)]),s(".")]),_,n("p",null,[n("em",null,[s("Basic authentication can also be set "),n("a",f,[s("via configuration"),a(e)]),s(".")])]),q,n("p",null,[n("a",x,[s("Digest Authentication"),a(e)]),s(" can be used, via "),w,s(". This method also accepts a username and a password.")]),y,n("p",null,[n("em",null,[s("Digest authentication can also be set "),n("a",A,[s("via configuration"),a(e)]),s(".")])]),B,n("p",null,[s("Lastly, when using "),n("a",D,[s("token-based authentication"),a(e)]),s(", "),T,s(" can be used. It accepts the following arguments:")]),$])}const L=p(u,[["render",C],["__file","auth.html.vue"]]);export{L as default};

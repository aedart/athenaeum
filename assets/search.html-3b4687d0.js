import{_ as e,M as t,p as o,q as c,R as s,t as n,N as p,U as i,a1 as r}from"./framework-efe98465.js";const l={},u=s("h1",{id:"search-processor",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#search-processor","aria-hidden":"true"},"#"),n(" Search Processor")],-1),d=s("p",null,[n("The "),s("code",null,"SearchProcessor"),n(" creates a simple search query filter. It compares a search term against one or more table columns, using SQL's "),s("code",null,"like"),n(" operator. If you do not have a huge amount of records, then this processor might be a good starting point.")],-1),m=s("h2",{id:"setup",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#setup","aria-hidden":"true"},"#"),n(" Setup")],-1),k=r(`<p><strong>Note</strong>: <em>You should only specify numeric or string datatype columns. Other types of columns might not yield positive results.</em></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Filters<span class="token punctuation">\\</span>Processors<span class="token punctuation">\\</span>SearchProcessor</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">UserFilterBuilder</span> <span class="token keyword">extends</span> <span class="token class-name">BaseBuilder</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">processors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">array</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;search&#39;</span> <span class="token operator">=&gt;</span> <span class="token class-name static-context">SearchProcessor</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token operator">-&gt;</span><span class="token function">columns</span><span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;email&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            
            <span class="token comment">// ...etc</span>
        <span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="maximum-length-of-search-term" tabindex="-1"><a class="header-anchor" href="#maximum-length-of-search-term" aria-hidden="true">#</a> Maximum length of search term</h3><p>By default, the processor will raise a validation exception (<em>results in a <code>422 Unprocessable Entity</code> http response</em>), if the submitted search term is more than <code>100</code> characters. To change this behaviour, use <code>maxSearchLength()</code> to specify a different maximum length.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">return</span> <span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;search&#39;</span> <span class="token operator">=&gt;</span> <span class="token class-name static-context">SearchProcessor</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">columns</span><span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;email&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">maxSearchLength</span><span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function h(g,v){const a=t("RouterLink");return o(),c("div",null,[u,d,m,s("p",null,[n("In your "),p(a,{to:"/archive/v6x/filters/builder.html"},{default:i(()=>[n("builder")]),_:1}),n(", specify the http query parameter name and the database table columns that the search filter must compare a search term against.")]),k])}const f=e(l,[["render",h],["__file","search.html.vue"]]);export{f as default};

import{_ as i,M as c,p as l,q as u,R as s,N as a,U as e,t as n,a1 as p}from"./framework-efe98465.js";const r={},d=s("h1",{id:"show-resource",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#show-resource","aria-hidden":"true"},"#"),n(" Show Resource")],-1),k=s("p",null,[s("code",null,"ShowSingleResourceRequest"),n(" abstraction is intended for when a single resource must be shown.")],-1),v={class:"table-of-contents"},m=p(`<p><strong>Example Request</strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Api<span class="token punctuation">\\</span>Requests<span class="token punctuation">\\</span>Resources<span class="token punctuation">\\</span>ShowSingleResourceRequest</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Database<span class="token punctuation">\\</span>Eloquent<span class="token punctuation">\\</span>Model</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>User</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">ShowUser</span> <span class="token keyword">extends</span> <span class="token class-name">ShowSingleResourceRequest</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">findRecordOrFail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name return-type">Model</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">findOrFail</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">mustEvaluatePreconditions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Example Action</strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/users/{id}&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">ShowUser</span> <span class="token variable">$request</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name static-context">UserResource</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token property">record</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">withCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users.show&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="authorisation" tabindex="-1"><a class="header-anchor" href="#authorisation" aria-hidden="true">#</a> Authorisation</h2><p>Authorisation checks is performed by the <code>authorizeFoundRecord()</code> method (<em>see source code for details</em>). The request will check against a <code>show</code> ability. From the above shown examples, a <code>users.show</code> ability is checked.</p><h2 id="request-preconditions" tabindex="-1"><a class="header-anchor" href="#request-preconditions" aria-hidden="true">#</a> Request Preconditions</h2><p>To enable evaluation of requested preconditions, the <code>mustEvaluatePreconditions()</code> method must return <code>true</code>.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// ...inside your request...</span>

<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">mustEvaluatePreconditions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),h=s("em",null,"your Eloquent Model",-1),b=s("h3",{id:"etag-and-last-modified-date",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#etag-and-last-modified-date","aria-hidden":"true"},"#"),n(" ETag and Last-Modified Date")],-1),f=s("code",null,"ResourceContent",-1),g=s("em",null,[n("typically your model's "),s("code",null,"updated_at"),n(" property")],-1),w=s("code",null,"getRecordEtag()",-1),y=s("code",null,"getRecordLastModifiedDate()",-1),_=p(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Contracts<span class="token punctuation">\\</span>ETags<span class="token punctuation">\\</span>ETag</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Api<span class="token punctuation">\\</span>Requests<span class="token punctuation">\\</span>Resources<span class="token punctuation">\\</span>ShowSingleResourceRequest</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">DateTimeInterface</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">ShowUser</span> <span class="token keyword">extends</span> <span class="token class-name">ShowSingleResourceRequest</span>
<span class="token punctuation">{</span>
    <span class="token comment">// ...previous not shown...</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">getRecordEtag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name">ETag</span><span class="token operator">|</span><span class="token keyword type-declaration">null</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// The found record...</span>
        <span class="token variable">$record</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">record</span><span class="token punctuation">;</span>
        
        <span class="token comment">// Return valid etag for record - not shown here...</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">getRecordLastModifiedDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name">DateTimeInterface</span><span class="token operator">|</span><span class="token keyword type-declaration">null</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// The found record...</span>
        <span class="token variable">$record</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">record</span><span class="token punctuation">;</span>
        
        <span class="token comment">// Return valid last modified date for record - not shown here...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="resource-context" tabindex="-1"><a class="header-anchor" href="#resource-context" aria-hidden="true">#</a> Resource Context</h3>`,2),x=s("code",null,"wrapResourceContext()",-1),R=p(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Contracts<span class="token punctuation">\\</span>ETags<span class="token punctuation">\\</span>ETag</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Contracts<span class="token punctuation">\\</span>ETags<span class="token punctuation">\\</span>Preconditions<span class="token punctuation">\\</span>ResourceContext</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">DateTimeInterface</span><span class="token punctuation">;</span>

<span class="token comment">// ...inside your request...</span>

<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">wrapResourceContext</span><span class="token punctuation">(</span>
    <span class="token keyword type-hint">mixed</span> <span class="token variable">$record</span><span class="token punctuation">,</span>
    <span class="token class-name">ETag</span><span class="token operator">|</span><span class="token keyword type-declaration">null</span> <span class="token variable">$etag</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">,</span>
    <span class="token class-name">DateTimeInterface</span><span class="token operator">|</span><span class="token keyword type-declaration">null</span> <span class="token variable">$lastModifiedDate</span> <span class="token operator">=</span> <span class="token constant">null</span>
<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name return-type">ResourceContext</span>
<span class="token punctuation">{</span>
    <span class="token comment">// Return a Resource Context for the found record - not shown here...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="actions" tabindex="-1"><a class="header-anchor" href="#actions" aria-hidden="true">#</a> Actions</h3>`,2),q=s("code",null,"preconditionActions()",-1),E=p(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Contracts<span class="token punctuation">\\</span>ETags<span class="token punctuation">\\</span>Preconditions<span class="token punctuation">\\</span>Actions</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Users<span class="token punctuation">\\</span>Preconditions<span class="token punctuation">\\</span>UserActions</span><span class="token punctuation">;</span>

<span class="token comment">// ...inside your request...</span>

<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">preconditionActions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name">Actions</span><span class="token operator">|</span><span class="token keyword type-declaration">null</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">UserActions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="preconditions" tabindex="-1"><a class="header-anchor" href="#preconditions" aria-hidden="true">#</a> Preconditions</h3>`,2),A=s("code",null,"additionalPreconditions()",-1),T=p(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Preconditions<span class="token punctuation">\\</span>IfAuthor</span><span class="token punctuation">;</span>

<span class="token comment">// ...inside your request...</span>

<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">additionalPreconditions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">array</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span>
        <span class="token class-name static-context">IfAuthor</span><span class="token operator">::</span><span class="token keyword">class</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="evaluator" tabindex="-1"><a class="header-anchor" href="#evaluator" aria-hidden="true">#</a> Evaluator</h3><p>Lastly, if your request needs additional configuration of the <code>Evaluator</code> instance, then you can overwrite the <code>makePreconditionsEvaluator()</code> method.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Contracts<span class="token punctuation">\\</span>ETags<span class="token punctuation">\\</span>Preconditions<span class="token punctuation">\\</span>Evaluator</span><span class="token punctuation">;</span>

<span class="token comment">// ...inside your request...</span>

<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">makePreconditionsEvaluator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name return-type">Evaluator</span>
<span class="token punctuation">{</span>
    <span class="token variable">$evaluator</span> <span class="token operator">=</span> <span class="token keyword static-context">parent</span><span class="token operator">::</span><span class="token function">makePreconditionsEvaluator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// ...configure evaluator... not shown here...</span>
   
    <span class="token keyword">return</span> <span class="token variable">$evaluator</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onward" tabindex="-1"><a class="header-anchor" href="#onward" aria-hidden="true">#</a> Onward</h3><p>See the source code of <code>\\Aedart\\Http\\Api\\Requests\\Concerns\\HttpConditionals</code> for additional details.</p>`,6);function C(P,S){const t=c("router-link"),o=c("RouterLink");return l(),u("div",null,[d,k,s("nav",v,[s("ul",null,[s("li",null,[a(t,{to:"#authorisation"},{default:e(()=>[n("Authorisation")]),_:1})]),s("li",null,[a(t,{to:"#request-preconditions"},{default:e(()=>[n("Request Preconditions")]),_:1}),s("ul",null,[s("li",null,[a(t,{to:"#etag-and-last-modified-date"},{default:e(()=>[n("ETag and Last-Modified Date")]),_:1})]),s("li",null,[a(t,{to:"#resource-context"},{default:e(()=>[n("Resource Context")]),_:1})]),s("li",null,[a(t,{to:"#actions"},{default:e(()=>[n("Actions")]),_:1})]),s("li",null,[a(t,{to:"#preconditions"},{default:e(()=>[n("Preconditions")]),_:1})]),s("li",null,[a(t,{to:"#evaluator"},{default:e(()=>[n("Evaluator")]),_:1})]),s("li",null,[a(t,{to:"#onward"},{default:e(()=>[n("Onward")]),_:1})])])])])]),m,s("p",null,[n("The request abstraction will take care of the rest. The found record ("),h,n(") will be wrapped into a "),a(o,{to:"/archive/v7x/etags/evaluator/resource-context.html"},{default:e(()=>[n("Resource Content")]),_:1}),n(", and requested preconditions are automatically evaluated.")]),b,s("p",null,[n("When a record is found, and it "),a(o,{to:"/archive/v7x/etags/etags/eloquent.html"},{default:e(()=>[n("supports etags")]),_:1}),n(", a strong etag is automatically obtained and passed further to the "),f,n(". The same is true for a last modified date ("),g,n("). To configure this behaviour, overwrite "),w,n(" and/or "),y,n(".")]),_,s("p",null,[n("By default, a "),a(o,{to:"/archive/v7x/etags/evaluator/resource-context.html"},{default:e(()=>[n("Generic Resource")]),_:1}),n(" instance is used for wrapping the found record into a resource context. The "),x,n(" method is responsible for this.")]),R,s("p",null,[n("To use "),a(o,{to:"/archive/v7x/etags/evaluator/actions.html"},{default:e(()=>[n("custom actions")]),_:1}),n(", overwrite the "),q,n(".")]),E,s("p",null,[n("The default "),a(o,{to:"/archive/v7x/etags/evaluator/preconditions.html#supported-preconditions"},{default:e(()=>[n("supported preconditions")]),_:1}),n(" are used, when evaluation is enabled for your request. To add additional preconditions ("),s("em",null,[a(o,{to:"/archive/v7x/etags/evaluator/extensions/"},{default:e(()=>[n("extensions")]),_:1})]),n("), use the "),A,n(" method.")]),T])}const D=i(r,[["render",C],["__file","show-single.html.vue"]]);export{D as default};

import{_ as c,M as i,p as l,q as r,R as a,t as n,N as s,U as e,a1 as u}from"./framework-efe98465.js";const d={},k=a("h1",{id:"range-validator",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#range-validator","aria-hidden":"true"},"#"),n(" Range Validator")],-1),v=a("code",null,"RangeValidator",-1),m={class:"table-of-contents"},g=a("h2",{id:"default-behaviour",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#default-behaviour","aria-hidden":"true"},"#"),n(" Default Behaviour")],-1),h=a("p",null,[n("The default validator will ensure that the following are meet, when a "),a("code",null,"Range"),n(" header is available.")],-1),b={href:"https://httpwg.org/specs/rfc9110.html#range.units",target:"_blank",rel:"noopener noreferrer"},f=a("em",null,"e.g. bytes",-1),y={href:"https://httpwg.org/specs/rfc9110.html#rule.ranges-specifier",target:"_blank",rel:"noopener noreferrer"},_=a("code",null,"$maxRangeSets",-1),w=a("li",null,"Verify that requested ranges-sets do not overlap.",-1),R={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/400",target:"_blank",rel:"noopener noreferrer"},x={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/416",target:"_blank",rel:"noopener noreferrer"},C=u(`<h2 id="custom-validator" tabindex="-1"><a class="header-anchor" href="#custom-validator" aria-hidden="true">#</a> Custom Validator</h2><p>If the default provided range validator is not to your liking, you can create your own. This can be done either by extending the default or by inheriting from <code>\\Aedart\\Contracts\\ETags\\Preconditions\\RangeValidator</code>.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Contracts<span class="token punctuation">\\</span>ETags<span class="token punctuation">\\</span>Preconditions<span class="token punctuation">\\</span>RangeValidator</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>ETags<span class="token punctuation">\\</span>Preconditions<span class="token punctuation">\\</span>Concerns</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Contracts<span class="token punctuation">\\</span>ETags<span class="token punctuation">\\</span>Preconditions<span class="token punctuation">\\</span>Ranges<span class="token punctuation">\\</span>RangeSet</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Ramsey<span class="token punctuation">\\</span>Collection<span class="token punctuation">\\</span>CollectionInterface</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">MyCustomRangeValidator</span> <span class="token keyword">implements</span> <span class="token class-name">RangeValidator</span>
<span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token package">Concerns<span class="token punctuation">\\</span>CurrentRequest</span><span class="token punctuation">;</span>
    <span class="token keyword">use</span> <span class="token package">Concerns<span class="token punctuation">\\</span>Actions</span><span class="token punctuation">;</span>
    
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span>
        <span class="token keyword">protected</span> <span class="token keyword type-declaration">string</span> <span class="token variable">$rangeUnit</span><span class="token punctuation">,</span>
        <span class="token keyword">protected</span> <span class="token keyword type-declaration">int</span> <span class="token variable">$maxRangeSets</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Validates requested &quot;Range&quot; header field, for given resource
     *
     * <span class="token keyword">@param</span>  <span class="token class-name">ResourceContext</span>  <span class="token parameter">$resource</span>
     *
     * <span class="token keyword">@return</span> <span class="token class-name">CollectionInterface</span>&lt;RangeSet&gt;

     * <span class="token keyword">@throws</span> <span class="token class-name">HttpExceptionInterface</span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">validate</span><span class="token punctuation">(</span><span class="token class-name type-declaration">ResourceContext</span> <span class="token variable">$resource</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name return-type">CollectionInterface</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// ... validation logic not shown here...</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">allowedRangeUnit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">rangeUnit</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">maximumRangeSets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">int</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">maximumRangeSets</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">Constructor Arguments</p><p>The <code>__construct()</code> arguments (<code>rangeUnit</code> and <code>maxRangeSets</code>) are required. These will be provided by the internal mechanisms of the If-Range and Range preconditions.</p></div><h3 id="register-custom-validator" tabindex="-1"><a class="header-anchor" href="#register-custom-validator" aria-hidden="true">#</a> Register Custom Validator</h3><p>To use your custom range validator, you must bind it in the application&#39;s service container. This can, for instance, be done in your <code>AppServiceProvider</code>.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\\</span>Providers</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Contracts<span class="token punctuation">\\</span>ETags<span class="token punctuation">\\</span>Preconditions<span class="token punctuation">\\</span>RangeValidator</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Validators<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>MyCustomRangeValidator</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>ServiceProvider</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">AppServiceProvider</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceProvider</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">app</span><span class="token operator">-&gt;</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token class-name static-context">RangeValidator</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$app</span><span class="token punctuation">,</span> <span class="token keyword type-hint">array</span> <span class="token variable">$args</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">$unit</span> <span class="token operator">=</span> <span class="token variable">$args</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;rangeUnit&#39;</span><span class="token punctuation">]</span> <span class="token operator">??</span> <span class="token string single-quoted-string">&#39;bytes&#39;</span><span class="token punctuation">;</span>
            <span class="token variable">$maxRanges</span> <span class="token operator">=</span> <span class="token variable">$args</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;maxRangeSets&#39;</span><span class="token punctuation">]</span> <span class="token operator">??</span> <span class="token number">5</span><span class="token punctuation">;</span>

            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">MyCustomRangeValidator</span><span class="token punctuation">(</span><span class="token variable">$unit</span><span class="token punctuation">,</span> <span class="token variable">$maxRanges</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// ... remaining not shown ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function V(S,T){const t=i("RouterLink"),p=i("router-link"),o=i("ExternalLinkIcon");return l(),r("div",null,[k,a("p",null,[n("The "),s(t,{to:"/archive/current/etags/evaluator/rfc9110/if-range.html"},{default:e(()=>[n("If-Range")]),_:1}),n(" and "),s(t,{to:"/archive/current/etags/evaluator/extensions/range.html"},{default:e(()=>[n("Range")]),_:1}),n(" preconditions make use of "),v,n(" component, whenever they are evaluated. A default validator is automatically bound in the service container, when you register this package's service container.")]),a("nav",m,[a("ul",null,[a("li",null,[s(p,{to:"#default-behaviour"},{default:e(()=>[n("Default Behaviour")]),_:1})]),a("li",null,[s(p,{to:"#custom-validator"},{default:e(()=>[n("Custom Validator")]),_:1}),a("ul",null,[a("li",null,[s(p,{to:"#register-custom-validator"},{default:e(()=>[n("Register Custom Validator")]),_:1})])])])])]),g,h,a("ul",null,[a("li",null,[n("Verify "),a("a",b,[n("range unit"),s(o)]),n(" ("),f,n(") is supported / allowed.")]),a("li",null,[n("Verify that requested "),a("a",y,[n("range-sets"),s(o)]),n(" do not exceed maximum amount ("),a("em",null,[n("See resource context's "),s(t,{to:"/archive/current/etags/evaluator/resource-context.html"},{default:e(()=>[_,n(" argument")]),_:1})]),n(")")]),w,a("li",null,[n("Wrap requested range-sets into a collection, which can then be set in the assigned "),s(t,{to:"/archive/current/etags/evaluator/resource-context.html"},{default:e(()=>[n("resource context")]),_:1}),n(".")])]),a("p",null,[n("Depending on what verification fails to meet desired expectation, the validator will abort the request via its assigned "),s(t,{to:"/archive/current/etags/evaluator/actions.html"},{default:e(()=>[n("actions")]),_:1}),n(". The result is that either of the following responses are returned by your application:")]),a("ul",null,[a("li",null,[a("a",R,[n("400 Bad Request"),s(o)])]),a("li",null,[a("a",x,[n("416 Range Not Satisfiable"),s(o)])])]),C])}const q=c(d,[["render",V],["__file","range-validator.html.vue"]]);export{q as default};

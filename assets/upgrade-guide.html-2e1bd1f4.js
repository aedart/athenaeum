import{_ as c,M as l,p,q as r,R as e,N as a,U as t,t as n,a1 as i}from"./framework-efe98465.js";const d={},u=e("h1",{id:"upgrade-guide",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#upgrade-guide","aria-hidden":"true"},"#"),n(" Upgrade Guide")],-1),h=e("h2",{id:"from-version-5-x-to-6-x",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#from-version-5-x-to-6-x","aria-hidden":"true"},"#"),n(" From version 5.x to 6.x.")],-1),m={class:"table-of-contents"},v=i('<h3 id="php-version-8-required" tabindex="-1"><a class="header-anchor" href="#php-version-8-required" aria-hidden="true">#</a> PHP version <code>8</code> required</h3><p>You need PHP <code>v8.0.2</code> or higher to run Athenaeum packages.</p><p><strong>Note</strong>: <em>PHP <code>v8.1</code> is supported!</em></p><h3 id="laravel-v9-x" tabindex="-1"><a class="header-anchor" href="#laravel-v9-x" aria-hidden="true">#</a> Laravel <code>v9.x</code></h3>',4),k=e("code",null,"v9.x",-1),g={href:"https://laravel.com/docs/9.x/upgrade",target:"_blank",rel:"noopener noreferrer"},f=e("h3",{id:"argument-and-return-types",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#argument-and-return-types","aria-hidden":"true"},"#"),n(" Argument- and Return Types")],-1),b={href:"https://php.watch/versions/8.0/union-types",target:"_blank",rel:"noopener noreferrer"},_=i(`<ul><li>You implement an interface</li><li>You extend a component</li></ul><p>Some of these changes will be highlighted in this upgrade guide, yet there are too many to cover here. Please make sure to <em>test your code</em> before using any Athenaeum package in a production environment!</p><h3 id="version-util-return-type" tabindex="-1"><a class="header-anchor" href="#version-util-return-type" aria-hidden="true">#</a> Version util return type</h3><p>The <code>\\Aedart\\Utils\\Version</code> utility now returns <code>\\Aedart\\Contracts\\Utils\\Packages\\Version</code> for it&#39;s <code>application()</code> and <code>package()</code> methods.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// Previously</span>
<span class="token variable">$version</span> <span class="token operator">=</span> <span class="token class-name static-context">Version</span><span class="token operator">::</span><span class="token function">application</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \\Jean85\\Version</span>

<span class="token comment">// Now...</span>
<span class="token variable">$version</span> <span class="token operator">=</span> <span class="token class-name static-context">Version</span><span class="token operator">::</span><span class="token function">application</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \\Aedart\\Contracts\\Utils\\Packages\\Version</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In addition, a <code>PackageVersionException</code> is now thrown from the <code>package()</code> method, if a version cannot be obtained.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// Previously</span>
<span class="token class-name static-context">Version</span><span class="token operator">::</span><span class="token function">package</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;acme/unknown-package&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// OutOfBoundsException thrown</span>

<span class="token comment">// Now...</span>
<span class="token class-name static-context">Version</span><span class="token operator">::</span><span class="token function">package</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;acme/unknown-package&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \\Aedart\\Contracts\\Utils\\Packages\\Exceptions\\PackageVersionException thrown</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),y={href:"https://github.com/aedart/athenaeum/issues/68",target:"_blank",rel:"noopener noreferrer"},w=i(`<h3 id="populate-now-returns-static" tabindex="-1"><a class="header-anchor" href="#populate-now-returns-static" aria-hidden="true">#</a> <code>populate()</code> now returns <code>static</code></h3><p>The <code>\\Aedart\\Contracts\\Utils\\Populatable::populate()</code> method new returns <code>static</code>. This allows for a more fluent experience, when working with DTOs, e.g.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// Previously</span>
<span class="token variable">$person</span><span class="token operator">-&gt;</span><span class="token function">populate</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;John Smith&#39;</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$person</span><span class="token operator">-&gt;</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">28</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Now...</span>
<span class="token variable">$person</span><span class="token operator">-&gt;</span><span class="token function">populate</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;John Smith&#39;</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">28</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If you have a custom implementation of <code>populate()</code>, then you must now ensure that the method returns.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Contracts<span class="token punctuation">\\</span>Utils<span class="token punctuation">\\</span>Populatable</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">Person</span> <span class="token keyword">implements</span> <span class="token class-name">Populatable</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">populate</span><span class="token punctuation">(</span><span class="token keyword type-hint">array</span> <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">static</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// ...populate implementation not shown...</span>
        
        <span class="token comment">// Make sure to return instance!</span>
        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="listener-option-replaced-in-audit-trail-package" tabindex="-1"><a class="header-anchor" href="#listener-option-replaced-in-audit-trail-package" aria-hidden="true">#</a> Listener option replaced, in Audit Trail package</h3>`,6),x=e("code",null,"listener",-1),A=e("code",null,"config/audit-trail.php",-1),T=e("code",null,"subscriber",-1),P={href:"https://laravel.com/docs/9.x/events#event-subscribers",target:"_blank",rel:"noopener noreferrer"},q=i(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">return</span> <span class="token punctuation">[</span>
    <span class="token comment">// ...previous not shown ...</span>
    
    <span class="token comment">// &#39;listener&#39; NO LONGER USED!</span>
    <span class="token string single-quoted-string">&#39;listener&#39;</span> <span class="token operator">=&gt;</span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Aedart<span class="token punctuation">\\</span>Audit<span class="token punctuation">\\</span>Listeners<span class="token punctuation">\\</span>RecordAuditTrailEntry</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>

    <span class="token comment">// Replacement</span>
    <span class="token string single-quoted-string">&#39;subscriber&#39;</span> <span class="token operator">=&gt;</span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Aedart<span class="token punctuation">\\</span>Audit<span class="token punctuation">\\</span>Subscribers<span class="token punctuation">\\</span>AuditTrailEventSubscriber</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>

    <span class="token comment">// ...remaining not shown ...</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="rfc3339-used-as-default-format" tabindex="-1"><a class="header-anchor" href="#rfc3339-used-as-default-format" aria-hidden="true">#</a> RFC3339 used as default format</h3>`,2),S={href:"https://datatracker.ietf.org/doc/html/rfc3339",target:"_blank",rel:"noopener noreferrer"},L=e("code",null,"datetime_format",-1),C=e("code",null,"config/http-clients",-1),V=e("em",null,[n("If you already have a datetime format specified in "),e("code",null,"config/http-clients.php"),n(", then this change will not affect you.")],-1),N=i(`<h3 id="language-directory-path-in-core-application" tabindex="-1"><a class="header-anchor" href="#language-directory-path-in-core-application" aria-hidden="true">#</a> Language directory path in Core <code>Application</code></h3><p>The Core <code>Application</code> and <code>PathsContainer</code> now offer a <code>langPath()</code> method. This method has been added due to the addition and changes regarding language files in Laravel. By default, if your application has not specified a custom language path, it will return a default path in the root of the project (<em>previously lang directory was located in <code>resources/lang</code></em>).</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">echo</span> <span class="token variable">$application</span><span class="token operator">-&gt;</span><span class="token function">langPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// lang</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3),R=e("code",null,"resources/lang",-1),E={href:"https://laravel.com/docs/9.x/upgrade#the-lang-directory",target:"_blank",rel:"noopener noreferrer"},U=i(`<h3 id="replaced-datetime-with-datetimeinterface" tabindex="-1"><a class="header-anchor" href="#replaced-datetime-with-datetimeinterface" aria-hidden="true">#</a> Replaced <code>\\DateTime</code> with <code>\\DateTimeInterface</code></h3><p>Several &quot;aware-of&quot; helpers previously declared <code>\\DateTime</code> as their value type, e.g. <code>\\Aedart\\Contracts\\Support\\Properties\\Integers\\DateAware</code>. These have all been changed to accept <code>\\DateTimeInterface</code> instead.</p><p><em>This change can affect you if you have overwritten any getter, setter or default-value method, from the &quot;aware-of&quot; components.</em></p><h3 id="seed-can-no-longer-be-null" tabindex="-1"><a class="header-anchor" href="#seed-can-no-longer-be-null" aria-hidden="true">#</a> <code>$seed</code> can no longer be <code>null</code></h3><p>The <code>$seed</code> argument for <code>\\Aedart\\Utils\\Math::applySeed()</code> no longer accepts <code>null</code> as value.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// Previously</span>
<span class="token class-name static-context">Math</span><span class="token operator">::</span><span class="token function">applySeed</span><span class="token punctuation">(</span><span class="token constant">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Was allowed</span>

<span class="token comment">// Now...</span>
<span class="token class-name static-context">Math</span><span class="token operator">::</span><span class="token function">applySeed</span><span class="token punctuation">(</span><span class="token constant">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// NOT allowed!</span>

<span class="token comment">// Use 0 instead, if needed!</span>
<span class="token class-name static-context">Math</span><span class="token operator">::</span><span class="token function">applySeed</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// allowed</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="removed-mocksapplicationservices-from-testing-utilities" tabindex="-1"><a class="header-anchor" href="#removed-mocksapplicationservices-from-testing-utilities" aria-hidden="true">#</a> Removed <code>MocksApplicationServices</code> from testing utilities</h3><p>The <code>\\Illuminate\\Foundation\\Testing\\Concerns\\MocksApplicationServices</code> helper has been deprecated by Laravel and therefore removed from <code>AthenaeumTestHelper</code> and <code>LaravelTestHelper</code> entirely. If you rely on this component, then you are strongly encouraged to refactor your tests, as it will not be supported in future versions of Laravel.</p><h2 id="onward" tabindex="-1"><a class="header-anchor" href="#onward" aria-hidden="true">#</a> Onward</h2>`,9),I={href:"https://github.com/aedart/athenaeum/blob/master/CHANGELOG.md",target:"_blank",rel:"noopener noreferrer"};function $(M,D){const s=l("router-link"),o=l("ExternalLinkIcon");return p(),r("div",null,[u,h,e("nav",m,[e("ul",null,[e("li",null,[a(s,{to:"#from-version-5-x-to-6-x"},{default:t(()=>[n("From version 5.x to 6.x.")]),_:1}),e("ul",null,[e("li",null,[a(s,{to:"#php-version-8-required"},{default:t(()=>[n("PHP version 8 required")]),_:1})]),e("li",null,[a(s,{to:"#laravel-v9-x"},{default:t(()=>[n("Laravel v9.x")]),_:1})]),e("li",null,[a(s,{to:"#argument-and-return-types"},{default:t(()=>[n("Argument- and Return Types")]),_:1})]),e("li",null,[a(s,{to:"#version-util-return-type"},{default:t(()=>[n("Version util return type")]),_:1})]),e("li",null,[a(s,{to:"#populate-now-returns-static"},{default:t(()=>[n("populate() now returns static")]),_:1})]),e("li",null,[a(s,{to:"#listener-option-replaced-in-audit-trail-package"},{default:t(()=>[n("Listener option replaced, in Audit Trail package")]),_:1})]),e("li",null,[a(s,{to:"#rfc3339-used-as-default-format"},{default:t(()=>[n("RFC3339 used as default format")]),_:1})]),e("li",null,[a(s,{to:"#language-directory-path-in-core-application"},{default:t(()=>[n("Language directory path in Core Application")]),_:1})]),e("li",null,[a(s,{to:"#replaced-datetime-with-datetimeinterface"},{default:t(()=>[n("Replaced \\DateTime with \\DateTimeInterface")]),_:1})]),e("li",null,[a(s,{to:"#seed-can-no-longer-be-null"},{default:t(()=>[n("$seed can no longer be null")]),_:1})]),e("li",null,[a(s,{to:"#removed-mocksapplicationservices-from-testing-utilities"},{default:t(()=>[n("Removed MocksApplicationServices from testing utilities")]),_:1})])])]),e("li",null,[a(s,{to:"#onward"},{default:t(()=>[n("Onward")]),_:1})])])]),v,e("p",null,[n("Since Athenaeum has upgraded to Laravel "),k,n(", you should read Laravel's "),e("a",g,[n("upgrade guide"),a(o)]),n(", before continuing here.")]),f,e("p",null,[n("Almost all components, throughout all packages, have their argument and return types changed. "),e("a",b,[n("Union Types"),a(o)]),n(" are now being used extensively, where appropriate. This means that you will most likely experience breaking changes if:")]),_,e("p",null,[n("See "),e("a",y,[n("#68"),a(o)]),n(" for additional details.")]),w,e("p",null,[n("The "),x,n(" option found in "),A,n(" has been replaced by "),T,n(", which uses an "),e("a",P,[n("event subscriber"),a(o)]),n(" component instead.")]),q,e("p",null,[e("a",S,[n("RFC3339"),a(o)]),n(" is now set as the default "),L,n(" option for the Http Query Grammar Profiles, in "),C,n(". "),V]),N,e("p",null,[n("The application will ensure that if you still use "),R,n(", then languages files will be read from there. See "),e("a",E,[n("Laravel's upgrade guide"),a(o)]),n(" for details.")]),U,e("p",null,[n("More extensive details can be found in the "),e("a",I,[n("changelog"),a(o)]),n(".")])])}const H=c(d,[["render",$],["__file","upgrade-guide.html.vue"]]);export{H as default};

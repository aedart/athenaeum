import{_ as p,M as a,p as c,q as l,R as s,t as n,N as e,U as i,a1 as r}from"./framework-efe98465.js";const u={},d=s("h1",{id:"filename",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#filename","aria-hidden":"true"},"#"),n(" Filename")],-1),k=s("code",null,"uri()",-1),m=s("code",null,"uri",-1),h=s("code",null,"filename()",-1),f={href:"https://www.php.net/manual/en/function.basename",target:"_blank",rel:"noopener noreferrer"},v=s("code",null,"filename",-1),_=r(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$stream</span> <span class="token operator">=</span> <span class="token class-name static-context">FileStream</span><span class="token operator">::</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;houses.txt&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;rb&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token variable">$stream</span><span class="token operator">-&gt;</span><span class="token function">uri</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// /home/my_user/files/houses.txt</span>
<span class="token keyword">echo</span> <span class="token variable">$stream</span><span class="token operator">-&gt;</span><span class="token function">filename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// houses.txt</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If you specify a custom <code>filename</code> metadata, then it will be favoured instead of the basename.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$stream</span> <span class="token operator">=</span> <span class="token class-name static-context">FileStream</span><span class="token operator">::</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;houses.txt&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;rb&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$stream</span><span class="token operator">-&gt;</span><span class="token function">meta</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;filename&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;my_file.txt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token variable">$stream</span><span class="token operator">-&gt;</span><span class="token function">uri</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// /home/my_user/files/houses.txt</span>
<span class="token keyword">echo</span> <span class="token variable">$stream</span><span class="token operator">-&gt;</span><span class="token function">filename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// my_file.txt</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function g(b,x){const t=a("RouterLink"),o=a("ExternalLinkIcon");return c(),l("div",null,[d,s("p",null,[n("There are two methods for obtaining the filename. The first is "),k,n(", which return the "),m,n(),e(t,{to:"/archive/v8x/streams/usage/meta.html"},{default:i(()=>[n("metadata")]),_:1}),n(". The second is "),h,n(", which returns the file's "),s("a",f,[n("basename"),e(o)]),n(", or a custom "),v,n(" entry from the stream's metadata.")]),_])}const y=p(u,[["render",g],["__file","filename.html.vue"]]);export{y as default};

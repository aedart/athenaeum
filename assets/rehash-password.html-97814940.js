import{_ as t,M as o,p,q as c,R as n,t as s,N as e,a1 as i}from"./framework-efe98465.js";const l={},r=n("h1",{id:"rehash-password-if-needed",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#rehash-password-if-needed","aria-hidden":"true"},"#"),s(" Rehash Password If Needed")],-1),u=n("code",null,"RehashPasswordIfNeeded",-1),d=n("code",null,"Hasher",-1),k={href:"https://laravel.com/docs/10.x/hashing#determining-if-a-password-needs-to-be-rehashed",target:"_blank",rel:"noopener noreferrer"},h={class:"custom-container warning"},v=n("p",{class:"custom-container-title"},"Caution",-1),b=n("strong",null,"NOT SAVE",-1),m={href:"https://laravel.com/docs/10.x/authentication#the-authenticatable-contract",target:"_blank",rel:"noopener noreferrer"},w=n("code",null,"Authenticatable",-1),f=n("p",null,[s("See "),n("a",{href:"#password-was-rehashed-event"},"password rehashed event"),s(", for details.")],-1),g=n("h2",{id:"how-to-use",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#how-to-use","aria-hidden":"true"},"#"),s(" How to use")],-1),y={href:"https://laravel.com/docs/10.x/fortify#customizing-the-authentication-pipeline",target:"_blank",rel:"noopener noreferrer"},_=n("code",null,"App\\Providers\\FortifyServiceProvider",-1),x=i(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Auth<span class="token punctuation">\\</span>Fortify<span class="token punctuation">\\</span>Actions<span class="token punctuation">\\</span>RehashPasswordIfNeeded</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>ServiceProvider</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Laravel<span class="token punctuation">\\</span>Fortify<span class="token punctuation">\\</span>Actions<span class="token punctuation">\\</span>AttemptToAuthenticate</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Laravel<span class="token punctuation">\\</span>Fortify<span class="token punctuation">\\</span>Actions<span class="token punctuation">\\</span>EnsureLoginIsNotThrottled</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Laravel<span class="token punctuation">\\</span>Fortify<span class="token punctuation">\\</span>Actions<span class="token punctuation">\\</span>PrepareAuthenticatedSession</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Laravel<span class="token punctuation">\\</span>Fortify<span class="token punctuation">\\</span>Actions<span class="token punctuation">\\</span>RedirectIfTwoFactorAuthenticatable</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Laravel<span class="token punctuation">\\</span>Fortify<span class="token punctuation">\\</span>Fortify</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Request</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">FortifyServiceProvider</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceProvider</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">boot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">void</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// ...previous not shown...</span>
        
        <span class="token comment">// Use custom authentication pipeline...</span>
        <span class="token class-name static-context">Fortify</span><span class="token operator">::</span><span class="token function">authenticateThrough</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">Request</span> <span class="token variable">$request</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">array_filter</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
                    <span class="token function">config</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;fortify.limiters.login&#39;</span><span class="token punctuation">)</span>
                        <span class="token operator">?</span> <span class="token constant">null</span>
                        <span class="token punctuation">:</span> <span class="token class-name static-context">EnsureLoginIsNotThrottled</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>

                    <span class="token class-name static-context">Features</span><span class="token operator">::</span><span class="token function">enabled</span><span class="token punctuation">(</span><span class="token class-name static-context">Features</span><span class="token operator">::</span><span class="token function">twoFactorAuthentication</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token operator">?</span> <span class="token class-name static-context">RedirectIfTwoFactorAuthenticatable</span><span class="token operator">::</span><span class="token keyword">class</span>
                        <span class="token punctuation">:</span> <span class="token constant">null</span><span class="token punctuation">,</span>

                    <span class="token class-name static-context">AttemptToAuthenticate</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>
                    <span class="token class-name static-context">PrepareAuthenticatedSession</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>
                    
                    <span class="token comment">// Add the rehash password action AFTER user was authenticated!</span>
                    <span class="token class-name static-context">RehashPasswordIfNeeded</span><span class="token operator">::</span><span class="token keyword">class</span>
            <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// ...remaining not shown...</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line">Â </div><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="password-was-rehashed-event" tabindex="-1"><a class="header-anchor" href="#password-was-rehashed-event" aria-hidden="true">#</a> Password Was Rehashed Event</h2><p>When the user&#39;s password is rehashed, the <code>PasswordWasRehashed</code> event is dispatched. It contains the authenticated user and the rehashed password. You can listen for this event and change your user&#39;s current password with a new one, as you see fit.</p><p>The following example assumes that an Eloquent Model is used as the application&#39;s <code>Authenticatable</code> user.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// ...inside App\\Providers\\EventServiceProvider...</span>

<span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Auth<span class="token punctuation">\\</span>Fortify<span class="token punctuation">\\</span>Events<span class="token punctuation">\\</span>PasswordWasRehashed</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>Facades<span class="token punctuation">\\</span>Event</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">boot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">void</span>
<span class="token punctuation">{</span> 
    <span class="token class-name static-context">Event</span><span class="token operator">::</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">PasswordWasRehashed</span> <span class="token variable">$event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token variable">$user</span> <span class="token operator">=</span> <span class="token variable">$event</span><span class="token operator">-&gt;</span><span class="token property">user</span><span class="token punctuation">;</span>
 
        <span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">forceFill</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;password&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$event</span><span class="token operator">-&gt;</span><span class="token property">hashed</span> <span class="token comment">// the new password hash!</span>
        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function A(F,P){const a=o("ExternalLinkIcon");return p(),c("div",null,[r,n("p",null,[s("The "),u,s(" action is responsible for rehashing the user's password, when it is required. Internally, the "),d,s(" component is used for "),n("a",k,[s("determining if the password needs to be rehashed"),e(a)]),s(", as well as the actual rehashing.")]),n("div",h,[v,n("p",null,[s("While this action will rehash the user's password, it will "),b,s(" the new hashed password! This must be done manually. No assumptions are made regarding how to persist changes on the authenticated user ("),n("em",null,[n("a",m,[w,s(" component"),e(a)])]),s(").")]),f]),g,n("p",null,[s("The easiest way to enable this action, is by overwriting the default "),n("a",y,[s("authentication pipelines"),e(a)]),s(", in your "),_,s(".")]),x])}const R=t(l,[["render",A],["__file","rehash-password.html.vue"]]);export{R as default};

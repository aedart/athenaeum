import{_ as t,M as o,p as c,q as p,R as s,t as n,N as e,a1 as i}from"./framework-efe98465.js";const l={},r=s("h1",{id:"test-cases",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#test-cases","aria-hidden":"true"},"#"),n(" Test Cases")],-1),d=s("p",null,"Base abstraction classes for your test-classes can inherit from.",-1),u=s("h2",{id:"unittestcase",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#unittestcase","aria-hidden":"true"},"#"),n(" UnitTestCase")],-1),k={href:"https://github.com/fzaninotto/Faker",target:"_blank",rel:"noopener noreferrer"},v={href:"https://github.com/mockery/mockery",target:"_blank",rel:"noopener noreferrer"},m=i(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package"><span class="token punctuation">\\</span>Aedart<span class="token punctuation">\\</span>Testing<span class="token punctuation">\\</span>TestCases<span class="token punctuation">\\</span>UnitTestCase</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">MyTest</span> <span class="token keyword">extends</span> <span class="token class-name">UnitTestCase</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * <span class="token keyword">@test</span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">isFakerAvailable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$value</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">faker</span><span class="token operator">-&gt;</span><span class="token property">address</span><span class="token punctuation">;</span>

        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">assertNotEmpty</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function h(b,_){const a=o("ExternalLinkIcon");return c(),p("div",null,[r,d,u,s("p",null,[n("A basic unit test-case that setup "),s("a",k,[n("Faker"),e(a)]),n(", before each test and closes "),s("a",v,[n("Mockery"),e(a)]),n(" after each test.")]),m])}const y=t(l,[["render",h],["__file","test-cases.html.vue"]]);export{y as default};

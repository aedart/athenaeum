import{_ as n,p as s,q as e,a1 as a}from"./framework-efe98465.js";const t={},o=a(`<h1 id="default-generator" tabindex="-1"><a class="header-anchor" href="#default-generator" aria-hidden="true">#</a> Default Generator</h1><p>Unless otherwise specified in your <code>config/etags.php</code>, the <code>GenericGenerator</code> is the default used etag <code>Generator</code>. Its main purpose is to hash arbitrary content, and create <code>Etag</code> instances with the hash value.</p><p>Depending on your configuration, two different hashing algorithms are used:</p><ul><li><code>weak_algo</code>: used for when creating etags flagged as &quot;weak&quot; (<em>e.g. for weak comparison</em>)</li><li><code>strong_algo</code>: used for when creating etags that are NOT flagged as &quot;weak&quot; (<em>e.g. for strong comparison</em>)</li></ul><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">return</span> <span class="token punctuation">[</span>
    <span class="token comment">// ...previous not shown ...</span>

    <span class="token string single-quoted-string">&#39;profiles&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>

        <span class="token string single-quoted-string">&#39;default&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;driver&#39;</span> <span class="token operator">=&gt;</span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Aedart<span class="token punctuation">\\</span>ETags<span class="token punctuation">\\</span>Generators<span class="token punctuation">\\</span>GenericGenerator</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;options&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
                <span class="token string single-quoted-string">&#39;weak_algo&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;crc32&#39;</span><span class="token punctuation">,</span>
                <span class="token string single-quoted-string">&#39;strong_algo&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;sha1&#39;</span><span class="token punctuation">,</span>
            <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Feel free to specify whatever hashing algorithms your prefer, in the configuration. Furthermore, you are encouraged to review the source code of <code>\\Aedart\\ETags\\Generators\\GenericGenerator</code> to gain a better understanding of the generator works.</p>`,6),i=[o];function r(c,p){return s(),e("div",null,i)}const u=n(t,[["render",r],["__file","index.html.vue"]]);export{u as default};

import{_ as o,M as p,p as c,q as i,R as n,t as a,N as e,a1 as t}from"./framework-efe98465.js";const l={},r=n("h1",{id:"introduction",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#introduction","aria-hidden":"true"},"#"),a(" Introduction")],-1),u={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag",target:"_blank",rel:"noopener noreferrer"},d={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Conditional_requests",target:"_blank",rel:"noopener noreferrer"},k=t(`<h2 id="etags-examples" tabindex="-1"><a class="header-anchor" href="#etags-examples" aria-hidden="true">#</a> ETags Examples</h2><h3 id="generate" tabindex="-1"><a class="header-anchor" href="#generate" aria-hidden="true">#</a> Generate</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>ETags<span class="token punctuation">\\</span>Facades<span class="token punctuation">\\</span>Generator</span><span class="token punctuation">;</span>

<span class="token comment">// Generate an ETag for strong comparison, of content</span>
<span class="token variable">$etag</span> <span class="token operator">=</span> <span class="token class-name static-context">Generator</span><span class="token operator">::</span><span class="token function">makeStrong</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span> <span class="token variable">$etag</span><span class="token punctuation">;</span> <span class="token comment">// &quot;4720b076892bb2fb65e75af902273c73a2967e4a&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Or to generate ETags that are flagged as &quot;weak&quot; (<em>for weak comparison</em>)</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$etag</span> <span class="token operator">=</span> <span class="token class-name static-context">Generator</span><span class="token operator">::</span><span class="token function">makeWeak</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span> <span class="token variable">$etag</span><span class="token punctuation">;</span> <span class="token comment">// W/&quot;0815&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="parsing" tabindex="-1"><a class="header-anchor" href="#parsing" aria-hidden="true">#</a> Parsing</h3><p>To parse ETags from Http headers, you can use the <code>parse()</code> method. It returns a collection of <code>ETag</code> instances.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// E.g. If-None-Match: W/&quot;0815&quot;, W/&quot;0816&quot;, W/&quot;0817&quot;</span>
<span class="token variable">$collection</span> <span class="token operator">=</span> <span class="token class-name static-context">Generator</span><span class="token operator">::</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;If-None-Match&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  

<span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$collection</span> <span class="token keyword">as</span> <span class="token variable">$etag</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span> <span class="token variable">$etag</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compare" tabindex="-1"><a class="header-anchor" href="#compare" aria-hidden="true">#</a> Compare</h3>`,9),h={href:"https://httpwg.org/specs/rfc9110.html#rfc.section.8.8.3.2",target:"_blank",rel:"noopener noreferrer"},m=t(`<h4 id="using-collection" tabindex="-1"><a class="header-anchor" href="#using-collection" aria-hidden="true">#</a> Using Collection</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// Etags from Http Header</span>
<span class="token variable">$collection</span> <span class="token operator">=</span> <span class="token class-name static-context">Generator</span><span class="token operator">::</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;If-Match&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// E.g. &#39;W/&quot;0815&quot;&#39; </span>

<span class="token comment">// Other Etag for your resource</span>
<span class="token variable">$etag</span> <span class="token operator">=</span> <span class="token class-name static-context">Generator</span><span class="token operator">::</span><span class="token function">makeWeak</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// E.g. W/&quot;0815&quot;</span>

<span class="token comment">// Compare etags against resource&#39;s etag</span>
<span class="token keyword">echo</span> <span class="token variable">$collection</span><span class="token operator">-&gt;</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token variable">$etag</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false - strong comparison</span>
<span class="token keyword">echo</span> <span class="token variable">$collection</span><span class="token operator">-&gt;</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token variable">$etag</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">// true - weak comparison</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="using-etag-instance" tabindex="-1"><a class="header-anchor" href="#using-etag-instance" aria-hidden="true">#</a> Using Etag instance</h4><p>You can also compare individual <code>ETag</code> instances, using the <code>matches()</code> method.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$etagA</span> <span class="token operator">=</span> <span class="token class-name static-context">Generator</span><span class="token operator">::</span><span class="token function">parseSingle</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;W/&quot;0815&quot;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$etagB</span> <span class="token operator">=</span> <span class="token class-name static-context">Generator</span><span class="token operator">::</span><span class="token function">parseSingle</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;W/&quot;0815&quot;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token variable">$etagA</span><span class="token operator">-&gt;</span><span class="token function">matches</span><span class="token punctuation">(</span><span class="token variable">$etagB</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false - strong comparison</span>
<span class="token keyword">echo</span> <span class="token variable">$etagA</span><span class="token operator">-&gt;</span><span class="token function">matches</span><span class="token punctuation">(</span><span class="token variable">$etagB</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">// true - weak comparison</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="evaluate-http-preconditions-examples" tabindex="-1"><a class="header-anchor" href="#evaluate-http-preconditions-examples" aria-hidden="true">#</a> Evaluate Http Preconditions Examples</h2>`,6),g=n("code",null,"Evaluator",-1),v={href:"https://httpwg.org/specs/rfc9110.html#preconditions",target:"_blank",rel:"noopener noreferrer"},b={href:"https://httpwg.org/specs/rfc9110.html#precedence",target:"_blank",rel:"noopener noreferrer"},f=t(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>ETags<span class="token punctuation">\\</span>Preconditions<span class="token punctuation">\\</span>Evaluator</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>ETags<span class="token punctuation">\\</span>Preconditions<span class="token punctuation">\\</span>Resources<span class="token punctuation">\\</span>GenericResource</span><span class="token punctuation">;</span>

<span class="token comment">// Process If-Match, If-None-Match, If-Modified-Since... etc</span>
<span class="token comment">// Depending on condition&#39;s pass/fail, the request can be aborted via</span>
<span class="token comment">// an appropriate Http Exception, or proceed to your logic...</span>
<span class="token variable">$resource</span> <span class="token operator">=</span> <span class="token class-name static-context">Evaluator</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">GenericResource</span><span class="token punctuation">(</span>
        <span class="token argument-name">data</span><span class="token punctuation">:</span> <span class="token variable">$model</span><span class="token punctuation">,</span>
        <span class="token argument-name">etag</span><span class="token punctuation">:</span> <span class="token variable">$model</span><span class="token operator">-&gt;</span><span class="token function">getStrongEtag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token argument-name">lastModifiedDate</span><span class="token punctuation">:</span> <span class="token variable">$model</span><span class="token operator">-&gt;</span><span class="token property">updated_at</span>
    <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>To summarise, the following preconditions are supported:</p>`,2),_={href:"https://httpwg.org/specs/rfc9110.html#field.if-match",target:"_blank",rel:"noopener noreferrer"},x={href:"https://httpwg.org/specs/rfc9110.html#field.if-none-match",target:"_blank",rel:"noopener noreferrer"},w={href:"https://httpwg.org/specs/rfc9110.html#field.if-modified-since",target:"_blank",rel:"noopener noreferrer"},q={href:"https://httpwg.org/specs/rfc9110.html#field.if-unmodified-since",target:"_blank",rel:"noopener noreferrer"},E={href:"https://httpwg.org/specs/rfc9110.html#field.if-range",target:"_blank",rel:"noopener noreferrer"},$=n("p",null,[a("The "),n("code",null,"Evaluator"),a(" also supports adding your own custom preconditions to be evaluated, should you need such.")],-1),y=n("h2",{id:"onward",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#onward","aria-hidden":"true"},"#"),a(" Onward")],-1),T=n("p",null,"For additional examples, installation guide and more, please continue reading the documentation.",-1);function I(G,W){const s=p("ExternalLinkIcon");return c(),i("div",null,[r,n("p",null,[a('This package provides a "profile" based approach to generate '),n("a",u,[a("ETags"),e(s)]),a(", and an evaluator to deal with "),n("a",d,[a("Http Conditional Requests"),e(s)]),a(", for your Laravel application.")]),k,n("p",null,[a("ETags can also be matched against each other, in accordance with "),n("a",h,[a("RFC9110"),e(s)]),a(".")]),m,n("p",null,[a("The "),g,a(" component is able to process the incoming request against all the defined "),n("a",v,[a("RFC9110 preconditions"),e(s)]),a(", in accordance with specified "),n("a",b,[a("evaluation precedence"),e(s)]),a(". Depending on the precondition requested, if it passes or fails, the request can either proceed or it will be aborted using customisable Http Exceptions. Your Laravel application should do the rest, whenever the request is aborted.")]),f,n("ul",null,[n("li",null,[n("a",_,[a("If-Match"),e(s)])]),n("li",null,[n("a",x,[a("If-None-Match"),e(s)])]),n("li",null,[n("a",w,[a("If-Modified-Since"),e(s)])]),n("li",null,[n("a",q,[a("If-Unmodified-Since"),e(s)])]),n("li",null,[n("a",E,[a("If-Range"),e(s)])])]),$,y,T])}const H=o(l,[["render",I],["__file","index.html.vue"]]);export{H as default};

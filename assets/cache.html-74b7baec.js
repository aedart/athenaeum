import{_ as l,M as o,p as r,q as u,R as s,t as n,N as a,U as e,a1 as c}from"./framework-efe98465.js";const d={},k=s("h1",{id:"caching",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#caching","aria-hidden":"true"},"#"),n(" Caching")],-1),v={href:"https://laravel.com/docs/9.x/cache",target:"_blank",rel:"noopener noreferrer"},h=s("em",null,"should",-1),m={class:"table-of-contents"},g=s("h2",{id:"configuration",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#configuration","aria-hidden":"true"},"#"),n(" Configuration")],-1),b=s("code",null,"/config/cache.php",-1),f={href:"https://redis.io/",target:"_blank",rel:"noopener noreferrer"},y={href:"https://packagist.org/packages/illuminate/redis",target:"_blank",rel:"noopener noreferrer"},w={href:"https://laravel.com/docs/9.x/redis",target:"_blank",rel:"noopener noreferrer"},_={href:"https://laravel.com/docs/9.x/redis#configuration",target:"_blank",rel:"noopener noreferrer"},C=c(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">return</span> <span class="token punctuation">[</span>
    <span class="token comment">// ... previous not shown ...</span>

    <span class="token string single-quoted-string">&#39;stores&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>

        <span class="token string single-quoted-string">&#39;user-tags&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;driver&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;redis&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;connection&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;users&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
    
        <span class="token comment">// ... other profiles (stores) ...</span>

    <span class="token punctuation">]</span><span class="token punctuation">,</span>

    <span class="token comment">// ... remaining not shown ...    </span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="obtain-store" tabindex="-1"><a class="header-anchor" href="#obtain-store" aria-hidden="true">#</a> Obtain Store</h2>`,2),q=c(`<h3 id="via-app" tabindex="-1"><a class="header-anchor" href="#via-app" aria-hidden="true">#</a> Via <code>$app</code></h3><p>Given that you have direct access to your application instance (<code>$app</code>), use the <code>make()</code> method to obtain the cache repository.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token comment">// Cache Repository with &quot;default&quot; store</span>
<span class="token variable">$cache</span> <span class="token operator">=</span> <span class="token variable">$app</span><span class="token operator">-&gt;</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;cache&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$cache</span><span class="token operator">-&gt;</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;bar&#39;</span><span class="token punctuation">,</span> <span class="token number">5</span> <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$foo</span> <span class="token operator">=</span> <span class="token variable">$cache</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If you wish to obtain a cache repository that uses a specific &quot;store&quot;, then you need to specify it via the <code>store()</code> method.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token comment">// Cache Repository with &quot;user-tags&quot; store</span>
<span class="token variable">$cache</span> <span class="token operator">=</span> <span class="token variable">$app</span><span class="token operator">-&gt;</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;cache&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">store</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user-tags&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$cache</span><span class="token operator">-&gt;</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;bar&#39;</span><span class="token punctuation">,</span> <span class="token number">5</span> <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$foo</span> <span class="token operator">=</span> <span class="token variable">$cache</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="via-facade" tabindex="-1"><a class="header-anchor" href="#via-facade" aria-hidden="true">#</a> Via Facade</h3>`,6),x=s("code",null,"Cache",-1),$={href:"https://laravel.com/docs/9.x/facades",target:"_blank",rel:"noopener noreferrer"},T=c(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>Facades<span class="token punctuation">\\</span>Cache</span><span class="token punctuation">;</span>

<span class="token class-name static-context">Cache</span><span class="token operator">::</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;bar&#39;</span><span class="token punctuation">,</span> <span class="token number">5</span> <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$foo</span> <span class="token operator">=</span> <span class="token class-name static-context">Cache</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Use the <code>store()</code> method to obtain a cache repository that uses a specific &quot;store&quot;.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>Facades<span class="token punctuation">\\</span>Cache</span><span class="token punctuation">;</span>

<span class="token class-name static-context">Cache</span><span class="token operator">::</span><span class="token function">store</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user-tags&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;bar&#39;</span><span class="token punctuation">,</span> <span class="token number">5</span> <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$foo</span> <span class="token operator">=</span> <span class="token class-name static-context">Cache</span><span class="token operator">::</span><span class="token function">store</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user-tags&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="via-aware-of-helper" tabindex="-1"><a class="header-anchor" href="#via-aware-of-helper" aria-hidden="true">#</a> Via Aware-of Helper</h3><p>Lastly, you can also make use of the <code>Cache</code> and <code>CacheFactory</code> <a href="../../support/laravel">Aware-of Helpers</a>.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>Helpers<span class="token punctuation">\\</span>Cache<span class="token punctuation">\\</span>CacheTrait</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">UsersController</span>
<span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token package">CacheTrait</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// Default &quot;store&quot;</span>
        <span class="token variable">$cache</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
        <span class="token comment">// ... remaining not shown ...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>To obtain a specific store, you use the <code>CacheFactory</code> Aware-of helper.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>Helpers<span class="token punctuation">\\</span>Cache<span class="token punctuation">\\</span>CacheFactoryTrait</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">UsersController</span>
<span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token package">CacheFactoryTrait</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// Cache Repository with &quot;user-tags&quot; store</span>
        <span class="token variable">$cache</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getCacheFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">store</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user-tags&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
        <span class="token comment">// ... remaining not shown ...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="create-own-aware-of-helper" tabindex="-1"><a class="header-anchor" href="#create-own-aware-of-helper" aria-hidden="true">#</a> Create Own Aware-Of Helper</h3><p>If you have multiple components that depend on a very specific cache &quot;store&quot;, then you could make your own Aware-of helper, which automatically returns the desired &quot;store&quot;. Consider the following example.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">namespace</span> <span class="token package">Acme<span class="token punctuation">\\</span>Users<span class="token punctuation">\\</span>Cache</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Contracts<span class="token punctuation">\\</span>Cache<span class="token punctuation">\\</span>Repository</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>Facades<span class="token punctuation">\\</span>Cache</span><span class="token punctuation">;</span>

<span class="token keyword">trait</span> <span class="token class-name-definition class-name">UserTagsCache</span>
<span class="token punctuation">{</span>
    <span class="token keyword">protected</span> <span class="token class-name">Repository</span><span class="token operator">|</span><span class="token keyword type-declaration">null</span> <span class="token variable">$userTagsCache</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">setUserTagsCache</span><span class="token punctuation">(</span><span class="token class-name">Repository</span><span class="token operator">|</span><span class="token keyword type-declaration">null</span> <span class="token variable">$repository</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">static</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">userTagsCache</span> <span class="token operator">=</span> <span class="token variable">$repository</span><span class="token punctuation">;</span>
        
        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">getUserTagsCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name">Repository</span><span class="token operator">|</span><span class="token keyword type-declaration">null</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token operator">!</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">hasUserTagsCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">setUserTagsCache</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getDefaultUserTagsCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">userTagsCache</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">hasUserTagsCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">userTagsCache</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">getDefaultUserTagsCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name">Repository</span><span class="token operator">|</span><span class="token keyword type-declaration">null</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$factory</span> <span class="token operator">=</span> <span class="token class-name static-context">Cache</span><span class="token operator">::</span><span class="token function">getFacadeRoot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$factory</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token variable">$factory</span><span class="token operator">-&gt;</span><span class="token function">store</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user-tags&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        
        <span class="token keyword">return</span> <span class="token constant">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span> 
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Once your Aware-of Helper is completed, you can use it inside all components that depend on it.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">use</span> <span class="token package">Acme<span class="token punctuation">\\</span>Users<span class="token punctuation">\\</span>Cache<span class="token punctuation">\\</span>UserTagsCache</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">UsersController</span>
<span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token package">UserTagsCache</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// Cache Repository with &quot;user-tags&quot; store</span>
        <span class="token variable">$cache</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getUserTagsCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
        <span class="token comment">// ... remaining not shown ...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13);function U(R,F){const t=o("ExternalLinkIcon"),p=o("router-link"),i=o("RouterLink");return r(),u("div",null,[k,s("p",null,[n("To make use of Laravel's "),s("a",v,[n("Cache"),a(t)]),n(" component, you "),h,n(" spend a bit of time configuring it.")]),s("nav",m,[s("ul",null,[s("li",null,[a(p,{to:"#configuration"},{default:e(()=>[n("Configuration")]),_:1})]),s("li",null,[a(p,{to:"#obtain-store"},{default:e(()=>[n("Obtain Store")]),_:1}),s("ul",null,[s("li",null,[a(p,{to:"#via-app"},{default:e(()=>[n("Via $app")]),_:1})]),s("li",null,[a(p,{to:"#via-facade"},{default:e(()=>[n("Via Facade")]),_:1})]),s("li",null,[a(p,{to:"#via-aware-of-helper"},{default:e(()=>[n("Via Aware-of Helper")]),_:1})]),s("li",null,[a(p,{to:"#create-own-aware-of-helper"},{default:e(()=>[n("Create Own Aware-Of Helper")]),_:1})])])])])]),g,s("p",null,[n("In your "),b,n(', you will find several cache "stores", each having a driver. Please ensure that your server environment and application supports the drivers, that you wish to make use of. For instance, if you wish to use a "store" that requires '),s("a",f,[n("Redis"),a(t)]),n(" as a driver, then you must fulfill it's requirements. See Laravel's "),s("a",y,[n("Redis package"),a(t)]),n(" and it's "),s("a",w,[n("documentation"),a(t)]),n(" for details.")]),s("p",null,[n('In the example illustrated below, a "user-tags" store has been added. It relies of the Redis driver, which uses a custom "users" '),s("a",_,[n("connection"),a(t)]),n(".")]),C,s("p",null,[n('There are several approaches to obtain the cache repository, with your desired "store". To better understand following approaches, please review the '),a(i,{to:"/archive/v6x/core/usage/container.html#resolving"},{default:e(()=>[n("Service Container chapter")]),_:1}),n(".")]),q,s("p",null,[n("You can also use Laravel's "),x,n(),s("a",$,[n("Facade"),a(t)]),n(", to achieve the same result.")]),T])}const I=l(d,[["render",U],["__file","cache.html.vue"]]);export{I as default};

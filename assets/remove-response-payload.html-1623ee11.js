import{_ as a,p as n,q as e,a1 as s}from"./framework-efe98465.js";const t={},o=s(`<h1 id="remove-response-payload" tabindex="-1"><a class="header-anchor" href="#remove-response-payload" aria-hidden="true">#</a> Remove Response Payload</h1><p>The <code>RemoveResponsePayload</code> middleware is able to remove the response&#39;s body, if a <code>no_payload=1</code> query parameter is received in the request.</p><h2 id="registration" tabindex="-1"><a class="header-anchor" href="#registration" aria-hidden="true">#</a> Registration</h2><p>You can register the middleware in your <code>app/Http/Kernel.php</code> file.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// ...Inside your App\\Http\\Kernel class </span>
<span class="token keyword">protected</span> <span class="token variable">$routeMiddleware</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;remove-payload&#39;</span> <span class="token operator">=&gt;</span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Aedart<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Api<span class="token punctuation">\\</span>Middleware<span class="token punctuation">\\</span>RemoveResponsePayload</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>
    
    <span class="token comment">//...remaining not shown...</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="query-parameter-name" tabindex="-1"><a class="header-anchor" href="#query-parameter-name" aria-hidden="true">#</a> Query Parameter Name</h2><p>By default, the middleware will look for a <code>no_payload=1</code> query parameter name. However, if the name is not to your liking, then you can specify a custom name, when you register the middleware:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/users&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...not shown...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">middleware</span><span class="token punctuation">(</span>
    <span class="token class-name static-context">RemoveResponsePayload</span><span class="token operator">::</span><span class="token keyword">class</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;:nrp&#39;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The <code>:nrp</code> will result in that the middleware will look for a <code>nrp=1</code> query parameter, instead of the default.</p>`,9),p=[o];function i(c,l){return n(),e("div",null,p)}const d=a(t,[["render",i],["__file","remove-response-payload.html.vue"]]);export{d as default};

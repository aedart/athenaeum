import{_ as c,M as p,p as l,q as r,R as n,t as s,N as a,U as e,a1 as u}from"./framework-efe98465.js";const d={},k=n("h1",{id:"list-deleted",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#list-deleted","aria-hidden":"true"},"#"),s(" List Deleted")],-1),h=n("code",null,"ListDeletedResourcesRequest",-1),v={href:"https://laravel.com/docs/10.x/eloquent#soft-deleting",target:"_blank",rel:"noopener noreferrer"},m={class:"table-of-contents"},f=u(`<p><strong>Example Request</strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Contracts<span class="token punctuation">\\</span>Filters<span class="token punctuation">\\</span>Builder</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Api<span class="token punctuation">\\</span>Requests<span class="token punctuation">\\</span>Resources<span class="token punctuation">\\</span>ListDeletedResourcesRequest</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>User</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">ListDeletedUsers</span> <span class="token keyword">extends</span> <span class="token class-name">ListDeletedResourcesRequest</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">authorisationModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span><span class="token operator">|</span><span class="token keyword type-declaration">null</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">filtersBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span><span class="token operator">|</span><span class="token class-name">Builder</span><span class="token operator">|</span><span class="token keyword type-declaration">null</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token constant">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Example Action</strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/users/deleted&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">ListDeletedUsers</span> <span class="token variable">$request</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name static-context">UserResource</span><span class="token operator">::</span><span class="token function">collection</span><span class="token punctuation">(</span>
        <span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">onlyTrashed</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token operator">-&gt;</span><span class="token function">paginate</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token property">show</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users.trashed&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="authorisation" tabindex="-1"><a class="header-anchor" href="#authorisation" aria-hidden="true">#</a> Authorisation</h2><p>By default, the request will check against a <code>trashed</code> ability, for the current authenticated user. From the above shown examples, a <code>users.trashed</code> ability is checked.</p><h2 id="pagination" tabindex="-1"><a class="header-anchor" href="#pagination" aria-hidden="true">#</a> Pagination</h2>`,7),b=n("h2",{id:"filters-builder",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#filters-builder","aria-hidden":"true"},"#"),s(" Filters Builder")],-1),_=n("h2",{id:"request-preconditions",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#request-preconditions","aria-hidden":"true"},"#"),s(" Request Preconditions")],-1);function g(x,y){const t=p("RouterLink"),i=p("ExternalLinkIcon"),o=p("router-link");return l(),r("div",null,[k,n("p",null,[s("The "),h,s(" abstraction is an extended version of "),a(t,{to:"/archive/v7x/http/api/requests/list-resources.html"},{default:e(()=>[s("List Resources request")]),_:1}),s(". It is intended for when "),n("a",v,[s('"soft-deleted"'),a(i)]),s(" resources must be listed.")]),n("nav",m,[n("ul",null,[n("li",null,[a(o,{to:"#authorisation"},{default:e(()=>[s("Authorisation")]),_:1})]),n("li",null,[a(o,{to:"#pagination"},{default:e(()=>[s("Pagination")]),_:1})]),n("li",null,[a(o,{to:"#filters-builder"},{default:e(()=>[s("Filters Builder")]),_:1})]),n("li",null,[a(o,{to:"#request-preconditions"},{default:e(()=>[s("Request Preconditions")]),_:1})])])]),f,n("p",null,[s("See "),a(t,{to:"/archive/v7x/http/api/requests/list-resources.html#pagination"},{default:e(()=>[s("List Resources pagination section")]),_:1}),s(".")]),b,n("p",null,[s("See "),a(t,{to:"/archive/v7x/http/api/requests/list-resources.html#filters-builder"},{default:e(()=>[s("List Resources filters builder section")]),_:1}),s(".")]),_,n("p",null,[s("See "),a(t,{to:"/archive/v7x/http/api/requests/list-resources.html#request-preconditions"},{default:e(()=>[s("List Resources request preconditions section")]),_:1}),s(".")])])}const w=c(d,[["render",g],["__file","list-deleted.html.vue"]]);export{w as default};

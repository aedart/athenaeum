import{_ as e,M as t,p as o,q as i,R as a,t as n,N as c,a1 as p}from"./framework-efe98465.js";const l={},r=p(`<h1 id="load-configuration-files" tabindex="-1"><a class="header-anchor" href="#load-configuration-files" aria-hidden="true">#</a> Load Configuration Files</h1><p>To load and parse configuration files, set the directory where the files are located and invoke the <code>load()</code> method.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$loader</span><span class="token operator">-&gt;</span><span class="token function">setDirectory</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;path-to-config-files/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$loader</span><span class="token operator">-&gt;</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$repository</span> <span class="token operator">=</span> <span class="token variable">$loader</span><span class="token operator">-&gt;</span><span class="token function">getConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">Note</p><p>When used inside a Laravel application, the loaded configuration is merged into the application&#39;s existing configuration.</p></div><h2 id="nested-directories" tabindex="-1"><a class="header-anchor" href="#nested-directories" aria-hidden="true">#</a> Nested Directories</h2><p>The <code>Loader</code> will automatically scan through nested directories and attempt to load and parse each found file. Imagine the following structure.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>config/
    modules/
        box.json
        circle.yml
    main.ini
    core.php
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Once these files are loaded, the nested directories then become part of the configuration name. This means that if you need to access the property <code>width</code>, inside <code>box.json</code>, then you must state the full name for it.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$loader</span><span class="token operator">-&gt;</span><span class="token function">setDirectory</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;config/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$loader</span><span class="token operator">-&gt;</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$repository</span> <span class="token operator">=</span> <span class="token variable">$loader</span><span class="token operator">-&gt;</span><span class="token function">getConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$width</span> <span class="token operator">=</span> <span class="token variable">$repository</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;modules.box.width&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="onward" tabindex="-1"><a class="header-anchor" href="#onward" aria-hidden="true">#</a> Onward</h2>`,10),d={href:"https://laravel.com/docs/9.x/configuration",target:"_blank",rel:"noopener noreferrer"};function u(h,v){const s=t("ExternalLinkIcon");return o(),i("div",null,[r,a("p",null,[n("For more information about how to access the loaded configuration, please review "),a("a",d,[n("Laravel's documentation"),c(s)]),n(".")])])}const g=e(l,[["render",u],["__file","usage.html.vue"]]);export{g as default};

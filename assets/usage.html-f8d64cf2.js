import{_ as l,M as i,p as r,q as c,R as s,N as e,U as t,t as n,a1 as p}from"./framework-efe98465.js";const d={},u=s("h1",{id:"basic-usage",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#basic-usage","aria-hidden":"true"},"#"),n(" Basic Usage")],-1),h={class:"table-of-contents"},k=p(`<h2 id="obtain-http-client" tabindex="-1"><a class="header-anchor" href="#obtain-http-client" aria-hidden="true">#</a> Obtain Http Client</h2><p>To obtain a Http Client instance, use the <code>HttpClientsManager</code>. It can be obtained via <code>HttpClientsManagerTrait</code>.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Clients<span class="token punctuation">\\</span>Traits<span class="token punctuation">\\</span>HttpClientsManagerTrait</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">WeatherController</span>
<span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token package">HttpClientsManagerTrait</span><span class="token punctuation">;</span>
    
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$client</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getHttpClientsManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">profile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token comment">// ...remaining not shown</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="obtain-specific-client-profile" tabindex="-1"><a class="header-anchor" href="#obtain-specific-client-profile" aria-hidden="true">#</a> Obtain Specific Client Profile</h2><p>In order to obtain a Http Client profile, state the profile name as argument for the <code>profile()</code> method.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$myClient</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getHttpClientsManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">profile</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;my-client-profile&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="fresh-client-instance" tabindex="-1"><a class="header-anchor" href="#fresh-client-instance" aria-hidden="true">#</a> Fresh Client instance</h2><p><em><strong>Available since</strong> <code>v5.19.0</code></em></p><p>The <code>profile()</code> method will return the same <code>Client</code> instance, if it was previously requested (<em>it caches the created instance for the profile name</em>). If you need a fresh instance, without having it cached by the client manager, then use the <code>fresh()</code> method.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$client</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getHttpClientsManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">fresh</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;my-client-profile&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="perform-http-requests" tabindex="-1"><a class="header-anchor" href="#perform-http-requests" aria-hidden="true">#</a> Perform Http Requests</h2>`,11),g={href:"https://www.php-fig.org/psr/psr-7/",target:"_blank",rel:"noopener noreferrer"},v=s("code",null,"ResponseInterface",-1),m=s("h3",{id:"get",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#get","aria-hidden":"true"},"#"),n(" GET")],-1),b=s("code",null,"get()",-1),f={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/GET",target:"_blank",rel:"noopener noreferrer"},_=p(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$client</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/users&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="head" tabindex="-1"><a class="header-anchor" href="#head" aria-hidden="true">#</a> HEAD</h3>`,2),q=s("code",null,"head()",-1),T={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/HEAD",target:"_blank",rel:"noopener noreferrer"},H=p(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$client</span><span class="token operator">-&gt;</span><span class="token function">head</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/users&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="post" tabindex="-1"><a class="header-anchor" href="#post" aria-hidden="true">#</a> POST</h3>`,2),x=s("code",null,"post()",-1),P={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST",target:"_blank",rel:"noopener noreferrer"},C=p(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$client</span><span class="token operator">-&gt;</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/users&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;John Doe&#39;</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;job&#39;</span>  <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;developer&#39;</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="put" tabindex="-1"><a class="header-anchor" href="#put" aria-hidden="true">#</a> PUT</h3>`,2),E=s("code",null,"put()",-1),$={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PUT",target:"_blank",rel:"noopener noreferrer"},U=p(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$client</span><span class="token operator">-&gt;</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/users/421&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Jim Orion&#39;</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;job&#39;</span>  <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;architect&#39;</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="delete" tabindex="-1"><a class="header-anchor" href="#delete" aria-hidden="true">#</a> DELETE</h3>`,2),S=s("code",null,"delete()",-1),O={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/DELETE",target:"_blank",rel:"noopener noreferrer"},w=p(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$client</span><span class="token operator">-&gt;</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/users/7742&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> OPTIONS</h3>`,2),M=s("code",null,"options()",-1),y={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/OPTIONS",target:"_blank",rel:"noopener noreferrer"},I=p(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$client</span><span class="token operator">-&gt;</span><span class="token function">options</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/users&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="patch" tabindex="-1"><a class="header-anchor" href="#patch" aria-hidden="true">#</a> PATCH</h3>`,2),A=s("code",null,"patch()",-1),z={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PATCH",target:"_blank",rel:"noopener noreferrer"},D=p(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$client</span><span class="token operator">-&gt;</span><span class="token function">patch</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/users/4487&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Isabella Amelia Thomason&#39;</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;job&#39;</span>  <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;lead designer&#39;</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="generic-request" tabindex="-1"><a class="header-anchor" href="#generic-request" aria-hidden="true">#</a> Generic Request</h3><p>The <code>request()</code> method allows you to perform a generic Http request. It accepts three arguments:</p>`,3),N=s("li",null,[s("code",null,"$method"),n(": "),s("code",null,"string"),n(" Http method name")],-1),W=s("li",null,[s("code",null,"$uri"),n(": "),s("code",null,"string"),n(" or "),s("code",null,"UriInterface"),n(" The Uri")],-1),G=s("code",null,"$options",-1),R=s("code",null,"array",-1),j={href:"http://docs.guzzlephp.org/en/stable/request-options.html",target:"_blank",rel:"noopener noreferrer"},L=p(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$client</span><span class="token operator">-&gt;</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;PATCH&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;/users/1247&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;json&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
        <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Emma Jackson&#39;</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;job&#39;</span>  <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;junior developer&#39;</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function B(V,J){const a=i("router-link"),o=i("ExternalLinkIcon");return r(),c("div",null,[u,s("nav",h,[s("ul",null,[s("li",null,[e(a,{to:"#obtain-http-client"},{default:t(()=>[n("Obtain Http Client")]),_:1})]),s("li",null,[e(a,{to:"#obtain-specific-client-profile"},{default:t(()=>[n("Obtain Specific Client Profile")]),_:1})]),s("li",null,[e(a,{to:"#fresh-client-instance"},{default:t(()=>[n("Fresh Client instance")]),_:1})]),s("li",null,[e(a,{to:"#perform-http-requests"},{default:t(()=>[n("Perform Http Requests")]),_:1}),s("ul",null,[s("li",null,[e(a,{to:"#get"},{default:t(()=>[n("GET")]),_:1})]),s("li",null,[e(a,{to:"#head"},{default:t(()=>[n("HEAD")]),_:1})]),s("li",null,[e(a,{to:"#post"},{default:t(()=>[n("POST")]),_:1})]),s("li",null,[e(a,{to:"#put"},{default:t(()=>[n("PUT")]),_:1})]),s("li",null,[e(a,{to:"#delete"},{default:t(()=>[n("DELETE")]),_:1})]),s("li",null,[e(a,{to:"#options"},{default:t(()=>[n("OPTIONS")]),_:1})]),s("li",null,[e(a,{to:"#patch"},{default:t(()=>[n("PATCH")]),_:1})]),s("li",null,[e(a,{to:"#generic-request"},{default:t(()=>[n("Generic Request")]),_:1})])])])])]),k,s("p",null,[n("Each method that performs a request will return a "),s("a",g,[n("PSR-7"),e(o)]),n(),v,n(".")]),m,s("p",null,[n("Use "),b,n(" to make a Http "),s("a",f,[n("GET"),e(o)]),n(" request.")]),_,s("p",null,[n("Use "),q,n(" to make a Http "),s("a",T,[n("HEAD"),e(o)]),n(" request.")]),H,s("p",null,[n("Use "),x,n(" to make a Http "),s("a",P,[n("POST"),e(o)]),n(" request.")]),C,s("p",null,[n("Use "),E,n(" to make a Http "),s("a",$,[n("PUT"),e(o)]),n(" request.")]),U,s("p",null,[n("Use "),S,n(" to make a Http "),s("a",O,[n("DELETE"),e(o)]),n(" request.")]),w,s("p",null,[n("Use "),M,n(" to make a Http "),s("a",y,[n("OPTIONS"),e(o)]),n(" request.")]),I,s("p",null,[n("Use "),A,n(" to make a Http "),s("a",z,[n("PATCH"),e(o)]),n(" request.")]),D,s("ul",null,[N,W,s("li",null,[G,n(": "),R,n(" Driver specific request options ("),s("em",null,[n("See "),s("a",j,[n("Guzzle's documentation"),e(o)]),n(" for additional information")]),n(")")])]),L])}const K=l(d,[["render",B],["__file","usage.html.vue"]]);export{K as default};

import{_ as c,M as p,p as r,q as u,R as n,t as s,N as a,U as e,a1 as i}from"./framework-efe98465.js";const d={},k=n("h1",{id:"array",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#array","aria-hidden":"true"},"#"),s(" Array")],-1),v={href:"https://laravel.com/docs/9.x/helpers#arrays",target:"_blank",rel:"noopener noreferrer"},g=n("code",null,"Arr",-1),m={class:"table-of-contents"},b=i(`<h2 id="randomelement" tabindex="-1"><a class="header-anchor" href="#randomelement" aria-hidden="true">#</a> <code>randomElement()</code></h2><p>Returns a single random element from a given list.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Utils<span class="token punctuation">\\</span>Arr</span><span class="token punctuation">;</span>

<span class="token variable">$element</span> <span class="token operator">=</span> <span class="token class-name static-context">Arr</span><span class="token operator">::</span><span class="token function">randomElement</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;Jim&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Sine&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Ally&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Gordon&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),h={href:"https://laravel.com/docs/9.x/helpers#method-array-random",target:"_blank",rel:"noopener noreferrer"},_=n("code",null,"Arr::random",-1),f=n("h3",{id:"seeding",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#seeding","aria-hidden":"true"},"#"),s(" Seeding")],-1),x={href:"https://www.php.net/manual/en/function.mt-srand.php",target:"_blank",rel:"noopener noreferrer"},q=i(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Utils<span class="token punctuation">\\</span>Arr</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Utils<span class="token punctuation">\\</span>Math</span><span class="token punctuation">;</span>

<span class="token variable">$element</span> <span class="token operator">=</span> <span class="token class-name static-context">Arr</span><span class="token operator">::</span><span class="token function">randomElement</span><span class="token punctuation">(</span>
    <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;Jim&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Sine&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Ally&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Gordon&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token class-name static-context">Math</span><span class="token operator">::</span><span class="token function">seed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token constant">MT_RAND_PHP</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),A=n("code",null,"Math::seed()",-1),y=n("code",null,"Math::applySeed()",-1),w=i(`<h2 id="differenceassoc" tabindex="-1"><a class="header-anchor" href="#differenceassoc" aria-hidden="true">#</a> <code>differenceAssoc()</code></h2><p>Method computes the difference of two or more multidimensional arrays.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Utils<span class="token punctuation">\\</span>Arr</span><span class="token punctuation">;</span>

<span class="token variable">$original</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;key&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;person&#39;</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;value&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;John Snow&#39;</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;settings&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
        <span class="token string single-quoted-string">&#39;validation&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;required&#39;</span> <span class="token operator">=&gt;</span> <span class="token constant boolean">true</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;nullable&#39;</span> <span class="token operator">=&gt;</span> <span class="token constant boolean">true</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;min&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">2</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;max&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">50</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token variable">$changed</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;key&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;person&#39;</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;value&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Smith Snow&#39;</span><span class="token punctuation">,</span> <span class="token comment">// Changed</span>
    <span class="token string single-quoted-string">&#39;settings&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
        <span class="token string single-quoted-string">&#39;validation&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;required&#39;</span> <span class="token operator">=&gt;</span> <span class="token constant boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// Changed</span>
            <span class="token string single-quoted-string">&#39;nullable&#39;</span> <span class="token operator">=&gt;</span> <span class="token constant boolean">true</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;min&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">2</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;max&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token comment">// Changed</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token variable">$result</span> <span class="token operator">=</span> <span class="token class-name static-context">Arr</span><span class="token operator">::</span><span class="token function">differenceAssoc</span><span class="token punctuation">(</span><span class="token variable">$original</span><span class="token punctuation">,</span> <span class="token variable">$changed</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The output of the above shown example will be the following:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Array
(
  [&#39;value&#39;] =&gt; &#39;John Snow&#39;
  [&#39;settings&#39;] =&gt; Array
      (
          [&#39;validation&#39;] =&gt; Array
              (
                  [&#39;required&#39;] =&gt; 1
                  [&#39;max&#39;] =&gt; 50
              )
      )
)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="tree" tabindex="-1"><a class="header-anchor" href="#tree" aria-hidden="true">#</a> <code>tree()</code></h2><p>Returns an array that represents a &quot;tree&quot; structure for given path.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Utils<span class="token punctuation">\\</span>Arr</span><span class="token punctuation">;</span>

<span class="token variable">$result</span> <span class="token operator">=</span> <span class="token class-name static-context">Arr</span><span class="token operator">::</span><span class="token function">tree</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/home/user/projects&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Array
(
    [0] =&gt; /home
    [1] =&gt; /home/user
    [2] =&gt; /home/user/projects
)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9);function S($,E){const o=p("ExternalLinkIcon"),t=p("router-link"),l=p("RouterLink");return r(),u("div",null,[k,n("p",null,[s("Extended version of Laravel's "),n("a",v,[g,s(" component"),a(o)]),s(".")]),n("nav",m,[n("ul",null,[n("li",null,[a(t,{to:"#randomelement"},{default:e(()=>[s("randomElement()")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#seeding"},{default:e(()=>[s("Seeding")]),_:1})])])]),n("li",null,[a(t,{to:"#differenceassoc"},{default:e(()=>[s("differenceAssoc()")]),_:1})]),n("li",null,[a(t,{to:"#tree"},{default:e(()=>[s("tree()")]),_:1})])])]),b,n("p",null,[s("See also Laravel's "),n("a",h,[_,a(o)]),s(".")]),f,n("p",null,[s("You can also provide a "),n("a",x,[s("seed for the random number generator"),a(o)]),s(".")]),q,n("p",null,[s("See "),a(l,{to:"/archive/v6x/utils/math.html"},{default:e(()=>[A,s(" and "),y,s(" methods ")]),_:1}),s(" for additional information about seeding.")]),w])}const L=c(d,[["render",S],["__file","array.html.vue"]]);export{L as default};

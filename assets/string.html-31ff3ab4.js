import{_ as c,M as l,p as r,q as i,R as n,t as s,N as a,U as o,a1 as p}from"./framework-efe98465.js";const u={},d=n("h1",{id:"string",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#string","aria-hidden":"true"},"#"),s(" String")],-1),k={href:"https://laravel.com/docs/12.x/helpers#strings-method-list",target:"_blank",rel:"noopener noreferrer"},h=n("code",null,"Str",-1),m={class:"table-of-contents"},g=n("h2",{id:"randomizer",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#randomizer","aria-hidden":"true"},"#"),s(),n("code",null,"randomizer()")],-1),f=n("code",null,"randomizer()",-1),v=n("code",null,"StringRandomizer",-1),_={href:"https://www.php.net/manual/en/class.random-randomizer.php",target:"_blank",rel:"noopener noreferrer"},b=n("code",null,"Random\\Randomizer",-1),y=p(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Utils<span class="token punctuation">\\</span>Str</span><span class="token punctuation">;</span>

<span class="token variable">$randomizer</span> <span class="token operator">=</span> <span class="token class-name static-context">Str</span><span class="token operator">::</span><span class="token function">randomizer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),w={href:"https://www.php.net/manual/en/class.random-engine.php",target:"_blank",rel:"noopener noreferrer"},x=n("code",null,"Engine",-1),z=p(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Utils<span class="token punctuation">\\</span>Str</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Random<span class="token punctuation">\\</span>Engine<span class="token punctuation">\\</span>Mt19937</span><span class="token punctuation">;</span>

<span class="token variable">$randomizer</span> <span class="token operator">=</span> <span class="token class-name static-context">Str</span><span class="token operator">::</span><span class="token function">randomizer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Mt19937</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bytes" tabindex="-1"><a class="header-anchor" href="#bytes" aria-hidden="true">#</a> <code>bytes()</code></h3><p>Returns random bytes.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token class-name static-context">Str</span><span class="token operator">::</span><span class="token function">randomizer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">bytes</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \\pǓY��n</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,4),S={href:"https://www.php.net/manual/en/random-randomizer.getbytes.php",target:"_blank",rel:"noopener noreferrer"},R=n("code",null,"Random\\Randomizer::getBytes()",-1),q=p(`<h3 id="bytesfromstring" tabindex="-1"><a class="header-anchor" href="#bytesfromstring" aria-hidden="true">#</a> <code>bytesFromString()</code></h3><p>Returns random bytes from a given string.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$str</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;abcdefghijklmnopqrstuvwxyz0123456789&#39;</span><span class="token punctuation">;</span>
<span class="token class-name static-context">Str</span><span class="token operator">::</span><span class="token function">randomizer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">bytesFromString</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// hnm1vb3nu6</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,3),B={href:"https://www.php.net/manual/en/random-randomizer.getbytesfromstring.php",target:"_blank",rel:"noopener noreferrer"},E=n("code",null,"Random\\Randomizer::getBytesFromString()",-1),$=p(`<h3 id="shuffle" tabindex="-1"><a class="header-anchor" href="#shuffle" aria-hidden="true">#</a> <code>shuffle()</code></h3><p>Shuffles given bytes.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$chars</span> <span class="token operator">=</span> <span class="token function">implode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token function">range</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;z&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name static-context">Str</span><span class="token operator">::</span><span class="token function">randomizer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">shuffle</span><span class="token punctuation">(</span><span class="token variable">$chars</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// lgtkrcvenbodmfzauxhqyiwjsp</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,3),M={href:"https://www.php.net/manual/en/random-randomizer.shufflebytes.php",target:"_blank",rel:"noopener noreferrer"},N=n("code",null,"Random\\Randomizer::shuffleBytes()",-1),T=p(`<h2 id="slugtowords" tabindex="-1"><a class="header-anchor" href="#slugtowords" aria-hidden="true">#</a> <code>slugToWords()</code></h2><p>Method converts a slug back to words.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Utils<span class="token punctuation">\\</span>Str</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span> <span class="token class-name static-context">Str</span><span class="token operator">::</span><span class="token function">slugToWords</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;my-slug&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// My Slug</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function F(U,V){const e=l("ExternalLinkIcon"),t=l("router-link");return r(),i("div",null,[d,n("p",null,[s("Extended version of Laravel's "),n("a",k,[h,s(" component"),a(e)]),s(".")]),n("nav",m,[n("ul",null,[n("li",null,[a(t,{to:"#randomizer"},{default:o(()=>[s("randomizer()")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#bytes"},{default:o(()=>[s("bytes()")]),_:1})]),n("li",null,[a(t,{to:"#bytesfromstring"},{default:o(()=>[s("bytesFromString()")]),_:1})]),n("li",null,[a(t,{to:"#shuffle"},{default:o(()=>[s("shuffle()")]),_:1})])])]),n("li",null,[a(t,{to:"#slugtowords"},{default:o(()=>[s("slugToWords()")]),_:1})])])]),g,n("p",null,[s("The "),f,s(" method returns a "),v,s(" component - an adapter for PHP "),n("a",_,[b,a(e)]),s(".")]),y,n("p",null,[s("You can optionally specify what "),n("a",w,[x,a(e)]),s(" you wish to use:")]),z,n("p",null,[n("em",null,[s("See "),n("a",S,[R,a(e)]),s(" for details.")])]),q,n("p",null,[n("em",null,[s("See "),n("a",B,[E,a(e)]),s(" for details.")])]),$,n("p",null,[n("em",null,[s("See "),n("a",M,[N,a(e)]),s(" for details.")])]),T])}const L=c(u,[["render",F],["__file","string.html.vue"]]);export{L as default};

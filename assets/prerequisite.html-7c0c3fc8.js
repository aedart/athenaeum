import{_ as l,M as i,p as s,q as h,R as e,N as o,U as n,t}from"./framework-efe98465.js";const c={},d=e("h1",{id:"prerequisite",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#prerequisite","aria-hidden":"true"},"#"),t(" Prerequisite")],-1),p={class:"table-of-contents"},u=e("h2",{id:"composer",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#composer","aria-hidden":"true"},"#"),t(" Composer")],-1),f={href:"https://getcomposer.org/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://getcomposer.org/doc/01-basic-usage.md#autoloading",target:"_blank",rel:"noopener noreferrer"},_=e("h2",{id:"php-v7-4-x",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#php-v7-4-x","aria-hidden":"true"},"#"),t(" PHP v7.4.x")],-1),m=e("p",null,[t("Unfortunately this package is only available from Athenaeum "),e("code",null,"v4.x"),t(", meaning that it requires PHP "),e("code",null,"v7.4.x"),t(" or higher. If you application only runs on older versions of PHP, then you should spend the time it requires to upgrade. Your application stands to benefit greatly from this, both in terms of security, performance and new language features.")],-1),y={href:"https://www.php.net/manual/en/migration74.php",target:"_blank",rel:"noopener noreferrer"},b=e("p",null,[e("em",null,"As the author of this package, I apologise if you somehow feel mislead. I have been working on this and many other packages by myself. There are limits to how much backwards compatibility I can offer.")],-1),k=e("h3",{id:"other-requirements",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#other-requirements","aria-hidden":"true"},"#"),t(" Other Requirements")],-1),w={href:"https://packagist.org/packages/aedart/athenaeum-core",target:"_blank",rel:"noopener noreferrer"},v=e("code",null,"composer.json",-1),P=e("h2",{id:"tools-to-help-upgrading",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#tools-to-help-upgrading","aria-hidden":"true"},"#"),t(" Tools to help Upgrading")],-1),x=e("p",null,"You are not the only developer, that has to deal with upgrading legacy applications. Many other developers have gone through the same. Some of these developers have written very useful tools that can help you a lot. Below is a small list of tools that will help you upgrade.",-1),T=e("h3",{id:"php-compatibility-checker",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#php-compatibility-checker","aria-hidden":"true"},"#"),t(" PHP Compatibility checker")],-1),H={href:"https://github.com/PHPCompatibility/PHPCompatibility",target:"_blank",rel:"noopener noreferrer"},q={href:"https://github.com/squizlabs/PHP_CodeSniffer",target:"_blank",rel:"noopener noreferrer"},C=e("h3",{id:"symfony-polyfill",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#symfony-polyfill","aria-hidden":"true"},"#"),t(" Symfony Polyfill")],-1),I={href:"https://github.com/symfony/polyfill",target:"_blank",rel:"noopener noreferrer"},S=e("h3",{id:"rector",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#rector","aria-hidden":"true"},"#"),t(" Rector")],-1),B={href:"https://getrector.org/",target:"_blank",rel:"noopener noreferrer"},N=e("code",null,"v5.3.x",-1),R=e("code",null,"v7.4.x",-1),U={href:"https://getrector.org/demo",target:"_blank",rel:"noopener noreferrer"},O=e("h3",{id:"other-tools",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#other-tools","aria-hidden":"true"},"#"),t(" Other Tools?")],-1),Y={href:"https://packagist.org/",target:"_blank",rel:"noopener noreferrer"},A=e("div",{class:"custom-container tip"},[e("p",{class:"custom-container-title"},"Note"),e("p",null,"If you happen to know of other great tools, that can help developers upgrade their legacy applications, then please feel free to contribute to this page's content.")],-1),E=e("h3",{id:"tip-for-installing-tools",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#tip-for-installing-tools","aria-hidden":"true"},"#"),t(" Tip for installing Tools")],-1),M={href:"https://github.com/bamarni/composer-bin-plugin",target:"_blank",rel:"noopener noreferrer"},V=e("h2",{id:"testing",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#testing","aria-hidden":"true"},"#"),t(" Testing...?")],-1),D={href:"https://codeception.com/",target:"_blank",rel:"noopener noreferrer"},L={href:"http://www.phpspec.net",target:"_blank",rel:"noopener noreferrer"},j={href:"https://docs.behat.org",target:"_blank",rel:"noopener noreferrer"},z={href:"https://phpunit.de/",target:"_blank",rel:"noopener noreferrer"},F={href:"https://www.google.com/search?q=php+testing+frameworks",target:"_blank",rel:"noopener noreferrer"};function G(W,J){const a=i("router-link"),r=i("ExternalLinkIcon");return s(),h("div",null,[d,e("nav",p,[e("ul",null,[e("li",null,[o(a,{to:"#composer"},{default:n(()=>[t("Composer")]),_:1})]),e("li",null,[o(a,{to:"#php-v7-4-x"},{default:n(()=>[t("PHP v7.4.x")]),_:1}),e("ul",null,[e("li",null,[o(a,{to:"#other-requirements"},{default:n(()=>[t("Other Requirements")]),_:1})])])]),e("li",null,[o(a,{to:"#tools-to-help-upgrading"},{default:n(()=>[t("Tools to help Upgrading")]),_:1}),e("ul",null,[e("li",null,[o(a,{to:"#php-compatibility-checker"},{default:n(()=>[t("PHP Compatibility checker")]),_:1})]),e("li",null,[o(a,{to:"#symfony-polyfill"},{default:n(()=>[t("Symfony Polyfill")]),_:1})]),e("li",null,[o(a,{to:"#rector"},{default:n(()=>[t("Rector")]),_:1})]),e("li",null,[o(a,{to:"#other-tools"},{default:n(()=>[t("Other Tools?")]),_:1})]),e("li",null,[o(a,{to:"#tip-for-installing-tools"},{default:n(()=>[t("Tip for installing Tools")]),_:1})])])]),e("li",null,[o(a,{to:"#testing"},{default:n(()=>[t("Testing...?")]),_:1})])])]),u,e("p",null,[t("This might seem trivial for some developers, yet "),e("a",f,[t("composer"),o(r)]),t(" must be available within your legacy application. Without it's "),e("a",g,[t("autoloading capabilities"),o(r)]),t(", it can be difficult to integrate this package's components. Therefore, please ensure that composer is installed and available inside your legacy application.")]),_,m,e("p",null,[t("Please consult yourself with "),e("a",y,[t("PHP Migration Guides"),o(r)]),t(", for additional information.")]),b,k,e("p",null,[t("See eventual remaining requirements on "),e("a",w,[t("packagist"),o(r)]),t(" or inside this package's "),v,t(".")]),P,x,T,e("p",null,[t("The "),e("a",H,[t("PHP Compatibility Checker"),o(r)]),t(" for "),e("a",q,[t("PHP_CodeSniffer"),o(r)]),t(" is a really great tools for identifying outdated code, e.g. unsupported features. It can be a bit cumbersome to install and setup. Yet, once it is up and running, it will show you exactly what line(s) of code are not compatible with PHP 7.x, 8.x,...etc.")]),C,e("p",null,[t('Sadly, it is not always easy to deal with outdated code. Sometimes you might hit a "brick wall" that requires lots of hours or perhaps days to get through. This is especially true, when your legacy application depends on PHP features that are no longer supported. Fortunately, '),e("a",I,[t("Symfony Polyfill"),o(r)]),t(" has a great library that provides backwards compatibility to several outdated features.")]),S,e("p",null,[t("This is probably the coolest, and most powerful tool for upgrading outdated code. It able to do so automatically! Based on a few rules, "),e("a",B,[t("Rector"),o(r)]),t(" will automatically refactor your code. According to their documentation, it can upgrade code from PHP "),N,t(", all the way to PHP "),R,t(". Check out their "),e("a",U,[t("online demo"),o(r)]),t(" to see it in action.")]),O,e("p",null,[t("There are many more tools available, than the ones mentioned above. Try searching "),e("a",Y,[t("packagist"),o(r)]),t(" or your favorite search engine, whenever you feel stuck with some outdated lines of code.")]),A,E,e("p",null,[t("Depending on the tool(s) that you choose to use, they can sometimes cause conflicts with the dependencies that your legacy application might contain. To avoid having to deal with this, you can make use of "),e("a",M,[t("Composer Bin Plugin"),o(r)]),t(". It allows you to install your binary dependencies in a different folder, whilst linking the package's binaries into your regular vendor directory.")]),V,e("p",null,[t("Depending on your end-goals, perhaps it would be better that you start adding a few automated high-level tests to your legacy application, before starting to refactor, redesign or add several new features. Nevertheless, bringing automated tests into your legacy application, is beyond the scope of this package. You may find some inspiration by reviewing the following testing frameworks "),e("a",D,[t("Codeception"),o(r)]),t(", "),e("a",L,[t("PHP Spec"),o(r)]),t(", "),e("a",j,[t("Behat"),o(r)]),t(", "),e("a",z,[t("PHPUnit"),o(r)]),t("... "),e("a",F,[t("etc"),o(r)]),t(".")])])}const Q=l(c,[["render",G],["__file","prerequisite.html.vue"]]);export{Q as default};

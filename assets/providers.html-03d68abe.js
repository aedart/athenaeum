import{_ as l,M as o,p as c,q as d,R as n,N as e,U as a,t as s,a1 as r}from"./framework-efe98465.js";const u={},v=n("h1",{id:"service-providers",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#service-providers","aria-hidden":"true"},"#"),s(" Service Providers")],-1),g={class:"table-of-contents"},h=n("h2",{id:"register-service-providers",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#register-service-providers","aria-hidden":"true"},"#"),s(" Register Service Providers")],-1),k=n("code",null,"providers",-1),m=n("code",null,"/config/app.php",-1),f=n("h2",{id:"register-a-laravel-service-provider",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#register-a-laravel-service-provider","aria-hidden":"true"},"#"),s(" Register a Laravel Service Provider")],-1),b=n("code",null,"providers",-1),_={href:"https://laravel.com/docs/11.x/redis",target:"_blank",rel:"noopener noreferrer"},q=r(`<h3 id="require-package" tabindex="-1"><a class="header-anchor" href="#require-package" aria-hidden="true">#</a> Require Package</h3><p>Start off by requiring the package, using composer.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">composer</span> require illuminate/redis
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="register-redisserviceprovider" tabindex="-1"><a class="header-anchor" href="#register-redisserviceprovider" aria-hidden="true">#</a> Register <code>RedisServiceProvider</code></h3><p>In your <code>/config/app.php</code>, add the class path to the Redis service provider.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">return</span> <span class="token punctuation">[</span>
    <span class="token comment">// ... previous not shown ...</span>
    
    <span class="token string single-quoted-string">&#39;providers&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
        <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Illuminate<span class="token punctuation">\\</span>Redis<span class="token punctuation">\\</span>RedisServiceProvider</span><span class="token operator">::</span><span class="token keyword">class</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="dealing-with-asserts" tabindex="-1"><a class="header-anchor" href="#dealing-with-asserts" aria-hidden="true">#</a> Dealing with Asserts</h3>`,7),y=n("code",null,"vendor:publish-all",-1),R={href:"https://github.com/laravel/laravel",target:"_blank",rel:"noopener noreferrer"},x=n("code",null,"database.php",-1),w={href:"https://github.com/laravel/laravel/blob/v6.12.0/config/database.php",target:"_blank",rel:"noopener noreferrer"},S=n("code",null,"/configs",-1),L=n("code",null,"/configs",-1),I=r(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">return</span> <span class="token punctuation">[</span>
    <span class="token comment">// ... previous not shown ...</span>
    <span class="token string single-quoted-string">&#39;redis&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>

        <span class="token string single-quoted-string">&#39;client&#39;</span> <span class="token operator">=&gt;</span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;REDIS_CLIENT&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;phpredis&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

        <span class="token string single-quoted-string">&#39;options&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;cluster&#39;</span> <span class="token operator">=&gt;</span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;REDIS_CLUSTER&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;redis&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;prefix&#39;</span> <span class="token operator">=&gt;</span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;REDIS_PREFIX&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;my_application&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>

        <span class="token string single-quoted-string">&#39;default&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;url&#39;</span> <span class="token operator">=&gt;</span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;REDIS_URL&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;host&#39;</span> <span class="token operator">=&gt;</span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;REDIS_HOST&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;127.0.0.1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;password&#39;</span> <span class="token operator">=&gt;</span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;REDIS_PASSWORD&#39;</span><span class="token punctuation">,</span> <span class="token constant">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;port&#39;</span> <span class="token operator">=&gt;</span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;REDIS_PORT&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;6379&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;database&#39;</span> <span class="token operator">=&gt;</span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;REDIS_DB&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>

        <span class="token comment">// ... Remaining not shown ...</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">Caution</p><p>Please make sure the assets that you copy, match the required package&#39;s version. Otherwise you risk incompatibility and undesirable behaviour.</p></div><h3 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h3><p>Once the Redis service has been registered, you can use it within your application.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$redis</span> <span class="token operator">=</span> <span class="token variable">$app</span><span class="token operator">-&gt;</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;redis&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;my_key&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;my_value&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The <a href="container">next chapter</a> contains more information and examples on how to obtain registered services (<em>e.g. bindings</em>).</p><h2 id="deferred-services" tabindex="-1"><a class="header-anchor" href="#deferred-services" aria-hidden="true">#</a> Deferred Services</h2>`,7),D={href:"https://laravel.com/docs/11.x/providers#deferred-providers",target:"_blank",rel:"noopener noreferrer"},E={href:"https://laravel.com/docs/11.x/providers#deferred-providers",target:"_blank",rel:"noopener noreferrer"},P=n("h2",{id:"limitations",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#limitations","aria-hidden":"true"},"#"),s(" Limitations")],-1),T=n("p",null,[s("Unlike a regular Laravel application, the Athenaeum Core Application does not cache it's resolved list of service providers. This means that in terms of performance, this application isn't as fast as Laravel. Should this prove to be a problem for you, then consider "),n("a",{href:"ext"},"extending the Athenaeum Core Application"),s(" and overwrite the service provider registration and booting logic.")],-1);function A(C,U){const t=o("router-link"),p=o("RouterLink"),i=o("ExternalLinkIcon");return c(),d("div",null,[v,n("nav",g,[n("ul",null,[n("li",null,[e(t,{to:"#register-service-providers"},{default:a(()=>[s("Register Service Providers")]),_:1})]),n("li",null,[e(t,{to:"#register-a-laravel-service-provider"},{default:a(()=>[s("Register a Laravel Service Provider")]),_:1}),n("ul",null,[n("li",null,[e(t,{to:"#require-package"},{default:a(()=>[s("Require Package")]),_:1})]),n("li",null,[e(t,{to:"#register-redisserviceprovider"},{default:a(()=>[s("Register RedisServiceProvider")]),_:1})]),n("li",null,[e(t,{to:"#dealing-with-asserts"},{default:a(()=>[s("Dealing with Asserts")]),_:1})]),n("li",null,[e(t,{to:"#usage"},{default:a(()=>[s("Usage")]),_:1})])])]),n("li",null,[e(t,{to:"#deferred-services"},{default:a(()=>[s("Deferred Services")]),_:1})]),n("li",null,[e(t,{to:"#limitations"},{default:a(()=>[s("Limitations")]),_:1})])])]),h,n("p",null,[s("Just like within a regular Laravel application, you can register you service providers in the "),k,s(" array, located in your "),m,s(". ("),n("em",null,[s("configuration path "),e(p,{to:"/archive/v8x/core/integration.html"},{default:a(()=>[s("can be specified")]),_:1}),s(" in your application instance")]),s(").")]),f,n("p",null,[s("When you wish to make use of a Laravel's packages, then simply require the desired package and add the service's class path inside the "),b,s(" array. The following example take your though the steps it requires to add Laravel's "),n("a",_,[s("Redis Service"),e(i)]),s(".")]),q,n("p",null,[s("Many of Laravel's packages depend on configuration files or other assets. Unfortunately, not all of Laravel's packages have their assets registered as publishable. This means that you if you would run the "),y,s(" command, nothing would happen. To resolve this, you can obtain a service's required assets manually, by coping the desired assets from Laravel's "),n("a",R,[s("Github Repository"),e(i)]),s(".")]),n("p",null,[s("In this example, you are required to copy the "),x,s(" configuration file, from the "),n("a",w,[S,s(" directory"),e(i)]),s(" and paste into your application's "),L,s(" directory. This configuration file contains specific setup for the Redis service.")]),I,n("p",null,[s("The Athenaeum Core Application also supports "),n("a",D,[s("deferred providers"),e(i)]),s(". Once registered, the services that are marked deferred, will only be registered and booted when required. Consult yourself with Laravel's "),n("a",E,[s("documentation"),e(i)]),s(" for additional information.")]),P,T])}const O=l(u,[["render",A],["__file","providers.html.vue"]]);export{O as default};

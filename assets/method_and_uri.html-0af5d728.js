import{_ as t,M as o,p,q as i,R as s,t as n,N as c,a1 as a}from"./framework-efe98465.js";const l={},r=a(`<h1 id="http-method-and-uri" tabindex="-1"><a class="header-anchor" href="#http-method-and-uri" aria-hidden="true">#</a> Http Method and Uri</h1><p>You can specify the Http method you wish to set on your next request, via <code>withMethod()</code>. Doing so will allow you to omit the <code>$method</code> argument, in the <code>request()</code> method. When combined with the <code>withUri()</code> method, you can also omit the <code>$uri</code> argument.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$client</span>
        <span class="token operator">-&gt;</span><span class="token function">withMethod</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;GET&#39;</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">withUri</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/users&#39;</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="uri" tabindex="-1"><a class="header-anchor" href="#uri" aria-hidden="true">#</a> Uri</h2>`,4),u=s("code",null,"withUri()",-1),d=s("code",null,"string",-1),h={href:"https://www.php-fig.org/psr/psr-7/",target:"_blank",rel:"noopener noreferrer"},k=s("code",null,"UriInterface",-1),v=a(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">GuzzleHttp<span class="token punctuation">\\</span>Psr7<span class="token punctuation">\\</span>Uri</span><span class="token punctuation">;</span>

<span class="token variable">$builder</span> <span class="token operator">=</span> <span class="token variable">$client</span>
        <span class="token operator">-&gt;</span><span class="token function">withUri</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Uri</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/users&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>When using this method, you can also omit the <code>$uri</code> argument, for any of the request methods. For instance, you can invoke the <code>get()</code> method, without repeating the uri, if you already specified it.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$client</span>
        <span class="token operator">-&gt;</span><span class="token function">withUri</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/users&#39;</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="from-into" tabindex="-1"><a class="header-anchor" href="#from-into" aria-hidden="true">#</a> From / Into</h3><p>Alternatively, you can use <code>from()</code> or <code>into()</code> to achieve the same result.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$client</span>
        <span class="token operator">-&gt;</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/users&#39;</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Or...</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$client</span>
        <span class="token operator">-&gt;</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/users&#39;</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8);function m(g,b){const e=o("ExternalLinkIcon");return p(),i("div",null,[r,s("p",null,[u,n(" accepts either a "),d,n(" uri or a "),s("a",h,[n("PSR-7"),c(e)]),n(),k,n(" as argument.")]),v])}const _=t(l,[["render",m],["__file","method_and_uri.html.vue"]]);export{_ as default};

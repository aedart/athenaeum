import{_ as o,M as r,p as i,q as p,R as a,N as s,U as t,t as e,a1 as c}from"./framework-efe98465.js";const d={},l=a("h1",{id:"available-drivers",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#available-drivers","aria-hidden":"true"},"#"),e(" Available Drivers")],-1),u={class:"table-of-contents"},h=c(`<h2 id="array" tabindex="-1"><a class="header-anchor" href="#array" aria-hidden="true">#</a> Array</h2><p>The <code>&#39;array&#39;</code> maintenance mode driver uses an in-memory array to store the applications down state. This driver is ONLY useful for testing and <em>SHOULD NOT</em> be used within a production environment.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$mode</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getMaintenanceModeManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">driver</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;array&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Driver path: <code>\\Aedart\\Maintenance\\Modes\\Drivers\\ArrayBasedMode</code></p><h2 id="json" tabindex="-1"><a class="header-anchor" href="#json" aria-hidden="true">#</a> Json</h2><p>The <code>&#39;json&#39;</code> maintenance mode driver is very similar to Laravel&#39;s default &quot;file based&quot; driver. It stores the application down state inside a file, formatted as json. Only difference is that this driver will fail, in case of json encoding or decoding errors.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$mode</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getMaintenanceModeManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">driver</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;json&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Driver path: <code>\\Aedart\\Maintenance\\Modes\\Drivers\\JsonFileBasedMode</code></p>`,8);function v(k,m){const n=r("router-link");return i(),p("div",null,[l,a("nav",u,[a("ul",null,[a("li",null,[s(n,{to:"#array"},{default:t(()=>[e("Array")]),_:1})]),a("li",null,[s(n,{to:"#json"},{default:t(()=>[e("Json")]),_:1})])])]),h])}const g=o(d,[["render",v],["__file","drivers.html.vue"]]);export{g as default};

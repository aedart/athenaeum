import{_ as i,M as o,p as c,q as l,R as n,t as s,N as a,U as t,a1 as r}from"./framework-efe98465.js";const u={},d=n("h1",{id:"locking",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#locking","aria-hidden":"true"},"#"),s(" Locking")],-1),k=n("code",null,"FileStream",-1),v={href:"https://www.php.net/manual/en/function.flock",target:"_blank",rel:"noopener noreferrer"},m=n("code",null,"flock()",-1),b={class:"table-of-contents"},g=r(`<h2 id="exclusive-lock" tabindex="-1"><a class="header-anchor" href="#exclusive-lock" aria-hidden="true">#</a> Exclusive Lock</h2><p>To acquire an exclusive lock (<em><code>LOCK_EX</code></em>) and perform some kind of write operation on the stream, use the <code>exclusiveLock()</code> method.</p><p>The method accepts the following arguments:</p><ul><li><code>callable $operation</code>: Callback to be invoked after lock was acquired. The stream instance is given as argument to callback.</li><li><code>float $timeout</code>: (<em>optional</em>) Timeout of acquiring lock in seconds. Defaults to <code>0.5</code> seconds.</li><li><code>string|null $profile</code>: (<em>optional</em>) Name of locking profile to use (<em>See <a href="#customise-behaviour">Customise Behaviour</a></em>).</li><li><code>array $options</code>: (<em>optional</em>) Lock driver specific options (<em>See <a href="#customise-behaviour">Customise Behaviour</a></em>).</li></ul><p>Once the callback has been performed, the lock is automatically released.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// Assuming file is empty...</span>
<span class="token variable">$stream</span> <span class="token operator">=</span> <span class="token class-name static-context">FileStream</span><span class="token operator">::</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;persons.txt&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;r+b&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$stream</span><span class="token operator">-&gt;</span><span class="token function">exclusiveLock</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token variable">$stream</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...Do something with stream...</span>
    <span class="token variable">$stream</span><span class="token operator">-&gt;</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;\\nJohn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span> <span class="token variable">$stream</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token variable">$result</span><span class="token punctuation">;</span> <span class="token comment">// John</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="shared-lock" tabindex="-1"><a class="header-anchor" href="#shared-lock" aria-hidden="true">#</a> Shared Lock</h2><p>If you wish to acquire a shared lock (<em><code>LOCK_SH</code></em>), use the <code>sharedLock()</code> method.</p><p>Method accepts the same type of arguments as <a href="#exclusive-lock"><code>exclusiveLock()</code></a>.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// Assuming file has &quot;Jim&quot; as content</span>
<span class="token variable">$stream</span> <span class="token operator">=</span> <span class="token class-name static-context">FileStream</span><span class="token operator">::</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;persons.txt&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;r+b&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$stream</span><span class="token operator">-&gt;</span><span class="token function">sharedLock</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token variable">$stream</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span> <span class="token variable">$stream</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token variable">$result</span><span class="token punctuation">;</span> <span class="token comment">// Jim</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="customise-behaviour" tabindex="-1"><a class="header-anchor" href="#customise-behaviour" aria-hidden="true">#</a> Customise Behaviour</h2><p>If you are using the streams component inside a Laravel application, then you can customise the locking behaviour via the <code>config/streams.php</code> configuration. Here, you may change existing lock profiles or add new ones.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">return</span> <span class="token punctuation">[</span>

    <span class="token comment">// ...previous not shown...</span>

    <span class="token comment">/*
     |--------------------------------------------------------------------------
     | Lock profiles
     |--------------------------------------------------------------------------
    */</span>

    <span class="token string single-quoted-string">&#39;locks&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>

        <span class="token comment">// ...default profile not shown here...</span>
        
        <span class="token string single-quoted-string">&#39;my-lock-profile&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;driver&#39;</span> <span class="token operator">=&gt;</span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Aedart<span class="token punctuation">\\</span>Streams<span class="token punctuation">\\</span>Locks<span class="token punctuation">\\</span>Drivers<span class="token punctuation">\\</span>FLockDriver</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;options&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
                <span class="token string single-quoted-string">&#39;sleep&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">5_000</span><span class="token punctuation">,</span>
                <span class="token string single-quoted-string">&#39;fail_on_timeout&#39;</span> <span class="token operator">=&gt;</span> <span class="token constant boolean">true</span>
            <span class="token punctuation">]</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    
    <span class="token comment">// ... remaining not shown...</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Then, when you wish for your stream to acquire a lock using a specific lock profile, specify the profile for the <code>$profile</code> argument.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$stream</span><span class="token operator">-&gt;</span><span class="token function">exclusiveLock</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token variable">$stream</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...not shown...</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0.01</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;my-lock-profile&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can also choose to overwrite a given profile&#39;s options, when acquiring the lock, via the <code>$options</code> argument.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// Custom options for a single operation...</span>
<span class="token variable">$options</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;sleep&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">2_000</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$stream</span><span class="token operator">-&gt;</span><span class="token function">exclusiveLock</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token variable">$stream</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...not shown...</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0.01</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;my-lock-profile&#39;</span><span class="token punctuation">,</span> <span class="token variable">$options</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="outside-laravel" tabindex="-1"><a class="header-anchor" href="#outside-laravel" aria-hidden="true">#</a> Outside Laravel</h3><p>If you wish to customise the locking behaviour whilst using this package outside a regular Laravel application, then you have a few ways to do so:</p><ul><li>You can specify custom <code>$options</code>, which can configure the &quot;default&quot; profile.</li><li>Set &quot;profiles&quot; manually on the internal <code>LockFactory</code></li></ul><h4 id="specify-custom-options" tabindex="-1"><a class="header-anchor" href="#specify-custom-options" aria-hidden="true">#</a> Specify custom options</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// Custom options for a single operation...</span>
<span class="token variable">$options</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;sleep&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">12_000</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;fail_on_timeout&#39;</span> <span class="token operator">=&gt;</span> <span class="token constant boolean">false</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$stream</span><span class="token operator">-&gt;</span><span class="token function">exclusiveLock</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token variable">$stream</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...not shown...</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0.01</span><span class="token punctuation">,</span> <span class="token constant">null</span><span class="token punctuation">,</span> <span class="token variable">$options</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="specify-custom-profiles" tabindex="-1"><a class="header-anchor" href="#specify-custom-profiles" aria-hidden="true">#</a> Specify custom &quot;profiles&quot;</h4><p>A list of custom profiles can always be specified on a stream&#39;s internal <code>LockFactory</code>.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package"><span class="token punctuation">\\</span>Aedart<span class="token punctuation">\\</span>Streams<span class="token punctuation">\\</span>Locks<span class="token punctuation">\\</span>Drivers<span class="token punctuation">\\</span>FLockDriver</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/** <span class="token keyword">@type</span> \\Aedart\\Streams\\Locks\\LockFactory $lockFactory */</span>
<span class="token variable">$lockFactory</span> <span class="token operator">=</span> <span class="token variable">$stream</span>
    <span class="token operator">-&gt;</span><span class="token function">getLockFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">-&gt;</span><span class="token function">usingProfiles</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
        <span class="token string single-quoted-string">&#39;my-profile&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;driver&#39;</span> <span class="token operator">=&gt;</span> <span class="token class-name static-context">FLockDriver</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;options&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
                <span class="token string single-quoted-string">&#39;sleep&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">10_000</span><span class="token punctuation">,</span>
                <span class="token string single-quoted-string">&#39;fail_on_timeout&#39;</span> <span class="token operator">=&gt;</span> <span class="token constant boolean">true</span>
            <span class="token punctuation">]</span>
        <span class="token punctuation">]</span>
        
        <span class="token comment">// ...more profiles...</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">defaultProfile</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;my-profile&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Unfortunately, the above shown example is not very practical, if you have to do this for every stream instance. Therefore, to overcome this issue, you are encouraged to extend the <code>FileStream</code> component and overwrite the <code>getDefaultLockFactory()</code> method.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Streams<span class="token punctuation">\\</span>FileStream</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Streams<span class="token punctuation">\\</span>Locks<span class="token punctuation">\\</span>LockFactory</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Contracts<span class="token punctuation">\\</span>Streams<span class="token punctuation">\\</span>Locks<span class="token punctuation">\\</span>Factory</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">MyFileStream</span> <span class="token keyword">extends</span> <span class="token class-name">FileStream</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">getDefaultLockFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name">Factory</span><span class="token operator">|</span><span class="token keyword type-declaration">null</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$profiles</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;my-profile&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
                <span class="token string single-quoted-string">&#39;driver&#39;</span> <span class="token operator">=&gt;</span> <span class="token class-name static-context">FLockDriver</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>
                <span class="token string single-quoted-string">&#39;options&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
                    <span class="token string single-quoted-string">&#39;sleep&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">10_000</span><span class="token punctuation">,</span>
                    <span class="token string single-quoted-string">&#39;fail_on_timeout&#39;</span> <span class="token operator">=&gt;</span> <span class="token constant boolean">true</span>
                <span class="token punctuation">]</span>
            <span class="token punctuation">]</span>
            
            <span class="token comment">// ...more profiles...</span>
        <span class="token punctuation">]</span><span class="token punctuation">;</span>
    
        <span class="token variable">$default</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;my-profile&#39;</span><span class="token punctuation">;</span>
    
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">LockFactory</span><span class="token punctuation">(</span><span class="token variable">$profiles</span><span class="token punctuation">,</span> <span class="token variable">$default</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="custom-lock-drivers" tabindex="-1"><a class="header-anchor" href="#custom-lock-drivers" aria-hidden="true">#</a> Custom Lock Drivers</h2><p>Should the default provided <code>FLockDriver</code> not be a good solution for you, then you can always add your own custom driver(s). The easiest way of doing so, is by extending the <code>BaseLockDriver</code> abstraction.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Streams<span class="token punctuation">\\</span>Locks<span class="token punctuation">\\</span>Drivers<span class="token punctuation">\\</span>BaseLockDriver</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">MyLockDriver</span> <span class="token keyword">extends</span> <span class="token class-name">BaseLockDriver</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">acquireLock</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Stream</span> <span class="token variable">$stream</span><span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$type</span><span class="token punctuation">,</span> <span class="token keyword type-hint">float</span> <span class="token variable">$timeout</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// ...not shown...</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">releaseLock</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Stream</span> <span class="token variable">$stream</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// ...not shown...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Once you have you driver implemented, then you can specify it as a profile&#39;s <code>driver</code>:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// Where you specify your profiles...</span>
<span class="token variable">$profiles</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;my-profile&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
        <span class="token string single-quoted-string">&#39;driver&#39;</span> <span class="token operator">=&gt;</span> <span class="token class-name static-context">MyLockDriver</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>
        <span class="token comment">// ... remaining not shown ...</span>
    <span class="token punctuation">]</span>
    
    <span class="token comment">// ...more profiles...</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,32);function h(f,y){const p=o("ExternalLinkIcon"),e=o("router-link");return c(),l("div",null,[d,n("p",null,[s("The "),k,s(" component offers a simple locking mechanism, which uses PHP's "),n("a",v,[m,a(p)]),s(" to acquire and release a lock. In this section, a few examples are shown on how to acquire a lock and perform operations on a file.")]),n("nav",b,[n("ul",null,[n("li",null,[a(e,{to:"#exclusive-lock"},{default:t(()=>[s("Exclusive Lock")]),_:1})]),n("li",null,[a(e,{to:"#shared-lock"},{default:t(()=>[s("Shared Lock")]),_:1})]),n("li",null,[a(e,{to:"#customise-behaviour"},{default:t(()=>[s("Customise Behaviour")]),_:1}),n("ul",null,[n("li",null,[a(e,{to:"#outside-laravel"},{default:t(()=>[s("Outside Laravel")]),_:1})])])]),n("li",null,[a(e,{to:"#custom-lock-drivers"},{default:t(()=>[s("Custom Lock Drivers")]),_:1})])])]),g])}const x=i(u,[["render",h],["__file","locking.html.vue"]]);export{x as default};

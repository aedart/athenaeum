import{_ as s,M as t,p as o,q as i,R as n,N as a,a1 as l}from"./framework-efe98465.js";const p={},c=l(`<h1 id="hash" tabindex="-1"><a class="header-anchor" href="#hash" aria-hidden="true">#</a> Hash</h1><p>If you need to obtain a hash of the stream&#39;s content, then use the <code>hash()</code> method.</p><p>The method accepts a number of arguments;</p><ul><li><code>string $algo</code>: Name of the hashing algorithm to be used.</li><li><code>bool $binary</code>: (<em>optional</em>) If <code>true</code>, outputs raw binary data.</li><li><code>int $flags</code>: (<em>optional</em>) Optional settings for hash generation</li><li><code>string $key</code>: (<em>optional</em>) Shared secret key, when <code>HASH_HMAC</code> specified in <code>$flags</code></li><li><code>array $options</code>: (<em>optional</em>) Options for the specified hashing algorithm</li></ul><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$stream</span> <span class="token operator">=</span> <span class="token class-name static-context">FileStream</span><span class="token operator">::</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;persons.txt&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;rb&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token variable">$stream</span><span class="token operator">-&gt;</span><span class="token function">hash</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;crc32&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// d5aad468</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>For additional information, please review PHP documentation:</p>`,6),r={href:"https://www.php.net/manual/en/function.hash-init.php",target:"_blank",rel:"noopener noreferrer"},h=n("code",null,"hash_init()",-1),d={href:"https://www.php.net/manual/en/function.hash-update-stream.php",target:"_blank",rel:"noopener noreferrer"},u=n("code",null,"hash_update_stream()",-1),m={href:"https://www.php.net/manual/en/function.hash-final.php",target:"_blank",rel:"noopener noreferrer"},_=n("code",null,"hash_final()",-1);function f(k,g){const e=t("ExternalLinkIcon");return o(),i("div",null,[c,n("ul",null,[n("li",null,[n("a",r,[h,a(e)])]),n("li",null,[n("a",d,[u,a(e)])]),n("li",null,[n("a",m,[_,a(e)])])])])}const v=s(p,[["render",f],["__file","hash.html.vue"]]);export{v as default};

import{_ as p,M as o,p as c,q as i,R as n,N as t,U as e,t as a,a1 as l}from"./framework-efe98465.js";const u={},r=n("h1",{id:"attachments",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#attachments","aria-hidden":"true"},"#"),a(" Attachments")],-1),d={class:"table-of-contents"},k=l(`<h2 id="add-attachment" tabindex="-1"><a class="header-anchor" href="#add-attachment" aria-hidden="true">#</a> Add Attachment</h2><p>You can use <code>attachFile()</code> to attach a file to your request. The method accepts four arguments:</p><ul><li><code>$name</code>: <code>string</code> Form input name</li><li><code>$path</code>: <code>string</code> Path to file</li><li><code>$headers</code>: <code>array</code> (<em>optional</em>) Http headers for attachment</li><li><code>$filename</code>: <code>string</code> (<em>optional</em>) Filename to be used by request</li></ul><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$client</span>  
        <span class="token operator">-&gt;</span><span class="token function">attachFile</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;annual_report&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;/reports/2023_annual.pdf&#39;</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/reports/annual&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="alternative-methods" tabindex="-1"><a class="header-anchor" href="#alternative-methods" aria-hidden="true">#</a> Alternative Methods</h2><p>The <code>withAttachment()</code> method provides an alternative way of adding an attachment. It allows you to specify a callback, which is provided an <code>Attachment</code> instance. This is useful when you wish to specify a stream, rather than a path to a file. E.g. when you are dynamically creating the contents of an attachment.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Contracts<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Clients<span class="token punctuation">\\</span>Requests<span class="token punctuation">\\</span>Attachment</span><span class="token punctuation">;</span>

<span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$client</span>  
        <span class="token operator">-&gt;</span><span class="token function">withAttachment</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Attachment</span> <span class="token variable">$attachment</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            
            <span class="token variable">$attachment</span>
                <span class="token operator">-&gt;</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;annual_report&#39;</span><span class="token punctuation">)</span>
                <span class="token operator">-&gt;</span><span class="token function">contents</span><span class="token punctuation">(</span><span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;data.csv&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;r&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token operator">-&gt;</span><span class="token function">filename</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;2023_annual.csv&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/reports/annual&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="multiple-attachments" tabindex="-1"><a class="header-anchor" href="#multiple-attachments" aria-hidden="true">#</a> Multiple Attachments</h3><p>Should you require to send multiple files using the above approach, then you may <code>withAttachments()</code>, which accepts an array of callbacks.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Contracts<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Clients<span class="token punctuation">\\</span>Requests<span class="token punctuation">\\</span>Attachment</span><span class="token punctuation">;</span>

<span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$client</span>
        <span class="token operator">-&gt;</span><span class="token function">withAttachments</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
            <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Attachment</span> <span class="token variable">$attachment</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token variable">$attachment</span>
                    <span class="token operator">-&gt;</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;finance_data&#39;</span><span class="token punctuation">)</span>
                    <span class="token operator">-&gt;</span><span class="token function">contents</span><span class="token punctuation">(</span><span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;data.csv&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;r&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token operator">-&gt;</span><span class="token function">filename</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;2020_finance.csv&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Attachment</span> <span class="token variable">$attachment</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                 <span class="token comment">// ...e.g. obtain data from database... not shown here...</span>
                 <span class="token variable">$attachment</span>
                    <span class="token operator">-&gt;</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users_report&#39;</span><span class="token punctuation">)</span>
                    <span class="token operator">-&gt;</span><span class="token function">contents</span><span class="token punctuation">(</span><span class="token variable">$usersDataStream</span><span class="token punctuation">)</span>
                    <span class="token operator">-&gt;</span><span class="token function">filename</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users-report.txt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Attachment</span> <span class="token variable">$attachment</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token variable">$attachment</span>
                    <span class="token operator">-&gt;</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;trending_chart&#39;</span><span class="token punctuation">)</span>
                    <span class="token operator">-&gt;</span><span class="token function">attachFile</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;online_users_2020.png&#39;</span><span class="token punctuation">)</span>
                    <span class="token operator">-&gt;</span><span class="token function">filename</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;online-users.png&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/reports/annual&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="attach-stream" tabindex="-1"><a class="header-anchor" href="#attach-stream" aria-hidden="true">#</a> Attach Stream</h3><p>The client also supports attaching a file stream, if needed. This can be done via the <code>attachStream()</code> method.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Streams<span class="token punctuation">\\</span>FileStream</span><span class="token punctuation">;</span>

<span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$client</span>  
        <span class="token operator">-&gt;</span><span class="token function">attachStream</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;2023_annual.pdf&#39;</span><span class="token punctuation">,</span> <span class="token class-name static-context">FileStream</span><span class="token operator">::</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/reports/2023_annual.pdf&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;r&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/reports/annual&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="create-attachment" tabindex="-1"><a class="header-anchor" href="#create-attachment" aria-hidden="true">#</a> Create Attachment</h3><p>Using an array of callbacks, several attachments were added to a request, in the previous shown example. However, doing so can make your code slight bulky. This is especially true when you have many files you wish to attach. To split up the attachment logic, then you may find <code>makeAttachment()</code> useful, in that it creates an &quot;empty&quot; attachment instance. This allows you to create attachments in one part of your code, and add them to the request when needed.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>
<span class="token variable">$annualReportFile</span> <span class="token operator">=</span> <span class="token variable">$client</span><span class="token operator">-&gt;</span><span class="token function">makeAttachment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$annualReportFile</span>
    <span class="token operator">-&gt;</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;annual_report&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">content</span><span class="token punctuation">(</span><span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;annual_report.pdf&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;r&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$usersReportFile</span> <span class="token operator">=</span> <span class="token variable">$client</span><span class="token operator">-&gt;</span><span class="token function">makeAttachment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// ...etc</span>

<span class="token comment">// ... later, when building your request</span>
<span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$client</span>
        <span class="token operator">-&gt;</span><span class="token function">withAttachments</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
            <span class="token variable">$annualReportFile</span><span class="token punctuation">,</span>
            <span class="token variable">$usersReportFile</span><span class="token punctuation">,</span>
            <span class="token variable">$trendingChartFile</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/reports/annual&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>The <code>withAttachment()</code> method also accepts an <code>Attachment</code> instance directly.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$client</span>  
        <span class="token operator">-&gt;</span><span class="token function">withAttachment</span><span class="token punctuation">(</span><span class="token variable">$annualReportFile</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/reports/annual&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="remove-attachment" tabindex="-1"><a class="header-anchor" href="#remove-attachment" aria-hidden="true">#</a> Remove Attachment</h2><p>If you find yourself in a situation where you are required to remove an added attachment, then such can be done using <code>withoutAttachment()</code>. The method expects the &quot;form input name&quot; of the attachment as argument.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$builder</span> <span class="token operator">=</span> <span class="token variable">$client</span>  
        <span class="token operator">-&gt;</span><span class="token function">withoutAttachment</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;annual_report&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,20);function m(h,v){const s=o("router-link");return c(),i("div",null,[r,n("nav",d,[n("ul",null,[n("li",null,[t(s,{to:"#add-attachment"},{default:e(()=>[a("Add Attachment")]),_:1})]),n("li",null,[t(s,{to:"#alternative-methods"},{default:e(()=>[a("Alternative Methods")]),_:1}),n("ul",null,[n("li",null,[t(s,{to:"#multiple-attachments"},{default:e(()=>[a("Multiple Attachments")]),_:1})]),n("li",null,[t(s,{to:"#attach-stream"},{default:e(()=>[a("Attach Stream")]),_:1})]),n("li",null,[t(s,{to:"#create-attachment"},{default:e(()=>[a("Create Attachment")]),_:1})])])]),n("li",null,[t(s,{to:"#remove-attachment"},{default:e(()=>[a("Remove Attachment")]),_:1})])])]),k])}const b=p(u,[["render",m],["__file","attachments.html.vue"]]);export{b as default};

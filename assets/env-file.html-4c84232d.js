import{_ as p,M as o,p as c,q as l,R as n,N as e,U as t,t as a,a1 as i}from"./framework-efe98465.js";const r={},d=n("h1",{id:"env-file",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#env-file","aria-hidden":"true"},"#"),a(" Env File")],-1),u=n("p",null,[n("code",null,"EnvFile"),a(" is intended to be used when you need to update key-value pairs, in your application's environment file.")],-1),v={class:"table-of-contents"},k=i(`<h2 id="load" tabindex="-1"><a class="header-anchor" href="#load" aria-hidden="true">#</a> Load</h2><p>The static <code>load()</code> method is responsible for loading the application&#39;s environment file. The method accepts an optional path to environment file. If none is specified, then the application&#39;s default environment file path is used.</p><p>Once the environment file is loaded, its content is available in the resulting <code>EnvFile</code> instance, as a string.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>EnvFile</span><span class="token punctuation">;</span>

<span class="token variable">$env</span> <span class="token operator">=</span> <span class="token class-name static-context">EnvFile</span><span class="token operator">::</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Or, using custom path...</span>
<span class="token variable">$env</span> <span class="token operator">=</span> <span class="token class-name static-context">EnvFile</span><span class="token operator">::</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/.my-environment-file&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
<span class="token comment">// ...remaining not shown...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="append" tabindex="-1"><a class="header-anchor" href="#append" aria-hidden="true">#</a> Append</h2><p>The <code>append()</code> method allows you to append a new key-value pair in the environment file.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>Str</span><span class="token punctuation">;</span>

<span class="token variable">$env</span> <span class="token operator">=</span> <span class="token class-name static-context">EnvFile</span><span class="token operator">::</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;ACME_SERVICE_API_TOKEN&#39;</span><span class="token punctuation">,</span> <span class="token class-name static-context">Str</span><span class="token operator">::</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="replace" tabindex="-1"><a class="header-anchor" href="#replace" aria-hidden="true">#</a> Replace</h2><p>Use the <code>replace()</code> to replace the value of an existing key. The method will throw an exception, if the key does not exist in the environment file.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$env</span> <span class="token operator">=</span> <span class="token class-name static-context">EnvFile</span><span class="token operator">::</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;QUEUE_CONNECTION&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;redis&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="save" tabindex="-1"><a class="header-anchor" href="#save" aria-hidden="true">#</a> Save</h2><p>To persist the changes to the environment file, you must use the <code>save()</code> method.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$env</span> <span class="token operator">=</span> <span class="token class-name static-context">EnvFile</span><span class="token operator">::</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;APP_DEBUG&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;true&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Changes are now saved in the .env file</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="refresh" tabindex="-1"><a class="header-anchor" href="#refresh" aria-hidden="true">#</a> Refresh</h2><p>The <code>refresh()</code> method reloads the contents of the environment file into memory.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$env</span> <span class="token operator">=</span> <span class="token class-name static-context">EnvFile</span><span class="token operator">::</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// ... changes not shown ...</span>
    <span class="token operator">-&gt;</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Reload file contents.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="contents" tabindex="-1"><a class="header-anchor" href="#contents" aria-hidden="true">#</a> Contents</h2><p>To obtain the raw contents of the loaded environment, use <code>contents()</code>.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$contents</span> <span class="token operator">=</span> <span class="token class-name static-context">EnvFile</span><span class="token operator">::</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">contents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,19);function h(m,f){const s=o("router-link");return c(),l("div",null,[d,u,n("nav",v,[n("ul",null,[n("li",null,[e(s,{to:"#load"},{default:t(()=>[a("Load")]),_:1})]),n("li",null,[e(s,{to:"#append"},{default:t(()=>[a("Append")]),_:1})]),n("li",null,[e(s,{to:"#replace"},{default:t(()=>[a("Replace")]),_:1})]),n("li",null,[e(s,{to:"#save"},{default:t(()=>[a("Save")]),_:1})]),n("li",null,[e(s,{to:"#refresh"},{default:t(()=>[a("Refresh")]),_:1})]),n("li",null,[e(s,{to:"#contents"},{default:t(()=>[a("Contents")]),_:1})])])]),k])}const b=p(r,[["render",h],["__file","env-file.html.vue"]]);export{b as default};

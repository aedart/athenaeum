import{_ as l,M as c,p as i,q as r,R as n,N as s,U as t,t as a,a1 as p}from"./framework-efe98465.js";const d={},u=n("h1",{id:"math",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#math","aria-hidden":"true"},"#"),a(" Math")],-1),k=n("p",null,"Offers math related utility methods.",-1),m={class:"table-of-contents"},h=p(`<h2 id="randomint" tabindex="-1"><a class="header-anchor" href="#randomint" aria-hidden="true">#</a> <code>randomInt()</code></h2><div class="custom-container warning"><p class="custom-container-title">Deprecated</p><p>The <code>randomInt()</code> method has been deprecated. Please use <a href="#randomizer"><code>randomizer()</code></a> instead.</p></div><p>Generates a random number between given minimum and maximum values.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Utils<span class="token punctuation">\\</span>Math</span><span class="token punctuation">;</span>

<span class="token variable">$value</span> <span class="token operator">=</span> <span class="token class-name static-context">Math</span><span class="token operator">::</span><span class="token function">randomInt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="randomizer" tabindex="-1"><a class="header-anchor" href="#randomizer" aria-hidden="true">#</a> <code>randomizer()</code></h2>`,5),v=n("code",null,"randomizer()",-1),b=n("code",null,"NumericRandomizer",-1),g={href:"https://www.php.net/manual/en/class.random-randomizer.php",target:"_blank",rel:"noopener noreferrer"},_=n("code",null,"Random\\Randomizer",-1),f=p(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$randomizer</span> <span class="token operator">=</span> <span class="token class-name static-context">Math</span><span class="token operator">::</span><span class="token function">randomizer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1),x={href:"https://www.php.net/manual/en/class.random-engine.php",target:"_blank",rel:"noopener noreferrer"},w=n("code",null,"Engine",-1),y=p(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Utils<span class="token punctuation">\\</span>Math</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Random<span class="token punctuation">\\</span>Engine<span class="token punctuation">\\</span>Mt19937</span><span class="token punctuation">;</span>

<span class="token variable">$randomizer</span> <span class="token operator">=</span> <span class="token class-name static-context">Math</span><span class="token operator">::</span><span class="token function">randomizer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Mt19937</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="int" tabindex="-1"><a class="header-anchor" href="#int" aria-hidden="true">#</a> <code>int()</code></h3><p>The <code>Ã¬nt()</code> method returns a random number between provided <code>$min</code> and <code>$max</code>:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">echo</span> <span class="token class-name static-context">Math</span><span class="token operator">::</span><span class="token function">randomizer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token keyword type-declaration">int</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 7</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,4),$={href:"https://www.php.net/manual/en/random-randomizer.getint.php",target:"_blank",rel:"noopener noreferrer"},z=n("code",null,"Random\\Randomizer::getInt()",-1),M=p(`<h3 id="nextint" tabindex="-1"><a class="header-anchor" href="#nextint" aria-hidden="true">#</a> <code>nextInt()</code></h3><p>Returns the next positive integer.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">echo</span> <span class="token class-name static-context">Math</span><span class="token operator">::</span><span class="token function">randomizer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3),R={href:"https://www.php.net/manual/en/random-randomizer.nextint.php",target:"_blank",rel:"noopener noreferrer"},I=n("code",null,"Random\\Randomizer::nextInt()",-1),A=p(`<h2 id="seed" tabindex="-1"><a class="header-anchor" href="#seed" aria-hidden="true">#</a> <code>seed()</code></h2><p>Generates a value that can be used for seeding the random number generator.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Utils<span class="token punctuation">\\</span>Math</span><span class="token punctuation">;</span>

<span class="token variable">$seed</span> <span class="token operator">=</span> <span class="token class-name static-context">Math</span><span class="token operator">::</span><span class="token function">seed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">mt_srand</span><span class="token punctuation">(</span><span class="token variable">$seed</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="applyseed" tabindex="-1"><a class="header-anchor" href="#applyseed" aria-hidden="true">#</a> <code>applySeed()</code></h2>`,4),S={href:"https://www.php.net/manual/en/function.mt-srand",target:"_blank",rel:"noopener noreferrer"},q=n("code",null,"mt_srand()",-1),N=p(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Utils<span class="token punctuation">\\</span>Math</span><span class="token punctuation">;</span>

<span class="token variable">$seed</span> <span class="token operator">=</span> <span class="token number">123456</span><span class="token punctuation">;</span>
<span class="token variable">$list</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;d&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token class-name static-context">Math</span><span class="token operator">::</span><span class="token function">applySeed</span><span class="token punctuation">(</span><span class="token variable">$seed</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$resultA</span> <span class="token operator">=</span> <span class="token variable">$list</span><span class="token punctuation">[</span> <span class="token function">array_rand</span><span class="token punctuation">(</span><span class="token variable">$list</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token class-name static-context">Math</span><span class="token operator">::</span><span class="token function">applySeed</span><span class="token punctuation">(</span><span class="token variable">$seed</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$resultB</span> <span class="token operator">=</span> <span class="token variable">$list</span><span class="token punctuation">[</span> <span class="token function">array_rand</span><span class="token punctuation">(</span><span class="token variable">$list</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token variable">$resultA</span><span class="token punctuation">;</span> <span class="token comment">// b</span>
<span class="token keyword">echo</span> <span class="token variable">$resultB</span><span class="token punctuation">;</span> <span class="token comment">// b</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="seed-mode" tabindex="-1"><a class="header-anchor" href="#seed-mode" aria-hidden="true">#</a> Seed mode</h3><p>Use the 3rd argument to specify the seeding algorithm mode:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Utils<span class="token punctuation">\\</span>Math</span><span class="token punctuation">;</span>

<span class="token variable">$seed</span> <span class="token operator">=</span> <span class="token number">123456</span><span class="token punctuation">;</span>
<span class="token variable">$list</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;d&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token class-name static-context">Math</span><span class="token operator">::</span><span class="token function">applySeed</span><span class="token punctuation">(</span><span class="token variable">$seed</span><span class="token punctuation">,</span> <span class="token constant">MT_RAND_PHP</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$resultA</span> <span class="token operator">=</span> <span class="token variable">$list</span><span class="token punctuation">[</span> <span class="token function">array_rand</span><span class="token punctuation">(</span><span class="token variable">$list</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// ...etc</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function P(U,T){const e=c("router-link"),o=c("ExternalLinkIcon");return i(),r("div",null,[u,k,n("nav",m,[n("ul",null,[n("li",null,[s(e,{to:"#randomint"},{default:t(()=>[a("randomInt()")]),_:1})]),n("li",null,[s(e,{to:"#randomizer"},{default:t(()=>[a("randomizer()")]),_:1}),n("ul",null,[n("li",null,[s(e,{to:"#int"},{default:t(()=>[a("int()")]),_:1})]),n("li",null,[s(e,{to:"#nextint"},{default:t(()=>[a("nextInt()")]),_:1})])])]),n("li",null,[s(e,{to:"#seed"},{default:t(()=>[a("seed()")]),_:1})]),n("li",null,[s(e,{to:"#applyseed"},{default:t(()=>[a("applySeed()")]),_:1}),n("ul",null,[n("li",null,[s(e,{to:"#seed-mode"},{default:t(()=>[a("Seed mode")]),_:1})])])])])]),h,n("p",null,[a("The "),v,a(" method returns a "),b,a(" component - an adapter for PHP "),n("a",g,[_,s(o)]),a(".")]),f,n("p",null,[a("You can optionally specify what "),n("a",x,[w,s(o)]),a(" you wish to use:")]),y,n("p",null,[n("em",null,[a("See "),n("a",$,[z,s(o)]),a(" for details.")])]),M,n("p",null,[n("em",null,[a("See "),n("a",R,[I,s(o)]),a(" for details.")])]),A,n("p",null,[a("A wrapper for "),n("a",S,[a("PHP's "),q,s(o)]),a(" method, which seeds the Mersenne Twister Random Number Generator.")]),N])}const E=l(d,[["render",P],["__file","math.html.vue"]]);export{E as default};

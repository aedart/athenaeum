import{_ as i,M as p,p as o,q as l,R as n,t as s,N as e,a1 as t}from"./framework-efe98465.js";const c={},r=n("h1",{id:"http-clients",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#http-clients","aria-hidden":"true"},"#"),s(" Http Clients")],-1),u={href:"http://docs.guzzlephp.org/en/stable/index.html",target:"_blank",rel:"noopener noreferrer"},d=n("h2",{id:"prerequisite",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#prerequisite","aria-hidden":"true"},"#"),s(" Prerequisite")],-1),v={href:"http://docs.guzzlephp.org/en/stable/index.html",target:"_blank",rel:"noopener noreferrer"},k={href:"https://getcomposer.org",target:"_blank",rel:"noopener noreferrer"},m=t(`<h2 id="service-provider" tabindex="-1"><a class="header-anchor" href="#service-provider" aria-hidden="true">#</a> Service Provider</h2><p>Register the <code>HttpClientServiceProvider</code> inside your <code>configs/app.php</code> configuration file.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">return</span> <span class="token punctuation">[</span>

    <span class="token comment">// ... previous not shown ... //</span>

    <span class="token comment">/*
    |--------------------------------------------------------------------------
    | Autoloaded Service Providers
    |--------------------------------------------------------------------------
    */</span>

    <span class="token string single-quoted-string">&#39;providers&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>

        <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Aedart<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Clients<span class="token punctuation">\\</span>Providers<span class="token punctuation">\\</span>HttpClientServiceProvider</span><span class="token operator">::</span><span class="token keyword">class</span>

        <span class="token comment">// ... remaining services not shown ... //</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="publish-resources" tabindex="-1"><a class="header-anchor" href="#publish-resources" aria-hidden="true">#</a> Publish Resources</h2><p>You need to publish the service&#39;s configuration, before able to use it. This can be achieved via artisan&#39;s publish command:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>php artisan vendor:publish 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><em>Remember to select <code>Aedart\\Http\\Clients\\Providers\\HttpClientServiceProvider</code> as the service to publish from.</em></p><h2 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration" aria-hidden="true">#</a> Configuration</h2><p>Once you have published this service&#39;s configuration, you should find a <code>http-clients.php</code>, inside your <code>configs/</code> directory. Within this configuration, you can freely add more http client profiles or change the existing.</p><p>Each profile consists of two keys:</p>`,10),h=n("li",null,[n("code",null,"driver"),s(" : class patch to the Http Client driver to be used")],-1),b=n("code",null,"options",-1),g={href:"http://docs.guzzlephp.org/en/stable/request-options.html",target:"_blank",rel:"noopener noreferrer"},f=t(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">return</span> <span class="token punctuation">[</span>

    <span class="token comment">// ... previous not shown</span>

    <span class="token comment">/*
     |--------------------------------------------------------------------------
     | Http Client Profiles
     |--------------------------------------------------------------------------
    */</span>

    <span class="token string single-quoted-string">&#39;profiles&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>

        <span class="token string single-quoted-string">&#39;default&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;driver&#39;</span>    <span class="token operator">=&gt;</span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Aedart<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Clients<span class="token punctuation">\\</span>Drivers<span class="token punctuation">\\</span>DefaultHttpClient</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;options&#39;</span>   <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
                <span class="token comment">// Guzzle Http Client options</span>
            <span class="token punctuation">]</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>

        <span class="token string single-quoted-string">&#39;json&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;driver&#39;</span>    <span class="token operator">=&gt;</span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Aedart<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Clients<span class="token punctuation">\\</span>Drivers<span class="token punctuation">\\</span>JsonHttpClient</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;options&#39;</span>   <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
                <span class="token comment">// Guzzle Http Client options</span>
            <span class="token punctuation">]</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><p>To obtain a http client, you can use the <code>HttpClientsManager</code>, which can be obtained via a trait.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Clients<span class="token punctuation">\\</span>Traits<span class="token punctuation">\\</span>HttpClientsManagerTrait</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">WeatherController</span>
<span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token package">HttpClientsManagerTrait</span><span class="token punctuation">;</span>
    
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$client</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getHttpClientsManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">profile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token comment">// Perform a GET requeset</span>
        <span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$client</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/weather-report.html&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token comment">// ...remaining not shown</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="obtain-specific-client-profile" tabindex="-1"><a class="header-anchor" href="#obtain-specific-client-profile" aria-hidden="true">#</a> Obtain Specific Client Profile</h2><p>In order to obtain a Http Client instance that matches a specific profile, simply state the name as argument for the <code>profile()</code> method.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$myClient</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getHttpClientsManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">profile</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;my-client-profile&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="json-http-client" tabindex="-1"><a class="header-anchor" href="#json-http-client" aria-hidden="true">#</a> Json Http Client</h2><p>When you require to communicate with a json-based api, it is recommended that you use a profile that makes use of <code>JsonHttpClient</code> driver. This driver will ensure to automatically set the <code>Content-Type</code> header to be <code>application/json</code>. Furthermore, it will also automatically ensure correct json encoding of your requests&#39;s payload (body).</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">return</span> <span class="token punctuation">[</span>
    <span class="token comment">// ... previous not shown</span>

    <span class="token string single-quoted-string">&#39;profiles&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>

        <span class="token string single-quoted-string">&#39;json&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;driver&#39;</span>    <span class="token operator">=&gt;</span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Aedart<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Clients<span class="token punctuation">\\</span>Drivers<span class="token punctuation">\\</span>JsonHttpClient</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;options&#39;</span>   <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
                <span class="token comment">// Guzzle Http Client options</span>
            <span class="token punctuation">]</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$client</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getHttpClientsManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">profile</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;json&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Send a POST request, as json</span>
<span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$client</span><span class="token operator">-&gt;</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/api/v1/users&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Jim Gordon&#39;</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="onward" tabindex="-1"><a class="header-anchor" href="#onward" aria-hidden="true">#</a> Onward</h2><p>For more information about the http client&#39;s public methods, please review the <code>\\Aedart\\Contracts\\Http\\Clients\\Client</code> interface.</p>`,13);function y(C,_){const a=p("ExternalLinkIcon");return o(),l("div",null,[r,n("p",null,[s("A wrapper for "),n("a",u,[s("Guzzle Http Client"),e(a)]),s(`, that supports multiple "profiles" based instances, allowing you to segment each api you communicate with, into it's own client instance.`)]),d,n("p",null,[n("a",v,[s("Guzzle Http Client"),e(a)]),s(" is a required dependency. Please ensure that it is present, in your "),n("a",k,[s("composer.json"),e(a)]),s(" file.")]),m,n("ul",null,[h,n("li",null,[b,s(" : "),n("a",g,[s("Guzzle Options"),e(a)])])]),f])}const q=i(c,[["render",y],["__file","index.html.vue"]]);export{q as default};

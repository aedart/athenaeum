import{_ as i,M as l,p as r,q as u,R as n,N as s,U as e,t as a,a1 as c}from"./framework-efe98465.js";const d={},k=n("h1",{id:"resource-context",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#resource-context","aria-hidden":"true"},"#"),a(" Resource Context")],-1),v=n("p",null,[a("A "),n("code",null,"ResourceContext"),a(" represents a requested resource. It acts as a wrapper for the requested record or file. It may also contain state information about the resource itself.")],-1),m={class:"table-of-contents"},h=n("h2",{id:"how-to-create",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#how-to-create","aria-hidden":"true"},"#"),a(" How to create")],-1),g=n("p",null,[a("This packages comes with a "),n("code",null,"GenericResource"),a(", which is a default implementation of the "),n("code",null,"ResourceContext"),a(" interface. Its constructor method accepts the following arguments:")],-1),b=c("<li><strong><code>mixed $data</code>: The requested resource, e.g. a record, Eloquent Model instance, a file... etc.</strong></li><li><strong><code>ETag|callable|null $etag = null</code>: (<em>optional</em>) Etag of the requested resource or callback to resolve etag.</strong></li><li><strong><code>DateTimeInterface|null $lastModifiedDate = null</code>: (<em>optional</em>) Resource&#39;s last modified date.</strong></li><li><code>int $size = 0</code>: (<em>optional</em>) Size of resource. (<em>Applicable only if your request supports <code>If-Range</code> and <code>Range</code> requests.</em>)</li><li><code>callable|null $determineStateChangeSuccess = null</code>: (<em>optional</em>) Callback that determines if a state change has already succeeded on the resource.</li>",5),f=n("code",null,"string $rangeUnit = 'bytes'",-1),_=n("em",null,"optional",-1),y=n("code",null,"int $maxRangeSets = 5",-1),w=n("em",null,"optional",-1),x={href:"https://httpwg.org/specs/rfc9110.html#rule.ranges-specifier",target:"_blank",rel:"noopener noreferrer"},R=c(`<p>Most of the arguments are optional. You do not have to satisfy all of them. This is especially true when your requested resource is not intended to support <code>If-Range</code> and <code>Range</code> preconditions.</p><p>To demonstrate an example, imagine that an existing record (<em>e.g. an Eloquent Model instance</em>) is requested. If your model supports etags, and has a last modified date, then you can create a new <code>GenericResource</code> instance in the following way:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>ETags<span class="token punctuation">\\</span>Preconditions<span class="token punctuation">\\</span>Resources<span class="token punctuation">\\</span>GenericResource</span><span class="token punctuation">;</span>

<span class="token variable">$resource</span> <span class="token keyword">new</span> <span class="token class-name">GenericResource</span><span class="token punctuation">(</span>
    <span class="token argument-name">data</span><span class="token punctuation">:</span> <span class="token variable">$model</span><span class="token punctuation">,</span>
    <span class="token argument-name">etag</span><span class="token punctuation">:</span> <span class="token variable">$model</span><span class="token operator">-&gt;</span><span class="token function">getStrongEtag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token argument-name">lastModifiedDate</span><span class="token punctuation">:</span> <span class="token variable">$model</span><span class="token operator">-&gt;</span><span class="token property">updated_at</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="callable-etag-argument" tabindex="-1"><a class="header-anchor" href="#callable-etag-argument" aria-hidden="true">#</a> Callable ETag Argument</h2><p><em><strong>Available since</strong> <code>v7.9.x</code></em></p><p>The <code>$etag</code> argument can be specified as callback that resolves an actual <code>ETag</code> instance. Doing so can increase performance of a request, when no preconditions are requested. The etag is only resolved when needed and not upfront.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$resource</span> <span class="token keyword">new</span> <span class="token class-name">GenericResource</span><span class="token punctuation">(</span>
    <span class="token argument-name">data</span><span class="token punctuation">:</span> <span class="token variable">$model</span><span class="token punctuation">,</span>
    <span class="token argument-name">etag</span><span class="token punctuation">:</span> <span class="token keyword">fn</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token variable">$model</span><span class="token operator">-&gt;</span><span class="token function">getStrongEtag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token argument-name">lastModifiedDate</span><span class="token punctuation">:</span> <span class="token variable">$model</span><span class="token operator">-&gt;</span><span class="token property">updated_at</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="highlight-lines"><br><br><div class="highlight-line">Â </div><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="determine-state-change-success" tabindex="-1"><a class="header-anchor" href="#determine-state-change-success" aria-hidden="true">#</a> Determine State Change Success</h2>`,8),$=n("code",null,"If-Match",-1),q=n("code",null,"If-Unmodified-Since",-1),T=n("code",null,"false",-1),S=n("br",null,null,-1),C={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/412",target:"_blank",rel:"noopener noreferrer"},E=n("em",null,[n("strong",null,"unless"),a(" it can be determined that the state-changing request has already succeeded.")],-1),I={href:"https://httpwg.org/specs/rfc9110.html#field.if-match",target:"_blank",rel:"noopener noreferrer"},D=c("<p>Imagine that a <code>DELETE</code> request is received for a record with a <code>If-Unmodified-Since</code> precondition. If the precondition is evaluated to <code>true</code>, then the request can proceed and delete the record. Otherwise, the application must determine if a &quot;state-change&quot; has already occurred (<em>if the record has already been deleted</em>).</p><p>When such a situation arises, the <code>hasStateChangeAlreadySucceeded()</code> method will be invoked, on the <code>ResourceContext</code> instance. Depending on the return value, the following will happen:</p>",2),F=n("code",null,"false",-1),P=n("code",null,"Actions",-1),z=n("code",null,"true",-1),A=n("code",null,"Actions",-1),G=n("h3",{id:"default-behaviour",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#default-behaviour","aria-hidden":"true"},"#"),a(" Default Behaviour")],-1),M=n("code",null,"GenericResource",-1),H=n("code",null,"false",-1),W=n("code",null,"$determineStateChangeSuccess",-1),B={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/412",target:"_blank",rel:"noopener noreferrer"},U=n("code",null,"If-Match",-1),L=n("code",null,"If-Unmodified-Since",-1),N=c(`<h3 id="custom-behaviour" tabindex="-1"><a class="header-anchor" href="#custom-behaviour" aria-hidden="true">#</a> Custom Behaviour</h3><p>To change the default behaviour, specify a callback for the <code>$determineStateChangeSuccess</code> constructor argument. When invoked, the callback will receive the current Http Request, and the resource context as arguments.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>ETags<span class="token punctuation">\\</span>Preconditions<span class="token punctuation">\\</span>Resources<span class="token punctuation">\\</span>GenericResource</span><span class="token punctuation">;</span>

<span class="token variable">$resource</span> <span class="token keyword">new</span> <span class="token class-name">GenericResource</span><span class="token punctuation">(</span>
    <span class="token argument-name">data</span><span class="token punctuation">:</span> <span class="token variable">$model</span><span class="token punctuation">,</span>
    <span class="token argument-name">etag</span><span class="token punctuation">:</span> <span class="token keyword">fn</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token variable">$model</span><span class="token operator">-&gt;</span><span class="token function">getStrongEtag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token argument-name">lastModifiedDate</span><span class="token punctuation">:</span> <span class="token variable">$model</span><span class="token operator">-&gt;</span><span class="token property">updated_at</span><span class="token punctuation">,</span>
    <span class="token argument-name">determineStateChangeSuccess</span><span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token punctuation">,</span> <span class="token variable">$resource</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token variable">$model</span> <span class="token operator">=</span> <span class="token variable">$resource</span><span class="token operator">-&gt;</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">method</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string single-quoted-string">&#39;DELETE&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">is_null</span><span class="token punctuation">(</span><span class="token variable">$model</span><span class="token operator">-&gt;</span><span class="token property">deleted_at</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        
        <span class="token comment">// ...other state-change determination logic not shown...</span>
        
        <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> 
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="files-and-range-support" tabindex="-1"><a class="header-anchor" href="#files-and-range-support" aria-hidden="true">#</a> Files and Range Support</h2>`,4),O={href:"https://httpwg.org/specs/rfc9110.html#field.if-range",target:"_blank",rel:"noopener noreferrer"},V=n("code",null,"If-Range",-1),Y={href:"https://httpwg.org/specs/rfc9110.html#field.range",target:"_blank",rel:"noopener noreferrer"},J=n("code",null,"Range",-1),j=n("code",null,"$size",-1),K=n("code",null,"$size",-1),Q=c(`<h3 id="default-behaviour-1" tabindex="-1"><a class="header-anchor" href="#default-behaviour-1" aria-hidden="true">#</a> Default Behaviour</h3><p>The <code>GenericResource</code> assumes that the resource in question does NOT support <code>Range</code> and <code>If-Range</code>. It defaults to <code>$size = 0</code>, in the constructor. This results in <code>Range</code> and <code>If-Range</code> Http headers to be entirely ignored. Your resulting response should therefore include the full file content.</p><h3 id="size-and-range-response" tabindex="-1"><a class="header-anchor" href="#size-and-range-response" aria-hidden="true">#</a> Size and Range Response</h3><p>You can specify a file&#39;s size (<em>in bytes</em>) using the <code>$size</code> constructor argument. When you do so, the <code>ResourceContext</code> is automatically marked to support <code>Range</code> and <code>If-Range</code> requests.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$resource</span> <span class="token keyword">new</span> <span class="token class-name">GenericResource</span><span class="token punctuation">(</span>
    <span class="token argument-name">data</span><span class="token punctuation">:</span> <span class="token variable">$file</span><span class="token punctuation">,</span>
    <span class="token argument-name">etag</span><span class="token punctuation">:</span> <span class="token variable">$file</span><span class="token operator">-&gt;</span><span class="token function">getStrongEtag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token argument-name">lastModifiedDate</span><span class="token punctuation">:</span> <span class="token variable">$file</span><span class="token operator">-&gt;</span><span class="token property">updated_at</span><span class="token punctuation">,</span>
    <span class="token argument-name">size</span><span class="token punctuation">:</span> <span class="token variable">$file</span><span class="token operator">-&gt;</span><span class="token function">getFileSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="highlight-lines"><br><br><br><br><div class="highlight-line">Â </div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),X=n("code",null,"Evaluator",-1),Z={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/206",target:"_blank",rel:"noopener noreferrer"},nn=c(`<h4 id="example-request" tabindex="-1"><a class="header-anchor" href="#example-request" aria-hidden="true">#</a> Example Request</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>
<span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Contracts<span class="token punctuation">\\</span>ETags<span class="token punctuation">\\</span>Preconditions<span class="token punctuation">\\</span>ResourceContext</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>ETags<span class="token punctuation">\\</span>Facades<span class="token punctuation">\\</span>Generator</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>ETags<span class="token punctuation">\\</span>Preconditions<span class="token punctuation">\\</span>Evaluator</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>ETags<span class="token punctuation">\\</span>Preconditions<span class="token punctuation">\\</span>Resources<span class="token punctuation">\\</span>GenericResource</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Foundation<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>FormRequest</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>File</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>Carbon</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">DownloadFileRequest</span> <span class="token keyword">extends</span> <span class="token class-name">FormRequest</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name type-declaration">ResourceContext</span> <span class="token variable">$resource</span><span class="token punctuation">;</span>

    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">prepareForValidation</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// 1) Find requested file or fail.</span>
        <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">findFileOrFail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 2) Wrap it inside a Resource Context</span>
        <span class="token variable">$resource</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">makeResourceContext</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 3) Evaluate request&#39;s preconditions against resource...</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">resource</span> <span class="token operator">=</span> <span class="token class-name static-context">Evaluator</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token punctuation">)</span>
            <span class="token operator">-&gt;</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token variable">$resource</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">makeResourceContext</span><span class="token punctuation">(</span><span class="token class-name type-declaration">File</span> <span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name return-type">ResourceContext</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// (optional) generate custom etag for file </span>
        <span class="token variable">$etag</span> <span class="token operator">=</span> <span class="token class-name static-context">Generator</span><span class="token operator">::</span><span class="token function">makeRaw</span><span class="token punctuation">(</span>
            <span class="token function">hash_file</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;xxh128&#39;</span><span class="token punctuation">,</span> <span class="token variable">$file</span><span class="token operator">-&gt;</span><span class="token function">getRealPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Returns new resource for given file...</span>
        <span class="token keyword">return</span> <span class="token class-name static-context">GenericResource</span><span class="token operator">::</span><span class="token function">forFile</span><span class="token punctuation">(</span>
            <span class="token argument-name">file</span><span class="token punctuation">:</span> <span class="token variable">$file</span><span class="token punctuation">,</span>
            <span class="token argument-name">etag</span><span class="token punctuation">:</span> <span class="token variable">$etag</span> <span class="token comment">// Defaults to a &quot;checksum&quot; etag, when not specified!</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">findFileOrFail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name return-type">File</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// ... not shown here...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="example-action" tabindex="-1"><a class="header-anchor" href="#example-action" aria-hidden="true">#</a> Example Action</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>Facades<span class="token punctuation">\\</span>Route</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>ETags<span class="token punctuation">\\</span>Preconditions<span class="token punctuation">\\</span>Responses<span class="token punctuation">\\</span>DownloadStream</span><span class="token punctuation">;</span>

<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/files/{name}&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">DownloadFileRequest</span> <span class="token variable">$request</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token keyword">return</span> <span class="token class-name static-context">DownloadStream</span><span class="token operator">::</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token property">resource</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),an=n("h4",{id:"example-response",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#example-response","aria-hidden":"true"},"#"),a(" Example Response")],-1),sn=n("code",null,"If-Range",-1),en=n("code",null,"Range",-1),tn={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/206",target:"_blank",rel:"noopener noreferrer"},on=c(`<p><strong>Request (<em>with If-Range and Range</em>)</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>GET /files/contacts.txt HTTP/1.1
If-Range: &quot;a89ca792333a300d726d40ecbbb9b043&quot;
Range: bytes=0-99
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Response (<em>206 Partial Content</em>)</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>HTTP/1.1 206 Partial Content
Date: Fri, 03 Feb 2023 10:05:24 GMT
Last-Modified: Tue, 15 Jan 2023 08:58:08 GMT
Content-Range: bytes 0-99/2087
Content-Length: 100
Content-Type: plain/text
Content-Disposition: attachment; filename=contacts.txt

(100 bytes of partial text file... not shown here)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="arbitrary-data" tabindex="-1"><a class="header-anchor" href="#arbitrary-data" aria-hidden="true">#</a> Arbitrary Data</h2><p>The <code>ResourceContext</code> also has the ability to store and retrieve arbitrary data. This can be useful for adding additional meta information for a resource, or perhaps for dealing with complex state-changing logic. Regardless of reason, you can leverage this mechanism when you need it.</p>`,6),pn=c(`<h3 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// Set key-value</span>
<span class="token variable">$resource</span><span class="token operator">-&gt;</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;bar&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Obtain value for key... default to a value if not available</span>
<span class="token variable">$value</span> <span class="token operator">=</span> <span class="token variable">$resource</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;zap&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Determine if key exists</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$resource</span><span class="token operator">-&gt;</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token comment">// Forget (remove) a key-value pair</span>
<span class="token variable">$resource</span><span class="token operator">-&gt;</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Get all key-value pairs</span>
<span class="token variable">$data</span> <span class="token operator">=</span> <span class="token variable">$resource</span><span class="token operator">-&gt;</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Determine if resource has any key-value pairs set</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$resource</span><span class="token operator">-&gt;</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function cn(ln,rn){const t=l("router-link"),o=l("RouterLink"),p=l("ExternalLinkIcon");return r(),u("div",null,[k,v,n("nav",m,[n("ul",null,[n("li",null,[s(t,{to:"#how-to-create"},{default:e(()=>[a("How to create")]),_:1})]),n("li",null,[s(t,{to:"#callable-etag-argument"},{default:e(()=>[a("Callable ETag Argument")]),_:1})]),n("li",null,[s(t,{to:"#determine-state-change-success"},{default:e(()=>[a("Determine State Change Success")]),_:1}),n("ul",null,[n("li",null,[s(t,{to:"#default-behaviour"},{default:e(()=>[a("Default Behaviour")]),_:1})]),n("li",null,[s(t,{to:"#custom-behaviour"},{default:e(()=>[a("Custom Behaviour")]),_:1})])])]),n("li",null,[s(t,{to:"#files-and-range-support"},{default:e(()=>[a("Files and Range Support")]),_:1}),n("ul",null,[n("li",null,[s(t,{to:"#default-behaviour-1"},{default:e(()=>[a("Default Behaviour")]),_:1})]),n("li",null,[s(t,{to:"#size-and-range-response"},{default:e(()=>[a("Size and Range Response")]),_:1})])])]),n("li",null,[s(t,{to:"#arbitrary-data"},{default:e(()=>[a("Arbitrary Data")]),_:1}),n("ul",null,[n("li",null,[s(t,{to:"#examples"},{default:e(()=>[a("Examples")]),_:1})])])])])]),h,g,n("ul",null,[b,n("li",null,[f,a(": ("),_,a(") "),n("em",null,[a("See "),s(o,{to:"/archive/v7x/etags/evaluator/download-stream.html#accept-ranges"},{default:e(()=>[a("Accept-Ranges")]),_:1})]),a(".")]),n("li",null,[y,a(": ("),w,a(") Maximum allowed "),n("a",x,[a("range sets"),s(p)]),a(".")])]),R,n("p",null,[a("Whenever "),s(o,{to:"/archive/v7x/etags/evaluator/rfc9110/if-match.html"},{default:e(()=>[$]),_:1}),a(" or "),s(o,{to:"/archive/v7x/etags/evaluator/rfc9110/if-unmodified-since.html"},{default:e(()=>[q]),_:1}),a(" preconditions are requested and evaluated as "),T,a(","),S,a(" a "),n("a",C,[a("412 Precondition Failed"),s(p)]),a(" response will be returned, "),E,a(" (See "),n("a",I,[a("RFC9110 for details"),s(p)]),a(").")]),D,n("ul",null,[n("li",null,[a("When state-change is "),F,n("ul",null,[n("li",null,[a('The evaluator ensures a "412 Precondition Failed" response, via its assigned '),s(o,{to:"/archive/v7x/etags/evaluator/actions.html#abort-precondition-failed"},{default:e(()=>[P]),_:1}),a(".")])])]),n("li",null,[a("When state-change is "),z,n("ul",null,[n("li",null,[a("The request is aborted via evaluator's assigned "),s(o,{to:"/archive/v7x/etags/evaluator/actions.html#abort-state-change-already-succeeded"},{default:e(()=>[A]),_:1}),a(".")])])])]),G,n("p",null,[a("The "),M,a(" will return "),H,a(" as default, when no callback is given for the "),W,a(" constructor argument. This will result in a "),n("a",B,[a("412 Precondition Failed"),s(p)]),a(" response, when "),U,a(" or "),L,a(" precondition fail.")]),N,n("p",null,[a("If your resource is a picture, document or other kind of file that is intended to support "),n("a",O,[V,s(p)]),a(" and "),n("a",Y,[J,s(p)]),a(" requests, then you must specify the "),j,a(" of the resource. The "),K,a(" must always be specified in bytes.")]),Q,n("p",null,[a("The "),X,a("'s preconditions will automatically deal with "),s(o,{to:"/archive/v7x/etags/evaluator/range-validator.html"},{default:e(()=>[a("validation of requested range-sets")]),_:1}),a(". You will, however, have to create an appropriate "),n("a",Z,[a("206 Partial Content"),s(p)]),a(' in your controller or route action, when the "range" state has been set on the resource.')]),nn,n("p",null,[n("em",null,[a("See "),s(o,{to:"/archive/v7x/etags/evaluator/download-stream.html"},{default:e(()=>[a("Download Stream")]),_:1}),a(" response helper, for additional information.")])]),an,n("p",null,[a("Based on the above shown request and action, if a client makes a request with "),sn,a(" and "),en,a(" preconditions, then a "),n("a",tn,[a("206 Partial Content"),s(p)]),a(" response is returned, if the preconditions match.")]),on,n("p",null,[a("Most commonly, you would set key-value pairs inside your resource, by accessing the resource in your custom "),s(o,{to:"/archive/v7x/etags/evaluator/actions.html"},{default:e(()=>[a("actions")]),_:1}),a(".")]),pn])}const dn=i(d,[["render",cn],["__file","resource-context.html.vue"]]);export{dn as default};

import{_ as r,M as l,p as d,q as c,R as n,N as a,U as t,t as e,a1 as i}from"./framework-efe98465.js";const p={},u=n("h1",{id:"upgrade-guide",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#upgrade-guide","aria-hidden":"true"},"#"),e(" Upgrade Guide")],-1),h=n("h2",{id:"from-version-7-x-to-8-x",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#from-version-7-x-to-8-x","aria-hidden":"true"},"#"),e(" From version 7.x to 8.x")],-1),v={class:"table-of-contents"},m=i('<h3 id="php-version-8-2-required" tabindex="-1"><a class="header-anchor" href="#php-version-8-2-required" aria-hidden="true">#</a> PHP version <code>8.2</code> required</h3><p>You need PHP <code>v8.2</code> or higher to run Athenaeum packages.</p><p><strong>Note</strong>: <em>PHP <code>v8.3</code> is supported!</em></p><h3 id="laravel-v11-x" tabindex="-1"><a class="header-anchor" href="#laravel-v11-x" aria-hidden="true">#</a> Laravel <code>v11.x</code></h3>',4),k={href:"https://laravel.com/docs/11.x/upgrade",target:"_blank",rel:"noopener noreferrer"},f=i(`<h3 id="anti-virus-default-scanner" tabindex="-1"><a class="header-anchor" href="#anti-virus-default-scanner" aria-hidden="true">#</a> Anti-Virus Default Scanner</h3><p>In version Athenaeum <code>v7.x</code>, a <code>NullScanner</code> was returned as the default scanner, when no profile was specified. The default scanner has now been changed to <code>ClamAv</code>, when no profile is specified.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Antivirus<span class="token punctuation">\\</span>Facades<span class="token punctuation">\\</span>Antivirus</span><span class="token punctuation">;</span>

<span class="token variable">$scanner</span> <span class="token operator">=</span> <span class="token class-name static-context">Antivirus</span><span class="token operator">::</span><span class="token function">profile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ClamAv</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can change this behaviour by editing your <code>config/antivirus.php</code> configuration file.</p><h3 id="validated-api-request-after" tabindex="-1"><a class="header-anchor" href="#validated-api-request-after" aria-hidden="true">#</a> Validated API Request <code>after()</code></h3>`,5),b=n("code",null,"ValidatedApiRequest",-1),g=n("code",null,"after()",-1),_={href:"https://github.com/aedart/athenaeum/issues/168",target:"_blank",rel:"noopener noreferrer"},y={href:"https://github.com/aedart/athenaeum/issues/167",target:"_blank",rel:"noopener noreferrer"},w=n("code",null,"afterValidation()",-1),x=i(`<p><strong><em>❌ previously</em></strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">namespace</span> <span class="token package">Acme<span class="token punctuation">\\</span>Requests</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Foundation<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>FormRequest</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">ListUsersRequest</span> exends FormRequest
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">after</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Validator</span> <span class="token variable">$validator</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>        
        <span class="token comment">// ...not shown</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><em>✔️ Now</em></strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">namespace</span> <span class="token package">Acme<span class="token punctuation">\\</span>Requests</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Foundation<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>FormRequest</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">ListUsersRequest</span> exends FormRequest
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">afterValidation</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Validator</span> <span class="token variable">$validator</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>        
        <span class="token comment">// ...not shown</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flysystem" tabindex="-1"><a class="header-anchor" href="#flysystem" aria-hidden="true">#</a> Flysystem</h3>`,5),R=n("code",null,"RecordTypes",-1),A=n("code",null,"Visibility",-1),V={href:"https://www.php.net/manual/en/language.types.enumerations.php",target:"_blank",rel:"noopener noreferrer"},q=n("code",null,"\\Aedart\\Contracts\\Flysystem\\Db",-1),P={href:"https://github.com/Trukes",target:"_blank",rel:"noopener noreferrer"},T=n("em",null,"should not",-1),F=n("code",null,"const",-1),I={href:"https://www.php.net/manual/en/language.enumerations.backed.php",target:"_blank",rel:"noopener noreferrer"},N=n("code",null,"value",-1),L=i(`<p><strong><em>❌ previously</em></strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Contracts<span class="token punctuation">\\</span>Flysystem<span class="token punctuation">\\</span>Visibility</span><span class="token punctuation">;</span>

<span class="token variable">$visibility</span> <span class="token operator">=</span> <span class="token class-name static-context">Visibility</span><span class="token operator">::</span><span class="token constant">PRIVATE</span><span class="token punctuation">;</span> <span class="token comment">// private</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><em>✔️ Now</em></strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Contracts<span class="token punctuation">\\</span>Flysystem<span class="token punctuation">\\</span>Visibility</span><span class="token punctuation">;</span>

<span class="token variable">$visibility</span> <span class="token operator">=</span> <span class="token class-name static-context">Visibility</span><span class="token operator">::</span><span class="token constant">PRIVATE</span><span class="token operator">-&gt;</span><span class="token property">value</span><span class="token punctuation">;</span> <span class="token comment">// private</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="validation" tabindex="-1"><a class="header-anchor" href="#validation" aria-hidden="true">#</a> Validation</h3><p>The <code>AlphaDashDot</code> and <code>SemanticVersion</code> validation rules now inherit from <code>BaseValidationRule</code>, in <code>\\Aedart\\Validation\\Rules</code>. If you are extending these validation rules, then you may have to adapt your code.</p><p>Additionally, if you have validation rules that inherit from <code>\\Aedart\\Validation\\Rules\\BaseRule</code> (<em>removed</em>), then you must upgrade them to inherit from the new <code>BaseValidationRule</code>.</p><p><strong><em>❌ previously</em></strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Validation<span class="token punctuation">\\</span>Rules<span class="token punctuation">\\</span>BaseRule</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">MyValidationRule</span> <span class="token keyword">extends</span> <span class="token class-name">BaseRule</span>
<span class="token punctuation">{</span>
    <span class="token comment">// ...not shown...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><em>✔️ Now</em></strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Validation<span class="token punctuation">\\</span>Rules<span class="token punctuation">\\</span>BaseValidationRule</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">MyValidationRule</span> <span class="token keyword">extends</span> <span class="token class-name">BaseValidationRule</span>
<span class="token punctuation">{</span>
    <span class="token comment">// ...not shown...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),C={href:"https://laravel.com/docs/11.x/validation#custom-validation-rules",target:"_blank",rel:"noopener noreferrer"},B=n("h3",{id:"trait-tester",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#trait-tester","aria-hidden":"true"},"#"),e(" Trait Tester")],-1),H=n("code",null,"TraitTester",-1),D=n("code",null,"\\Aedart\\Testing\\Helpers",-1),E={href:"https://github.com/mockery/mockery",target:"_blank",rel:"noopener noreferrer"},M=n("code",null,"Mockery",-1),S=n("h3",{id:"password-rehashing-action",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#password-rehashing-action","aria-hidden":"true"},"#"),e(" Password Rehashing Action")],-1),G=n("code",null,"v11.x",-1),U={href:"https://laravel.com/docs/11.x/releases#automatic-password-rehashing",target:"_blank",rel:"noopener noreferrer"},$=n("code",null,"RehashPasswordIfNeeded",-1),O=n("code",null,"PasswordWasRehashed",-1),Y=n("code",null,"\\Aedart\\Auth\\Fortify",-1),j=i('<h3 id="random-int" tabindex="-1"><a class="header-anchor" href="#random-int" aria-hidden="true">#</a> Random Int</h3><p>The <code>Math::randomInt</code>, in <code>\\Aedart\\Utils</code>, has been deprecated. Please use <code>Math::randomizer()-&gt;int()</code> instead.</p><h3 id="removed-deprecated-components" tabindex="-1"><a class="header-anchor" href="#removed-deprecated-components" aria-hidden="true">#</a> Removed Deprecated Components</h3><p>Several deprecated components have been removed. Please review the <code>CHANGELOG.md</code> for details.</p><h2 id="onward" tabindex="-1"><a class="header-anchor" href="#onward" aria-hidden="true">#</a> Onward</h2>',5),z={href:"https://github.com/aedart/athenaeum/blob/master/CHANGELOG.md",target:"_blank",rel:"noopener noreferrer"};function W(J,K){const s=l("router-link"),o=l("ExternalLinkIcon");return d(),c("div",null,[u,h,n("nav",v,[n("ul",null,[n("li",null,[a(s,{to:"#from-version-7-x-to-8-x"},{default:t(()=>[e("From version 7.x to 8.x")]),_:1}),n("ul",null,[n("li",null,[a(s,{to:"#php-version-8-2-required"},{default:t(()=>[e("PHP version 8.2 required")]),_:1})]),n("li",null,[a(s,{to:"#laravel-v11-x"},{default:t(()=>[e("Laravel v11.x")]),_:1})]),n("li",null,[a(s,{to:"#anti-virus-default-scanner"},{default:t(()=>[e("Anti-Virus Default Scanner")]),_:1})]),n("li",null,[a(s,{to:"#validated-api-request-after"},{default:t(()=>[e("Validated API Request after()")]),_:1})]),n("li",null,[a(s,{to:"#flysystem"},{default:t(()=>[e("Flysystem")]),_:1})]),n("li",null,[a(s,{to:"#validation"},{default:t(()=>[e("Validation")]),_:1})]),n("li",null,[a(s,{to:"#trait-tester"},{default:t(()=>[e("Trait Tester")]),_:1})]),n("li",null,[a(s,{to:"#password-rehashing-action"},{default:t(()=>[e("Password Rehashing Action")]),_:1})]),n("li",null,[a(s,{to:"#random-int"},{default:t(()=>[e("Random Int")]),_:1})]),n("li",null,[a(s,{to:"#removed-deprecated-components"},{default:t(()=>[e("Removed Deprecated Components")]),_:1})])])]),n("li",null,[a(s,{to:"#onward"},{default:t(()=>[e("Onward")]),_:1})])])]),m,n("p",null,[e("Please read Laravel's "),n("a",k,[e("upgrade guide"),a(o)]),e(", before continuing here.")]),f,n("p",null,[e("The "),b,e(` no longer overwrites Laravel's "class based `),g,e(' validation rules". '),n("a",_,[e("#168"),a(o)]),e(", "),n("a",y,[e("#167"),a(o)]),e(". Now, you need to overwrite the "),w,e(", if you wish to perform post validation logic.")]),x,n("p",null,[e("The "),R,e(" and "),A,e(" interface has been converted into an "),n("a",V,[e("enum"),a(o)]),e(", in "),q,e(" ("),n("em",null,[e("contributed by "),n("a",P,[e("Trukes"),a(o)])]),e("). This change "),T,e(" affect your existing code, unless you are directly dependent on previous "),F,e(" values in the defined interfaces. If that is the case, then you might have to explicitly require the enum case's "),n("a",I,[N,a(o)]),e(".")]),L,n("p",null,[e("See the source code and "),n("a",C,[e("Laravel Validation Rules"),a(o)]),e(" for additional information.")]),B,n("p",null,[e("The "),H,e(" in "),D,e(" has been reworked to use "),n("a",E,[M,a(o)]),e(", instead of the previous trait testing utilities offered by PHPUnit. This change should not affect you, unless you are extending / overwriting this testing utility.")]),S,n("p",null,[e("Automatic password rehashing has become a default part of Laravel, since version "),G,e(" ("),n("em",null,[e("see "),n("a",U,[e("Laravel documentation"),a(o)]),e(" for details")]),e("). For this reason, the "),$,e(" action and "),O,e(", in "),Y,e(", have been deprecated and will be removed in the next major version.")]),j,n("p",null,[e("More extensive details can be found in the "),n("a",z,[e("changelog"),a(o)]),e(".")])])}const X=r(p,[["render",W],["__file","upgrade-guide.html.vue"]]);export{X as default};

import{_ as t,M as o,p,q as c,R as s,t as n,N as e,a1 as i}from"./framework-efe98465.js";const l={},r=s("h1",{id:"introduction",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#introduction","aria-hidden":"true"},"#"),n(" Introduction")],-1),u={href:"https://codeception.com/",target:"_blank",rel:"noopener noreferrer"},d={href:"https://packagist.org/packages/orchestra/testbench",target:"_blank",rel:"noopener noreferrer"},k=s("a",{href:"../core"},"Athenaeum Core Application",-1),m={href:"https://packagist.org/packages/mockery/mockery",target:"_blank",rel:"noopener noreferrer"},v={href:"https://packagist.org/packages/fakerphp/faker",target:"_blank",rel:"noopener noreferrer"},h=i(`<h2 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h2><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package"><span class="token punctuation">\\</span>Aedart<span class="token punctuation">\\</span>Testing<span class="token punctuation">\\</span>TestCases<span class="token punctuation">\\</span>UnitTestCase</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">FuelConsumptionTest</span> <span class="token keyword">extends</span> <span class="token class-name">UnitTestCase</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * <span class="token keyword">@test</span> 
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">calculatesFuel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$faker</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getFaker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$kilometers</span> <span class="token operator">=</span> <span class="token variable">$faker</span><span class="token operator">-&gt;</span><span class="token function">numberBetween</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token variable">$consumption</span> <span class="token operator">=</span> <span class="token class-name static-context">FuelConsumption</span><span class="token operator">::</span><span class="token function">calculate</span><span class="token punctuation">(</span><span class="token variable">$kilometers</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token comment">// ... remaining not shown ...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function b(f,_){const a=o("ExternalLinkIcon");return p(),c("div",null,[r,s("p",null,[n("The Testing package offers various testing utilities, built on top of "),s("a",u,[n("Codeception"),e(a)]),n(" and "),s("a",d,[n("Orchestra Testbench"),e(a)]),n(". It allows you to test Laravel specific components, Laravel's application and offers a few utilities for testing the "),k,n(".")]),s("p",null,[n("Lastly, this package also comes with "),s("a",m,[n("Mockery"),e(a)]),n(" and "),s("a",v,[n("Faker"),e(a)]),n(".")]),h])}const x=t(l,[["render",b],["__file","index.html.vue"]]);export{x as default};

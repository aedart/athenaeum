import{_ as r,M as c,p as l,q as i,R as e,N as a,U as o,t as n,a1 as p}from"./framework-efe98465.js";const d={},u=e("h1",{id:"upgrade-guide",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#upgrade-guide","aria-hidden":"true"},"#"),n(" Upgrade Guide")],-1),h=e("h2",{id:"from-version-4-x-to-5-x",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#from-version-4-x-to-5-x","aria-hidden":"true"},"#"),n(" From version 4.x to 5.x.")],-1),m={class:"table-of-contents"},v=e("h3",{id:"laravel-v8-x",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#laravel-v8-x","aria-hidden":"true"},"#"),n(" Laravel "),e("code",null,"v8.x")],-1),k=e("code",null,"illuminate/*",-1),b=e("code",null,"^8.x",-1),f={href:"https://laravel.com/docs/8.x/upgrade",target:"_blank",rel:"noopener noreferrer"},x=p(`<h3 id="added-bootstrap-in-console-kernel" tabindex="-1"><a class="header-anchor" href="#added-bootstrap-in-console-kernel" aria-hidden="true">#</a> Added <code>bootstrap()</code> in Console <code>Kernel</code></h3><p>As a result of upgrading to Laravel <code>v8.x</code>, a new <code>bootstrap()</code> method was added to the <code>\\Aedart\\Core\\Console\\Kernel</code> component. The <code>runCore()</code> method now invokes the new bootstrap method.</p><p>This change only affects you, if a custom implementation of the Console <code>Kernel</code> is used.</p><h3 id="response-expectations" tabindex="-1"><a class="header-anchor" href="#response-expectations" aria-hidden="true">#</a> Response Expectations</h3><p>The response expectations in Http <code>Client</code> have changed. They are now encapsulated in a <code>ResponseExpectation</code> instance. This means that if you wish to obtain an expectation, you will no longer receive the original callback method.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// Before (version 4.x)</span>
<span class="token variable">$containsUserId</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token variable">$status</span><span class="token punctuation">,</span> <span class="token variable">$response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ... not shown</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token variable">$expectations</span> <span class="token operator">=</span> <span class="token variable">$client</span> 
            <span class="token operator">-&gt;</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token variable">$containsUserId</span><span class="token punctuation">)</span>
            <span class="token operator">-&gt;</span><span class="token function">getExpectations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [ $containsUserId ] Array with provided callable method.</span>

<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$containsUserId</span> <span class="token operator">===</span> <span class="token variable">$expectations</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>

<span class="token comment">// Now (version 5.x)</span>
<span class="token variable">$expectations</span> <span class="token operator">=</span> <span class="token variable">$client</span> 
            <span class="token operator">-&gt;</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token variable">$containsUserId</span><span class="token punctuation">)</span>
            <span class="token operator">-&gt;</span><span class="token function">getExpectations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [ ResponseExpectation ] Array with response expectation instance</span>

<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$containsUserId</span> <span class="token operator">===</span> <span class="token variable">$expectations</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$containsUserId</span> <span class="token operator">===</span> <span class="token variable">$expectations</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token function">getExpectation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Please review <code>\\Aedart\\Contracts\\Http\\Clients\\Responses\\ResponseExpectation</code> for more details.</p><h3 id="http-client-changes" tabindex="-1"><a class="header-anchor" href="#http-client-changes" aria-hidden="true">#</a> Http Client Changes</h3>`,8),_=e("code",null,"Client",-1),g=e("code",null,"Builder",-1),C=e("em",null,"should not",-1),w={href:"https://github.com/aedart/athenaeum/compare",target:"_blank",rel:"noopener noreferrer"},A=p('<h3 id="removed-deprecated-components" tabindex="-1"><a class="header-anchor" href="#removed-deprecated-components" aria-hidden="true">#</a> Removed Deprecated Components</h3><p>The following deprecated components have been removed:</p><ul><li><code>Aedart\\Dto</code> (<em>replaced by <code>Aedart\\Dto\\Dto</code></em>).</li><li><code>Aedart\\ArrayDto</code> (<em>replaced by <code>Aedart\\Dto\\ArrayDto</code></em>).</li><li><code>Aedart\\Console\\CreateAwareOfCommand</code> (<em>replaced by <code>Aedart\\Support\\AwareOf\\Console\\CreateCommand</code></em>).</li><li><code>Aedart\\Console\\CommandBase</code> (<em>replaced by <code>Aedart\\Support\\AwareOf\\Console\\CommandBase</code></em>).</li><li><code>Aedart\\Console\\AwareOfScaffoldCommand</code> (<em>replaced by <code>Aedart\\Support\\AwareOf\\Console\\ScaffoldCommand</code></em>).</li><li>Removed all aware-of helpers in <code>Aedart\\Support\\Properties\\Mixed\\*</code> and <code>Aedart\\Contracts\\Support\\Properties\\Mixed\\*</code> namespaces (<em>replaced by <code>Aedart\\Support\\Properties\\Mixes\\*</code> and <code>Aedart\\Contracts\\Support\\Properties\\Mixes\\*</code></em>).</li></ul><h3 id="onward" tabindex="-1"><a class="header-anchor" href="#onward" aria-hidden="true">#</a> Onward</h3>',4),y={href:"https://github.com/aedart/athenaeum/blob/master/CHANGELOG.md",target:"_blank",rel:"noopener noreferrer"};function $(E,R){const s=c("router-link"),t=c("ExternalLinkIcon");return l(),i("div",null,[u,h,e("nav",m,[e("ul",null,[e("li",null,[a(s,{to:"#from-version-4-x-to-5-x"},{default:o(()=>[n("From version 4.x to 5.x.")]),_:1}),e("ul",null,[e("li",null,[a(s,{to:"#laravel-v8-x"},{default:o(()=>[n("Laravel v8.x")]),_:1})]),e("li",null,[a(s,{to:"#added-bootstrap-in-console-kernel"},{default:o(()=>[n("Added bootstrap() in Console Kernel")]),_:1})]),e("li",null,[a(s,{to:"#response-expectations"},{default:o(()=>[n("Response Expectations")]),_:1})]),e("li",null,[a(s,{to:"#http-client-changes"},{default:o(()=>[n("Http Client Changes")]),_:1})]),e("li",null,[a(s,{to:"#removed-deprecated-components"},{default:o(()=>[n("Removed Deprecated Components")]),_:1})]),e("li",null,[a(s,{to:"#onward"},{default:o(()=>[n("Onward")]),_:1})])])])])]),v,e("p",null,[n("Upgraded the "),k,n(" packages to version "),b,n(". Please review Laravel's "),e("a",f,[n("upgrade guide"),a(t)]),n(" for additional information.")]),x,e("p",null,[n("Several changes have been made to the Http "),_,n(" and it's request "),g,n(". These changes "),C,n(" affect you directly. However, if you have custom implementation of the provided interfaces, then you may have to refactor parts of your code. Review the source code and "),e("a",w,[n("changes made"),a(t)]),n(" for additional information.")]),A,e("p",null,[n("You can review other changes in the "),e("a",y,[n("changelog"),a(t)]),n(".")])])}const U=r(d,[["render",$],["__file","upgrade-guide.html.vue"]]);export{U as default};

import{_ as c,M as i,p as l,q as r,R as n,N as a,U as t,t as s,a1 as o}from"./framework-efe98465.js";const d={},u=n("h1",{id:"recording",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#recording","aria-hidden":"true"},"#"),s(" Recording")],-1),k={class:"table-of-contents"},v=o(`<h2 id="enable-recording-changes" tabindex="-1"><a class="header-anchor" href="#enable-recording-changes" aria-hidden="true">#</a> Enable Recording Changes</h2><p>In your Eloquent model, add the <code>RecordsChanges</code> trait, to enable automatic recording of changes.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">namespace</span> <span class="token package">Acme<span class="token punctuation">\\</span>Models</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Database<span class="token punctuation">\\</span>Eloquent<span class="token punctuation">\\</span>Model</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Audit<span class="token punctuation">\\</span>Concerns</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">Category</span> <span class="token keyword">extends</span> <span class="token class-name">Model</span>
<span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token package">Concerns<span class="token punctuation">\\</span>ChangeRecording</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Whenever you change the model&#39;s attributes and save the changes, a new audit trail record will be stored in the database.</p><h2 id="retrieve-audit-trail" tabindex="-1"><a class="header-anchor" href="#retrieve-audit-trail" aria-hidden="true">#</a> Retrieve Audit Trail</h2>`,5),h=n("code",null,"recordedChanges()",-1),m={href:"https://laravel.com/docs/11.x/eloquent-relationships",target:"_blank",rel:"noopener noreferrer"},b=o(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$changes</span> <span class="token operator">=</span> <span class="token variable">$category</span>
    <span class="token operator">-&gt;</span><span class="token function">recordedChanges</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="customise-recorded-changes" tabindex="-1"><a class="header-anchor" href="#customise-recorded-changes" aria-hidden="true">#</a> Customise Recorded Changes</h2><p>There are a number of ways that you can customise the data / attributes that will be recorded. In this section, some of them are briefly introduced.</p><h3 id="hide-attributes" tabindex="-1"><a class="header-anchor" href="#hide-attributes" aria-hidden="true">#</a> Hide Attributes</h3><p>If your model processes sensitive attributes, e.g. passwords, and you do not wish to be included in an audit trail entry, then you can hide it by defining it in the <code>$hiddenInAuditTrail</code> property.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">class</span> <span class="token class-name-definition class-name">User</span> <span class="token keyword">extends</span> <span class="token class-name">Model</span>
<span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token package">Concerns<span class="token punctuation">\\</span>ChangeRecording</span><span class="token punctuation">;</span>
    
    <span class="token keyword">protected</span> <span class="token keyword type-declaration">array</span><span class="token operator">|</span><span class="token keyword type-declaration">null</span> <span class="token variable">$hiddenInAuditTrail</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
        <span class="token string single-quoted-string">&#39;password&#39;</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Alternatively, you may also define attributes to be hidden by overwriting the <code>attributesToHideForAudit()</code> method.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">class</span> <span class="token class-name-definition class-name">User</span> <span class="token keyword">extends</span> <span class="token class-name">Model</span>
<span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token package">Concerns<span class="token punctuation">\\</span>ChangeRecording</span><span class="token punctuation">;</span>
    
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">attributesToHideForAudit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">array</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;password&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;token&#39;</span><span class="token punctuation">,</span>
            <span class="token comment">// ...etc</span>
        <span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="format-attributes" tabindex="-1"><a class="header-anchor" href="#format-attributes" aria-hidden="true">#</a> Format Attributes</h3><p>The <code>formatChangedData()</code> enables you to format attributes before they are stored within an audit trail record. The first argument contains the filtered attributes (<em>attributes intended to be saved in audit trail record</em>). The second argument (<em>$type</em>) is the name of the event, e.g. <code>created, updated, deleted, restored, force-deleted... etc</code>.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">class</span> <span class="token class-name-definition class-name">Category</span> <span class="token keyword">extends</span> <span class="token class-name">Model</span>
<span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token package">Concerns<span class="token punctuation">\\</span>ChangeRecording</span><span class="token punctuation">;</span>
    
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">formatChangedData</span><span class="token punctuation">(</span><span class="token keyword type-declaration">array</span><span class="token operator">|</span><span class="token keyword type-declaration">null</span> <span class="token variable">$filtered</span><span class="token punctuation">,</span> <span class="token keyword type-hint">string</span> <span class="token variable">$type</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">array</span><span class="token operator">|</span><span class="token keyword type-declaration">null</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$filtered</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">$filtered</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token variable">$filtered</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        
        <span class="token keyword">return</span> <span class="token variable">$filtered</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="skip-a-recording" tabindex="-1"><a class="header-anchor" href="#skip-a-recording" aria-hidden="true">#</a> Skip a Recording</h2><p>In situations when you wish to skip recording an audit trail entry, e.g. for a single operation, use the <code>skipRecordingNextChange()</code> method.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$category</span>
    <span class="token operator">-&gt;</span><span class="token function">skipRecordingNextChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
        <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Products&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="onward" tabindex="-1"><a class="header-anchor" href="#onward" aria-hidden="true">#</a> Onward</h2><p>For additional possibilities to format and customise audit trail entries, please review the source code of <code>\\Aedart\\Audit\\Concerns\\ChangeRecording</code>.</p>`,16);function g(f,y){const e=i("router-link"),p=i("ExternalLinkIcon");return l(),r("div",null,[u,n("nav",k,[n("ul",null,[n("li",null,[a(e,{to:"#enable-recording-changes"},{default:t(()=>[s("Enable Recording Changes")]),_:1})]),n("li",null,[a(e,{to:"#retrieve-audit-trail"},{default:t(()=>[s("Retrieve Audit Trail")]),_:1})]),n("li",null,[a(e,{to:"#customise-recorded-changes"},{default:t(()=>[s("Customise Recorded Changes")]),_:1}),n("ul",null,[n("li",null,[a(e,{to:"#hide-attributes"},{default:t(()=>[s("Hide Attributes")]),_:1})]),n("li",null,[a(e,{to:"#format-attributes"},{default:t(()=>[s("Format Attributes")]),_:1})])])]),n("li",null,[a(e,{to:"#skip-a-recording"},{default:t(()=>[s("Skip a Recording")]),_:1})]),n("li",null,[a(e,{to:"#onward"},{default:t(()=>[s("Onward")]),_:1})])])]),v,n("p",null,[s("To retrieve an audit trail, for your model, you can use the "),h,s(),n("a",m,[s("relationship method"),a(p)]),s(".")]),b])}const _=c(d,[["render",g],["__file","record-changes.html.vue"]]);export{_ as default};

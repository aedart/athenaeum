import{_ as o,M as i,p,q as l,R as a,N as e,U as t,t as s,a1 as d}from"./framework-efe98465.js";const c={},r=a("h1",{id:"payload",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#payload","aria-hidden":"true"},"#"),s(" Payload")],-1),u={class:"table-of-contents"},h=d(`<h2 id="via-request-methods" tabindex="-1"><a class="header-anchor" href="#via-request-methods" aria-hidden="true">#</a> Via Request Methods</h2><p>The <code>post()</code>, <code>put()</code>, <code>patch()</code>, <code>delete()</code> and <code>request()</code> methods allow you to set a request&#39;s payload data, via an array of key-value pairs.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$client</span>
        <span class="token operator">-&gt;</span><span class="token function">patch</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/users/5547&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;email&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;smith.henrikson@acme.org&#39;</span>
        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="add-data" tabindex="-1"><a class="header-anchor" href="#add-data" aria-hidden="true">#</a> Add Data</h2><p>If you require to build up your request&#39;s payload gradually, then you can achieve such using the <code>withData()</code> method. The method accepts an array, which is merged with the request&#39;s already added payload data, before it is sent.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$builder</span> <span class="token operator">=</span> <span class="token variable">$client</span>
        <span class="token operator">-&gt;</span><span class="token function">withData</span><span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Sophia&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Later...</span>
<span class="token variable">$builder</span><span class="token operator">-&gt;</span><span class="token function">withData</span><span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;email&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;sophia.wayne@acme.org&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="set-data" tabindex="-1"><a class="header-anchor" href="#set-data" aria-hidden="true">#</a> Set Data</h2><p>Alternatively, you can specify the entire payload using <code>setData()</code>. The method <strong>will overwrite</strong> payload data that has already been set.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$builder</span> <span class="token operator">=</span> <span class="token variable">$client</span>
        <span class="token operator">-&gt;</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Sophia&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;email&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;sophia.wayne@acme.org&#39;</span>
        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="raw-payload" tabindex="-1"><a class="header-anchor" href="#raw-payload" aria-hidden="true">#</a> Raw Payload</h2><p>In situations where you require complete control of the request&#39;s body, use <code>withRawPayload()</code>. Unlike the previous illustrated methods, the raw-payload method allows you to specify the entire request body.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$builder</span> <span class="token operator">=</span> <span class="token variable">$client</span>
        <span class="token operator">-&gt;</span><span class="token function">withRawPayload</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;raw request body...&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>You cannot set a request&#39;s payload using both raw-payload and data (<code>withData()</code>, <code>setData()</code> or via request methods).</p><p><a href="./attachments">Attachments</a> specified prior or after setting the raw-payload, will be ignored.</p></div>`,13);function g(k,v){const n=i("router-link");return p(),l("div",null,[r,a("nav",u,[a("ul",null,[a("li",null,[e(n,{to:"#via-request-methods"},{default:t(()=>[s("Via Request Methods")]),_:1})]),a("li",null,[e(n,{to:"#add-data"},{default:t(()=>[s("Add Data")]),_:1})]),a("li",null,[e(n,{to:"#set-data"},{default:t(()=>[s("Set Data")]),_:1})]),a("li",null,[e(n,{to:"#raw-payload"},{default:t(()=>[s("Raw Payload")]),_:1})])])]),h])}const b=o(c,[["render",g],["__file","data.html.vue"]]);export{b as default};

import{_ as p,M as a,p as c,q as l,R as n,t as s,N as e,U as i,a1 as r}from"./framework-efe98465.js";const u={},d=n("h1",{id:"filename",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#filename","aria-hidden":"true"},"#"),s(" Filename")],-1),k=n("p",null,[n("em",null,[n("strong",null,"Available since"),s(),n("code",null,"v7.4.x")])],-1),m=n("code",null,"uri()",-1),h=n("code",null,"uri",-1),f=n("code",null,"filename()",-1),v={href:"https://www.php.net/manual/en/function.basename",target:"_blank",rel:"noopener noreferrer"},_=n("code",null,"filename",-1),g=r(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$stream</span> <span class="token operator">=</span> <span class="token class-name static-context">FileStream</span><span class="token operator">::</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;houses.txt&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;rb&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token variable">$stream</span><span class="token operator">-&gt;</span><span class="token function">uri</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// /home/my_user/files/houses.txt</span>
<span class="token keyword">echo</span> <span class="token variable">$stream</span><span class="token operator">-&gt;</span><span class="token function">filename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// houses.txt</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If you specify a custom <code>filename</code> metadata, then it will be favoured instead of the basename.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$stream</span> <span class="token operator">=</span> <span class="token class-name static-context">FileStream</span><span class="token operator">::</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;houses.txt&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;rb&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$stream</span><span class="token operator">-&gt;</span><span class="token function">meta</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;filename&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;my_file.txt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token variable">$stream</span><span class="token operator">-&gt;</span><span class="token function">uri</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// /home/my_user/files/houses.txt</span>
<span class="token keyword">echo</span> <span class="token variable">$stream</span><span class="token operator">-&gt;</span><span class="token function">filename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// my_file.txt</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function b(x,w){const t=a("RouterLink"),o=a("ExternalLinkIcon");return c(),l("div",null,[d,k,n("p",null,[s("There are two methods for obtaining the filename. The first is "),m,s(", which return the "),h,s(),e(t,{to:"/archive/v7x/streams/usage/meta.html"},{default:i(()=>[s("metadata")]),_:1}),s(". The second is "),f,s(", which returns the file's "),n("a",v,[s("basename"),e(o)]),s(", or a custom "),_,s(" entry from the stream's metadata.")]),g])}const q=p(u,[["render",b],["__file","filename.html.vue"]]);export{q as default};

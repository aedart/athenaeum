import{_ as r,M as i,p,q as d,R as e,N as a,U as t,t as n,a1 as c}from"./framework-efe98465.js";const l={},u=e("h1",{id:"upgrade-guide",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#upgrade-guide","aria-hidden":"true"},"#"),n(" Upgrade Guide")],-1),h=e("h2",{id:"from-version-3-x-to-4-x",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#from-version-3-x-to-4-x","aria-hidden":"true"},"#"),n(" From version 3.x to 4.x.")],-1),m={class:"table-of-contents"},k=e("h3",{id:"laravel-v7-6-x",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#laravel-v7-6-x","aria-hidden":"true"},"#"),n(" Laravel "),e("code",null,"v7.6.x")],-1),v=e("code",null,"illuminate/*",-1),g=e("code",null,"^7.6.x",-1),f={href:"https://laravel.com/docs/7.x/upgrade",target:"_blank",rel:"noopener noreferrer"},b=e("h3",{id:"symfony-v5-x",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#symfony-v5-x","aria-hidden":"true"},"#"),n(" Symfony "),e("code",null,"v5.x")],-1),_=e("code",null,"symfony/*",-1),x=e("code",null,"^5.x",-1),w={href:"https://symfony.com/doc/current/setup/upgrade_major.html",target:"_blank",rel:"noopener noreferrer"},y=c(`<h3 id="http-client-redesigned" tabindex="-1"><a class="header-anchor" href="#http-client-redesigned" aria-hidden="true">#</a> Http <code>Client</code> Redesigned</h3><p>On the surface, the Http <code>Client</code> remains almost the same. Using all the request methods still work as in previous version. However, when using the fluent methods, such as <code>withHeaders()</code>, a Http Query <code>Builder</code> is returned instead of the Http <code>Client</code></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// Version 3.x - \\Aedart\\Contracts\\Http\\Clients\\Client returned</span>
<span class="token variable">$client</span> <span class="token operator">=</span> <span class="token variable">$client</span><span class="token operator">-&gt;</span><span class="token function">withHeaders</span><span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;Content-Type&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;application/json&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Now (version 4.x) - \\Aedart\\Contracts\\Http\\Clients\\Requests\\Builder returned</span>
<span class="token variable">$builder</span> <span class="token operator">=</span> <span class="token variable">$client</span><span class="token operator">-&gt;</span><span class="token function">withHeaders</span><span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;Content-Type&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;application/json&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The <code>Builder</code> is still connected the <code>Client</code> instance, which will continue to allow method chaining.</p><h4 id="custom-http-client" tabindex="-1"><a class="header-anchor" href="#custom-http-client" aria-hidden="true">#</a> Custom Http Client</h4><p>If you created your own custom Http <code>Client</code>, based on Athenaeum <code>v3.x</code>, then you are unfortunately forced to migrate your changes into a new custom client. Chances are very high that your client will not work, due to the heavy redesign of the existing client class.</p><h3 id="ioc-vs-app-binding" tabindex="-1"><a class="header-anchor" href="#ioc-vs-app-binding" aria-hidden="true">#</a> IoC vs. <code>app</code> binding</h3><p><code>\\Aedart\\Container\\IoC</code> no longer highjacks Laravel&#39;s <code>app</code> binding automatically, when <code>getInstance()</code> is invoked. This was used to get some of Laravel&#39;s components to work outside the scope of a Laravel application. Yet, this was a &quot;hack&quot; that potentially could lead to conflicted with Laravel&#39;s <code>Application</code> class, which was never intended.</p><p>If you rely on this behaviour, e.g. in your tests, then you now need to invoke <code>registerAsApplication()</code> manually, in order to register the <code>IoC</code> as the <code>app</code> binding.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// Version 3.x - \`app\` binding highjacked!</span>
<span class="token variable">$ioc</span> <span class="token operator">=</span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Aedart<span class="token punctuation">\\</span>Container<span class="token punctuation">\\</span>IoC</span><span class="token operator">::</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Now (version 4.x) - you must manually declare that you wish </span>
<span class="token comment">// to register IoC as the \`app\` binding.</span>
<span class="token variable">$ioc</span> <span class="token operator">=</span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Aedart<span class="token punctuation">\\</span>Container<span class="token punctuation">\\</span>IoC</span><span class="token operator">::</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$ioc</span><span class="token operator">-&gt;</span><span class="token function">registerAsApplication</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>You should NOT invoke <code>registerAsApplication()</code> if you are using the <code>IoC</code> component within a Laravel application. It will highjack the <code>app</code> binding, which will cause your application to behave unfavourable.</p></div><h3 id="deprecated-dto-abstractions" tabindex="-1"><a class="header-anchor" href="#deprecated-dto-abstractions" aria-hidden="true">#</a> Deprecated Dto abstractions</h3><p><code>\\Aedart\\Dto</code> abstraction has been deprecated and will be removed in next major version. It has been replaced by <code>\\Aedart\\Dto\\Dto</code>.</p><p><code>\\Aedart\\ArrayDto</code> abstraction has also been deprecated. It&#39;s replaced by <code>\\Aedart\\Dto\\ArrayDto</code>.</p><h3 id="deprecated-mixed-aware-of-helpers" tabindex="-1"><a class="header-anchor" href="#deprecated-mixed-aware-of-helpers" aria-hidden="true">#</a> Deprecated <code>Mixed</code> Aware-of Helpers</h3>`,15),C=e("code",null,"Aedart\\Support\\Properties\\Mixed",-1),A=e("code",null,"Mixed",-1),H={href:"https://www.php.net/manual/en/reserved.other-reserved-words.php",target:"_blank",rel:"noopener noreferrer"},I=e("code",null,"v7.0",-1),T=e("code",null,"Aedart\\Contracts\\Support\\Properties\\Mixed",-1),P=c(`<p>You can find replacements within the <code>Aedart\\Support\\Properties\\Mixes</code> and <code>Aedart\\Contracts\\Support\\Properties\\Mixes</code> namespaces.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// Version 3.x - deprecated Aware-of Helpers</span>
<span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Contracts<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>Properties<span class="token punctuation">\\</span>Mixed<span class="token punctuation">\\</span>HtmlAware</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>Properties<span class="token punctuation">\\</span>Mixed<span class="token punctuation">\\</span>HtmlTrait</span><span class="token punctuation">;</span>

<span class="token comment">// Now (version 4.x)</span>
<span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Contracts<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>Properties<span class="token punctuation">\\</span>Mixes<span class="token punctuation">\\</span>HtmlAware</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Aedart<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>Properties<span class="token punctuation">\\</span>Mixes<span class="token punctuation">\\</span>HtmlTrait</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="deprecated-scaffold-commands" tabindex="-1"><a class="header-anchor" href="#deprecated-scaffold-commands" aria-hidden="true">#</a> Deprecated Scaffold Commands</h3><p><code>\\Aedart\\Console\\CommandBase</code>, <code>\\Aedart\\Console\\AwareOfScaffoldCommand</code> and <code>\\Aedart\\Console\\CreateAwareOfCommand</code> have been deprecated. These commands will be removed in next major version. Replacements are available within the <a href="./support">Support package</a>.</p><p>The original commands are still available using the <code>athenaeum</code> console application.</p><h3 id="testing-packages" tabindex="-1"><a class="header-anchor" href="#testing-packages" aria-hidden="true">#</a> Testing Packages</h3>`,6),S={href:"https://github.com/Codeception/Codeception",target:"_blank",rel:"noopener noreferrer"},D={href:"https://github.com/orchestral/testbench",target:"_blank",rel:"noopener noreferrer"},q=e("code",null,"composer.json",-1),M=e("code",null,"aedart/athenaeum",-1),N=e("em",null,"discouraged, you should use the individual packages instead",-1),L=e("h3",{id:"onward",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#onward","aria-hidden":"true"},"#"),n(" Onward")],-1),j={href:"https://github.com/aedart/athenaeum/blob/master/CHANGELOG.md",target:"_blank",rel:"noopener noreferrer"};function O(B,V){const s=i("router-link"),o=i("ExternalLinkIcon");return p(),d("div",null,[u,h,e("nav",m,[e("ul",null,[e("li",null,[a(s,{to:"#from-version-3-x-to-4-x"},{default:t(()=>[n("From version 3.x to 4.x.")]),_:1}),e("ul",null,[e("li",null,[a(s,{to:"#laravel-v7-6-x"},{default:t(()=>[n("Laravel v7.6.x")]),_:1})]),e("li",null,[a(s,{to:"#symfony-v5-x"},{default:t(()=>[n("Symfony v5.x")]),_:1})]),e("li",null,[a(s,{to:"#http-client-redesigned"},{default:t(()=>[n("Http Client Redesigned")]),_:1})]),e("li",null,[a(s,{to:"#ioc-vs-app-binding"},{default:t(()=>[n("IoC vs. app binding")]),_:1})]),e("li",null,[a(s,{to:"#deprecated-dto-abstractions"},{default:t(()=>[n("Deprecated Dto abstractions")]),_:1})]),e("li",null,[a(s,{to:"#deprecated-mixed-aware-of-helpers"},{default:t(()=>[n("Deprecated Mixed Aware-of Helpers")]),_:1})]),e("li",null,[a(s,{to:"#deprecated-scaffold-commands"},{default:t(()=>[n("Deprecated Scaffold Commands")]),_:1})]),e("li",null,[a(s,{to:"#testing-packages"},{default:t(()=>[n("Testing Packages")]),_:1})]),e("li",null,[a(s,{to:"#onward"},{default:t(()=>[n("Onward")]),_:1})])])])])]),k,e("p",null,[n("Upgraded the "),v,n(" packages to version "),g,n(". Please review Laravel's "),e("a",f,[n("upgrade guide"),a(o)]),n(" for additional information.")]),b,e("p",null,[n("Upgraded the "),_,n(" packages to version "),x,n(". Please review Symfony's "),e("a",w,[n("upgrade guide"),a(o)]),n(" for additional information.")]),y,e("p",null,[n("All Aware-of helpers found within the "),C,n(" are now deprecated. The term "),A,n(" has been a "),e("a",H,[n("soft-reserved keyword"),a(o)]),n(" since PHP "),I,n(", and there is a chance that PHP might use this keyword in the future. These helper will be removed in the next major version. The equivalent is true for the corresponding interfaces, found in the "),T,n(" namespace.")]),P,e("p",null,[e("a",S,[n("Codeception"),a(o)]),n(" and "),e("a",D,[n("Orchestra Testbench"),a(o)]),n(" are now defined as dev-dependencies. If you relied on these packages, then you need to manually require them in your "),q,n(". This change will only affect you, if you continue to use the full "),M,n(" ("),N,n(").")]),L,e("p",null,[n("You can review other changes in the "),e("a",j,[n("changelog"),a(o)]),n(".")])])}const R=r(l,[["render",O],["__file","upgrade-guide.html.vue"]]);export{R as default};
